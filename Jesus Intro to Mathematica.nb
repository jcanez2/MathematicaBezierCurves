(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    653489,      12550]
NotebookOptionsPosition[    635074,      12227]
NotebookOutlinePosition[    635512,      12244]
CellTagsIndexPosition[    635469,      12241]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[{
 StyleBox["An Introduction to Mathematica (MM) ",
  FontSize->48],
 StyleBox["(This is a title, style with an increased font size, Shortcut for \
title is (Alt + 1), Increase size is (Alt + \[OpenCurlyDoubleQuote]=\
\[CloseCurlyDoubleQuote]))",
  FontSize->18]
}], "Title",
 CellChangeTimes->{{3.8096953418713245`*^9, 3.8096953657767467`*^9}, {
   3.8096956825136538`*^9, 3.809695692662577*^9}, {3.8096957515105047`*^9, 
   3.8096957527515154`*^9}, 3.809696170918707*^9, {3.809696251151553*^9, 
   3.8096962543115435`*^9}, {3.8097039446804943`*^9, 
   3.8097039465194864`*^9}, {3.8097039973833904`*^9, 
   3.8097040226483426`*^9}, {3.80970413320813*^9, 
   3.8097041678720665`*^9}},ExpressionUUID->"2ae509ba-0495-4e7d-94cc-\
0c6563b5d256"],

Cell[TextData[{
 StyleBox["Jesus Canez: (This is a subtitle style with and increased font \
size)\nSeptember 2020 (The Year of the Devil)\t",
  FontSize->36],
 StyleBox["\t", "Subtitle"]
}], "Subtitle",
 CellChangeTimes->{{3.8096957575743847`*^9, 3.8096958309920025`*^9}, {
  3.8097040276803317`*^9, 3.8097040419683065`*^9}},
 FormatType->
  "TextForm",ExpressionUUID->"eaae54c0-3264-414d-ade0-caeae0c5f4d4"],

Cell[TextData[{
 "This is  a sample Mathematica notebook to help get you started. (This is a \
subtitle style, shortcut is (Alt + 2))\nMuch of the functionality you will \
need in your class work is included here.\n\n",
 StyleBox["Cells: (This is bolded, shortcut is (Ctrl + B)",
  FontWeight->"Bold"],
 "\nCells are the  building blocks of a Mathematica notebook.\nA cell is \
indicated by the brackets on the right hand side of the notebook.\nThe \
default cell type is for executable code.\nTo format ",
 StyleBox["this",
  FontSlant->"Italic"],
 " cell for text, we click on the cell\[CloseCurlyQuote]s bracket and select \
Format -> Style -> Subtitle"
}], "Subtitle",
 CellChangeTimes->{{3.8096958347823515`*^9, 3.8096960554489264`*^9}, {
  3.809696409997233*^9, 3.8096964155112305`*^9}, {3.809696473327123*^9, 
  3.809696474759121*^9}, {3.8097040446882987`*^9, 3.809704082304226*^9}, {
  3.8097041132481675`*^9, 
  3.8097041170164766`*^9}},ExpressionUUID->"9790c444-3b1d-43a0-8dca-\
23dbfbbd33ae"],

Cell[TextData[{
 StyleBox["Kernel:",
  FontWeight->"Bold"],
 "\nThe Kernel evaluates code in a notebook on a cell by cell basis.\nTo \
evaluate the cell below, Place the cursor in the cell below and press \
Shift-Enter.\nYou will find the command under Evaluation -> Evaluate Cells.\n\
Also try Evaluate Notebook -- this evaluates all cells with executable code.\n\
(If MM won\[CloseCurlyQuote]t stop evaluating because of an error, stop it \
with evaluation -> Quit Kernel.)"
}], "Subtitle",
 CellChangeTimes->{{3.8096964236672196`*^9, 3.809696546542984*^9}, {
  3.8096966502137756`*^9, 
  3.809696750094589*^9}},ExpressionUUID->"4ac7822a-2b8f-4682-9bc8-\
0497816ab03e"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"(*", 
    RowBox[{"some", " ", "simple", " ", "code"}], " ", "*)"}],
   FontSize->16], 
  StyleBox["\[IndentingNewLine]",
   FontSize->16], 
  RowBox[{
   StyleBox[
    RowBox[{
     RowBox[{"a", " ", "=", " ", "3"}], ";"}],
    FontSize->16], 
   StyleBox["\[IndentingNewLine]",
    FontSize->16], 
   StyleBox[
    RowBox[{"b", " ", "=", " ", "2"}],
    FontSize->16], 
   StyleBox["\[IndentingNewLine]",
    FontSize->16], 
   StyleBox[
    RowBox[{
     RowBox[{"Print", "[", 
      RowBox[{"\"\<Hello World! a = \>\"", ",", " ", "a"}], "]"}], ";"}],
    FontSize->18]}]}]], "Input",
 CellChangeTimes->{{3.8096965548289623`*^9, 3.8096965906389*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"89c786b2-1b43-4724-b14a-b32ac8cf5329"],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox["2", "CodeText"]], "Input",
 CellChangeTimes->{3.809697011822029*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"14145cfd-813c-4eaa-8807-a878d03da609"],

Cell[BoxData[
 StyleBox[
  InterpretationBox[
   RowBox[{"\<\"Hello World! a = \"\>", "\[InvisibleSpace]", "3"}],
   SequenceForm["Hello World! a = ", 3],
   Editable->False], "CodeText"]], "Print",
 CellChangeTimes->{3.809696620270623*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"d19ec91f-65e5-42a7-a90b-04612f1ba415"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "In the code above , observe the following.\n-- A semicolon after input \
suppresses output.\n-- Note the structure of Print. Use often to avoid a \
silent program!\n-- An in-code comment is formed with (*...*)\n\nLet\
\[CloseCurlyQuote]s play a little to get a feeling for the input format.\n",
 StyleBox["Plotting:",
  FontWeight->"Bold"]
}], "Subtitle",
 CellChangeTimes->{{3.8096969546441903`*^9, 3.8096969935251217`*^9}, {
  3.809697033270047*^9, 3.809697116356887*^9}, {3.8097049553255243`*^9, 
  3.8097049626385183`*^9}},ExpressionUUID->"1a07860a-e947-4558-a4b2-\
c20823924346"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Sin", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "20"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8096971343798532`*^9, 3.8096971536620245`*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"8aa8e929-4a3d-4a31-945c-9d9f658b1632"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwlWnc8le/7N6LMrCibOMIxDqW07itpkIaZzKwIGRWptKislFRCWVHEh1Ja
ktvKjITKimyOc84je/s939fvr+f1fj33fY33dd3j/bweBWdfMzcONja2u5xs
bP97Jl115qa5PtlddeX/nxXN8ibH5S8it/dGsybkc6WyOFRePgI9r722ZUYu
AiWVRMtxySegd4nPRhzlEpD3roAzM3IvEZU48NJZ5iVqXvB4OCb3CXluvn49
ed0ntLqjV4UpV4NqwE+9YLoapdWm+I/KtaFG40Ri/nIrmox/p9Z9pw158LXr
3vjbiva71/U1zbUh3vr3jtiwDTE4ZywLm9sROxIacOBvR9t2HdkeEdaJzI8P
iPHFd6DGV4scKkQ3Sn7r7yKb2oWu1VKNaY596Mx60fnaLb0oK/8DJedRH7rp
HyEc7NyLmuINOJW/9aECQ8Oembu9SMndumi9fj9q8gx6cXioF9Vy3tRkEx1A
w5ydLS7kPPFdHSLfKweRG1/nzvrBfpT3KqLDW5OOjtjLCx6yHUJ0EfodYyc6
ajxSnTB+ZQipBBrv3vSQjlY3rtQ4pA6h1J18aX1zdPTRor4otH8IxdbcOWXz
dRSZxnVHT58eRoF99/4dsGOiVbomw3qnR9Cb/WPPlO8xUQnP1wPs4SOIeHnM
grOMiYq9PypFvRhBHn7CH4pVWCh9jcDGzt4RZLMUG7xlgoU8I+xHPK3pKIWv
LlR43xjqicm6tqA3inbvumx33WEM1T/rmk40HUWdPupbiAtjKN/kuPuU1yha
3xQ1+C17DG2OPaXWnjKK7sebGIUL/UPnZ6qk7FYxUKhyg+BKxz/EcVyBh6+E
gRSPXx06M/UPRf2847TzFwOVhGuWdAqOIy2BA3+UGAy0OHrXv3DPOBq7Mukk
KcFEAW+OtgRkjiPape/4/mkmckc/EhhnJ1Dg1BWtW2wsxPZsurAjagINPgDO
T8IsFL9KurM2YwJJ8pQ0piuyUHXNKdmXvyaQIKfpu6S9LLTJYvGZ2/ZJZGSh
YyYbwkIl7xUqLMwnUXjL5adc91nIesOBgb3ek6jgiG3OsxQWCu+6r6KYPIky
rz2JWPrMQsMeKv91sU+hkIdjsTr/WOh6nUl9veQUOlNTf6BiiYXWa55lFelO
ofRbqp94eQl0cKJI+4nbFHrg+tPmnQKB/lr2mkZenULQnWO6QYNAQR9Xn7v4
eAq9kxaMpW0j0MsrZu+O10yhtYfcb149TCCDvxd+7e+dQtkh6RxvjxOo3SBp
ZsvCFJIIn3Z+4kQg3jXD+mIa0yh3j61n2HkCecZeKW6MmUb717PJ18YRiGPq
WTd+OY2Ofqnc8iSZQInHq9lelU2jfeV+N+ReEKhWWnRv9OQ0wplKZ/cUEMj5
2jbXYIEZxKfTOdlVSKD5HvtbXpQZpFXd5KFVSiD1zKwqI+sZ5PGnZ2j4G4Eq
eBqGt/nPIK71N36ZNhHIznuCZ1PkDMqTPHPlzG8CTTasV5dIn0G+m3c37ugk
0B3abhPuohkkdP1gedFfAik9dDkz1ULaY3t6aKyfQEXT4Xf7mTOIKFzl+GuY
QBYn8l41c8+i8EbeSR8GgRifmxvL5GbRpYfj7IUEgW7Kzv3L3zaLstOKrn8Y
J5D0DVnRNNNZxMVSPu0+RaCCvr2bYzxnkVJnZkHNDIFM9p+2vBZK4kNB9l1z
BOrPuhvo83QWvcuIcHi+QKBgvoLH9u9mkdNI5FvZJQKJ+bR9NGmYRTyfh6yN
lwmU27jctmNoFsW6VR/atEKg/bpKC2psc+j7gHDkRxJ3PTKSltwwh1JYbiIL
JA6c9dnFozOHdjIU+wkSC9o+dJg1nkM1XK4rcSR+8eXTtSGXOcQrw+42Rtrf
Ld+d+it4Dtl9uyu+SPr/FbKq7OujOfTH2UG8cJFAPgOqfQV5c6i264q7Ghnv
X4e2NaU1c2hPmCm3ApmPeWu4Zn3/HHr99tv+omkCVZpus2hbmUP7vCq1FicI
tK1u6OKA5Dyy/yxZ83eMQDmGj1P+bZlHYmnZUp5MAskW7/+6dGwe9RC2tPgR
AsVsnabzeM+jo1s2rPMaIBBn/nMh8bB5VJfwo6mXrF+gmqWe4rN5FFEcdGGl
g0DD6avsNL/Mo5B4buHSXwRqiHPJ3D8xj/zGah116wgEQqL1ZoILyO0Wl15/
BYHeRpSNO6guIP0Uzb3biwkUH6yw+4LjAqK+v3z01yuyv6cbXUIvLSBVHXxB
OotAV3yvR9x7tIB2f9ZSXZNK9qtzd0tm3QL6eWzyZuNdArV03J1/O7iAiNHL
J3NvEeiA5W75EvZF9E7psYp2MIGoB5O8WrcuIj8K+6CKB4GSS03u95stoi0V
d8WT7AkkvGPx/dgZcjyXxvOPZgSa1rDl4MlYRMuz0jZ9OwhUKrohQV9oCcns
2lLzv/W9Obq6eJ/6EvIsyIt4v8hCL7iD+k33LyGXOIUvPAQL3Zn7peUZvIQa
0kEys4mFrLofViYOL6FxiSxa2SNyf7I2ZLzgXEbjOw1W591ioR1NE8JvZZeR
68JSukEAC8l/NbOvs1hG2kEhxClzFqJnC00ulCyjtQ7pGml8LGSnVLJhTecy
un/ixMPWWSb6nuSLxGaW0cC95xaFA0xUENMQSdVYQasOXflypZiJrgXeUbBP
WEHw9LcbrzcT8SrcVOnexgZOyf2/fD8wUPXO+1pX97HB+7uVD7jSGOi2dfJW
GTM2MF/uEbSIZCCOmI8HbL3YYHq7m6K0HQPNLzPcfyexgaNOpITj4iga7bTM
+s7BDp3b2HcPaI2i7Fnn1z5r2eFgns5vxXWjyEPM76OANDvA+ZnVMvN01H8o
svrQFnbooY7uOlhOR52FxcNV7uyw/eX7azfM6OhbvIpqyTd2SHrR8PiL6wiK
LNhMc2xjh6B1gokD+0bQwcY9+ssD7ODU2VXQQBlBFavtjHausAO7hZXnwNAw
KgqMOf2RxgHlQgH+Gu7DKNdi7uXrOA64E/u7zsdmCN0VqlNLO8kJR8X+NPKJ
D6BPW2XeHfHhBM3TZR++MvpRv4MvWrzMCf+F1J8zKO9HO3JFLY4/5oRFD2/T
2779aNjI7opAAye4/vsnuu9rH9obyvx+cccqOIgW/PlP9aLZqbUBZuJc4LPa
5XY6Wzdy7rDAnN+4YXSRO0nQuwn5f73p7KvCC+fyqo8PHirBsv37uad1eUGK
36c8UaQU13HwZAcDL6zPtLNQbivFyhD9L+IEL7COPTj0zq0ctxU+up4RxQuP
TM18ooIr8Z7XL5LbCF7o0QiWPp3yDQs/qW7f+5EPbG2WbdytWnDxp8irtRV8
IJ+oVmD6rgV7tZoomv7gg89tYwd5xH7ir+t+nHag88EOs/mbnY0/8cWYttkg
aX5o2LfINn/gN+65RRfPu84PUjav4w6qt+N8P37z9UYCcHnfyJG1Jd34W6Lo
xVwrASid9BWUWfsXD1ZIphi4CkBzf4Haqt1/seQG1VHvawLwLbH51L4nf/HN
0n2hpe8EwG5y/75b5j3YSuTaW09FQUih5KiGFfbi+bf/RL8sCMLN2j8d4o4D
WKxrVt+MZy3s6/+67B42gDXXsJ0cEl8LD0wuiVx+NYBd7AT/E9ZZC5PfhncP
LA/gb6vUDU95rIVK+uSWL4mDONnS9fzan2uBj+58RLJyCKdd9qJrHxeCbx0q
Zi+GR7B2Cc9smL0QmOecCjTmpuOSVVlc3S5CwLtmj37uRjr+G90vH+0nBKUM
+fO59nQsm2p/fCRCCFq/bG2JaaDjxIqjFWlFQlBGkRV5kT6K1XhYP2bLhOCQ
LMeEyJdR/Onwne6jNUJw4Ka60vZfo7j1V/X80k8hmMjcfvn9agYWH9lDsyGE
4OCFo7tPujNwrMDmZBFFYTgyvc3fcAMTK5o15ZzeJAxzXRI7t2sycX6c36cS
TWEoetz8YdCAiRvlclt8dgiDSXPbuLMXEwvqUPjqLIShYOnMdO9HJk4OrFiv
aCsM2qsulYXXMbHGZ2fKRSdhKBvRLuj7w8Qmhil7VHyEwXNx6NhHdhaOtFof
FBomDP/KvsX+3sfCkk/e32qPJt/XOGYrWLHwy26LB7SHwsB13TtK7hQLV3vc
z+tOFYZNlis8erdYmPsy78COQmGIfuVTXoNZOA5njceWCENm4Nxobj0LK686
wEavFIZU5ax8ww4WNowOlYpvJse/fn4nYoqFQ1IWTScZwsBbsXPKm0LgY9of
/dUnhCFB8cmNlzQCy5aeu+88JwxRote/JO4kcGEvvbGRSwTMPwy2J5oSOPzc
i7HV/CJg51YQ8dKWwFarnIWQiAjEiaeFeLsReFy57WiurAjsjTs4JRhE4JL3
D337lcj5r7kMWNcJfPfAsXtS6iLg/2Pw6o0IAqudrmqI2CoC9i6LgeUJBJ6d
C2GV7BKBjdvHeM+mEbgycrfg7F4R+M8gDFqyCOz837vDp46JwIfcNcZv3xNY
e5f/mSQrEfgWHLCo9YXAy/XU6BY7EXiRGSlwspzAiUT6N4PTIqDO/VyovYHA
HtcdGRd9RaCgcHJwYwuB9YSl+PMDROD52pB++TYCN+nEHpILEYGQl73Km3sJ
nFp+2MsqXATG87+ZGw8S2MeCJyr6rgh8FFe8Ikon8M6BiuyKh2R8I8Xx95gE
5g28XruQSPrbr59cPEbgVu6ddJ00EXBz67mVOkHgF49neDwzRYD1uvTglmkC
n9/0VjUtVwTCmpP/Bs8SeM8nH6PWtyJAq545cGGewILGaqfXFoqA7xDXJaVF
Ane2D4TvLxGBlvGiszeXCJztlZZ1pVIEKmXrNB8vEzho0a664JsIhEom5Nit
EHh/9Prh0SYRcBQ3HmohsZhsy+qNbSJwqPrz3xUS9+bdU7HpFoEIn9uP/5D4
NTp04P6ACOQ0LvL5kPhqI7d79SjJ724qyiftmziV3V75JwKc9zp1Mkn/kuNX
XujNioDkhpiRo2R8wyH6lWeWReDi69BTOWT870WnBjJWiYL907zcT2R+NzNe
c3XyisLuu2Xll8j8zbZ4K4sKi8KVOPU8FsmPfKXKPmMJUTCREDq37h+BWVZ9
rjdkRKHl3bENBMlv0VDyzY8bReGpUXjWZZL/yCCbDEJVFNRr+VQ/k/Wx5hGv
oGiLwsh2enouWT9K4o8+ez1R2PuIoWjeReBJtWjORztFgS//0escst4xJqv2
chqJgohxuHLgdwI7/MHO24+KwueeC8rDNQSm+lwO8bcUBaXNNm4CFQSuvjde
2u0kCmYB27v8PxA4Tj6vR9xDFP71ZW3Jf01g1/zT7Ed8RCG0nM6T8ZLAbM1/
oeiSKDxkFJ7JSCTzHylOu3RDFFLeCLxmjyUwD1sSh344Of57hx4XuR5ENE5U
vHskCpvcRC+uBBD48d6tyuefisJ7yl3PaS8CS9usu62TLgpCW1/wP3QisHLY
jwOvXovCKYvPbeWHyH5IepV15oMoVDp8NLACAmsWRPNQi0UhksOs9d5mAm/r
MarLqhOF+E96QnNSBDbeUXbk2aAoRCv+TsgcZOEG09RXJ5mikN7RfeBCKwub
e1wVkpsUhc6mEiOihoXtHm1vesIuBluT9InWHBb2Id5YPpIWg79c8SGPvVj4
QXq6XbiZGPj3/mMbbWfi9YU3vuw/IQahk5ZullVM/LTRUZbrpBiYhQwoe71l
4hdLUn9vnBGDAPHe5IRIJv54/KHL5XAxSBNR6VyzhYk7+W55+hSLQUdIBePU
JQY+qehSR/0qBi+8HmWkOzHwwLY91NE6MVDs3p1/7yADs9yWmO5tYrArX2Yo
cB0Ds5cE+DtNisG6sJHqiJxRTDl/KshCbR109YmfWlVDxxrbu81TtNeB0JuN
Fta5dLyZzVqLrrcOeiMXd3nep2ODO0aD1/aug5pSqmSNNR07ZFAtcuzWQd+e
/JxL/SM4rmVci+PeOlj4uDjLIIYx15ZrQ68m1oHM2h37qG2DmH9hpmx+bh3k
mqSG/ng3iEVK/ZL3sYnDhYHeu7tjB7H8YWfLDn5x8Djyn7e/8SDe6bavnJsi
DvJnhdcYfhzA5x/xpdhbi8O3rOpoRkQ/7p96bMX3RRy6zD9V9a3uxc/26J77
Uy4OXw+4Or5r78GO0Q33XtWKw/PX3ALmuT24XYmrxrxVHA6EphROmvbgH+Zn
dzydEAfPQ1fGu+P/4uJ8E3kNNQm4k3whMn5HF358hp1+5LEEpNnt/C9ubSs2
HvC8Euu/HnbM88rp//uKj/THqMvKSgKPj+daUd3v6Jt6f4udkiRY63WNF05+
R4fObb36RE0Sdp17cZHXthEd5OhqXL9VEqSpnjOjUj+Qgbx6oOgx8n0j/463
T5rQFruvJWtCJEFvZ9iv27E/kXTLnOXEgCRkJXJkzFt1oESpwys0hiTk3qL4
aud3oA0uqVl+45Lg4/r2syJfJxIf37/AXJaEerWv3vrFnUhI6GHqsIQU7Mlq
t5dQ6EKcJpqjf4ykwOfilwRv77+IXu58vTpXCgRDeYLsuPqQ3P1Wz7sFJDYa
nG3W7kMWDkcsLT5LQZZ24zkxuz5UPKuv9rdaCt5fcfRg5fehWA3hlpk+KTCw
ieubtSHvr4+xioqkNATvLJ9dThtAfq5bRJjy0nDo1bJDfc0AekHLWXyjIg0/
iVwT+38DSOhb3I/dW6RBYs5pDqNB1M/mc9nqmDT8lnhrd7NtEN3xlP5+67Y0
NPEkN75kG0alW2M/HYqWhh1Lr9fZKw2j6VVrMoQfSsOZffcV6w4Mo5MpE0FJ
adLAeqm+/DN6GG1uqVV8VyQNcab1P56Ij6A/uy4G9o9Lw7nzmrQHknQkwkec
zJ6Thg88UcJf9enoYKvrIT82GZDUsyrJsaajN2ePyS8KyEBIfI5K3CM6up2p
UiuqKgO0KaFnP/lGkabwL5m9jjLgYJ6F3o+MosHowZBHbjJw53D40yMcDJTE
OzM05CUDJc/ZONMkGYh/1fo3d4Jk4Jmy+/xZYwaiT5/Y/+u+DKSEw4avLxjo
eecfn9MVMpA9zhczZspEdidYzZ9rZaDQuvye4CkmEvu1vE3whwzcsA+U77vI
RCHf5Tjf/pGBdavdtF6lMtHJMqfHi9MyYJXZ9LWezkTSWQP4nqoslPylGi/5
sVCL0rRSr5YsrInW+uBznYWi0rgjN+vJgvnx1okH91hoPlHFos1AFhK+h+2b
+4+FWqNPDyvayYKN5AYr9X4WiuG9dDjAWRbaUn7u3/qPhQ6ERb6p8pCF8o/X
mVNLLPT+ek6wd4AsfA4U6IoUJ9CDc0yh93dlYXG/MZuQIYGMx5YC1jyShTD2
a0fzjhCI44xgh80TWahcUvdatiaQ3ymt5yuZsrDzT2baW28CbepDvGZ5shAZ
tjNqfSCBuh2P+WYUyEJm8M8uzWsEOnLCX9+oVBZ+XxDw9I0hEPevG8lPqmTB
Mv5hYEI8gb6YxXKy6mVBOmMs7jyp56kmb+tj22XhYq3P112k/u+vLtcZ+CsL
K/zP8tTfE+jJvpbHW4dkgT74zam2iEC8aMqpc0IWXBnZ/RtqCBS0Z9Oa9/Oy
wCHhUgjfCTS41zbvHrscvHG6uo/3J4Es9t+1OL1GDrLecwYEthOo7GDpvMFa
OeCt59O/1U0g7UOTqdLicnD/eGmIXj+Bkg+rHJiWloO12k6GkcME4j9mw/y+
UQ6qrm33v84g0CWz6Acv1eTgZX/e0voxAg1blOiH0uTA+YFOt/kEgayOT3Tb
bZMDk0ATfto0gSpOUG7rITnYZhQX/HqWQDp2J6hC++WA703RpqZ5AqU63Gka
MZEDZHWNN26RQIJOOKjcXA62Ml9L/+97ULDLuGySjRx4H91qu2qFQKNuyl8D
neQgKISvPI/ENh7WXsc85GC6VN/sf9+fqj2jhNV85UD/Vs9qOon1zhR/4AyU
g94bW/ovkTjD95/9n2A5MM65PJy7TCCRs0qrPoTKQYWmgEQo6e/6+ePZMZFy
gL2tzs0vEIgVGHnM874cvGf9Yhcj47W7+GV6b7wccNooVH+fIVDt5bGnMily
EOrY8U1jikDbrm7cO/NcDqSyvkhojhPoxXWrkcb/5ECk+EF+I4tAYqER97Lf
yoHhxI6MdaMECrlVtOVmoRzoGGbOLw4SaCyM6LAvlQP61raS270E+nbHcpPw
dznQ5lj4caOVQNvvhTfQf8rB9yOHt080ESjr/ufzFZ1yoNGidnh1PYFuximU
XqCT/sqFPkmUEGg83sLd9J8cPHDn2Sb2iUAnn4QJqM/KQcihM7lv8wkk2zhN
JTjkwdpepLkjjUCWpkJsdtzyMBNXm++aQKA7TarN1TzyoJPS0RdD9vN8i93F
Z0LyoEJ/nt18hUC/2sq+WsrKg4jP1XYuCwIJ2HbGlynIg/mMput/Bwlk2Dnl
paUsDy7VkxozOwn0pmuTCA9VHkKnlPkvKRHobt9dhyJ9eSjhj5veRrDQV9cs
muoueXC6w3OFq4eFFgdKV8WBPASqxJy70MRCnsOT2b4H5MHxZ7KdSQG53pk2
M4qW8iCzSoYPn2OhZLHQ5mvW8uD6J1WQ34WFJnfkvOq0lYddkv1qnGYslBq5
4B7nLA/Pinf4jmmS+4vK01YeP3k4/0Ei81s/E/3n/OfTWKQ8GP0UHSwEJuKI
5Io7fFceVGc8xcvUmMg6X+Ns9n15aI493hQoxkRcbFfVXOPJePgnRkYGGcgh
SfbJ7+fy8DSW9W4pjIGEWh2Di0vkoWvRMUXi8yg6tRJmLVUhDy3J2/kkUkdR
EeX15qAqeegxdXGovjmKTgewMWkN8nByyXBsz+FRVCaSZv+8Qx60NfHphHY6
On+4d/edaXm41f6uQGFoBLWWubLbUBXAzvFDO0ftEBrb0y55RUsByCs1eQQM
odWlRzen6ihA/m7x3NO3h5Ae3u4+uE0BfK/MzQ/vGUIPPwvVn92nAFsCChN3
vB9ERwuK4qMcFKDMa0Nd8MMBVPlcTPtLjAK8GvZ2HlHtQ+/CKxzkpxTgkPmo
8bMnHSjLuG592KwC7A3yEzXSJ+8D/E1NzAUFuH0uVy7tVzu6HtO9/zOHImhY
Xb94WqgdmcTPa1oJKYLqkFHypeutqDdTeyVKXRFGXXWKn5r/RIJVT1NmnBTB
cP2JDuJJPTrFFfC3oUERPosxuFptHiGXs5ff8SduhA1V81erbvzGejpd71ST
NsLi3h4ji67fmHcc3u9P3Qh7q5/vztzeil/7c3+4/mIjdLwPVnk63ooX/e5/
nHyzEYjPPWkvHdtxnG/m5866jVDmYHgrVuMPrvFuLv1vaSMU/rnGZmfUg59S
9cpq2JTApHEL0jnXg/0Y8WWDnErg0HVsS9fTHizu7VAuz6sEW/T0Ct4RPdjZ
a6TiobgS3EoT5rN+0IsXT69UBWspwZPvy4RoUx/WcldvMHFSgoAqLscGtUHc
dVrON9dVCfZ54p+ZpoP4jreokKCHEtRxmr7YEzSIR/wXTL/7KAGHpWNSQcUg
Tg+u+2karAT8QdLcd2yGsESs1x+rx0pwMLtvT8bFYVz50PHqh0QlgLLHFqZP
h/H5x+Zy65OVYIJPctvH4mH84+kOp7YMJZiv6x/J5xjBUZl8A7ZvlIC618rX
OGwErxTlME7WK4Hdx682xSF0nIdToksbleD+EeNdnal0bFf2QFOxRQmiMyO1
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
9Q==
       "]]},
     Annotation[#, "Charting`Private`Tag$3077#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 20}, {-0.999999941761652, 0.9999995837354044}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8096971598848224`*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"ecd92fb6-de8b-4201-b259-640939673860"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Sin", "[", "x", "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", "0", ",", " ", "20"}], "}"}], ",", " ", 
   RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8096972379416466`*^9, 3.8096972619096107`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"18102628-a903-409b-9603-2dbe69dc5c28"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwlWnc8le/7N6LMrCibOMIxDqW07itpkIaZzKwIGRWptKislFRCWVHEh1Ja
ktvKjITKimyOc84je/s939fvr+f1fj33fY33dd3j/bweBWdfMzcONja2u5xs
bP97Jl115qa5PtlddeX/nxXN8ibH5S8it/dGsybkc6WyOFRePgI9r722ZUYu
AiWVRMtxySegd4nPRhzlEpD3roAzM3IvEZU48NJZ5iVqXvB4OCb3CXluvn49
ed0ntLqjV4UpV4NqwE+9YLoapdWm+I/KtaFG40Ri/nIrmox/p9Z9pw158LXr
3vjbiva71/U1zbUh3vr3jtiwDTE4ZywLm9sROxIacOBvR9t2HdkeEdaJzI8P
iPHFd6DGV4scKkQ3Sn7r7yKb2oWu1VKNaY596Mx60fnaLb0oK/8DJedRH7rp
HyEc7NyLmuINOJW/9aECQ8Oembu9SMndumi9fj9q8gx6cXioF9Vy3tRkEx1A
w5ydLS7kPPFdHSLfKweRG1/nzvrBfpT3KqLDW5OOjtjLCx6yHUJ0EfodYyc6
ajxSnTB+ZQipBBrv3vSQjlY3rtQ4pA6h1J18aX1zdPTRor4otH8IxdbcOWXz
dRSZxnVHT58eRoF99/4dsGOiVbomw3qnR9Cb/WPPlO8xUQnP1wPs4SOIeHnM
grOMiYq9PypFvRhBHn7CH4pVWCh9jcDGzt4RZLMUG7xlgoU8I+xHPK3pKIWv
LlR43xjqicm6tqA3inbvumx33WEM1T/rmk40HUWdPupbiAtjKN/kuPuU1yha
3xQ1+C17DG2OPaXWnjKK7sebGIUL/UPnZ6qk7FYxUKhyg+BKxz/EcVyBh6+E
gRSPXx06M/UPRf2847TzFwOVhGuWdAqOIy2BA3+UGAy0OHrXv3DPOBq7Mukk
KcFEAW+OtgRkjiPape/4/mkmckc/EhhnJ1Dg1BWtW2wsxPZsurAjagINPgDO
T8IsFL9KurM2YwJJ8pQ0piuyUHXNKdmXvyaQIKfpu6S9LLTJYvGZ2/ZJZGSh
YyYbwkIl7xUqLMwnUXjL5adc91nIesOBgb3ek6jgiG3OsxQWCu+6r6KYPIky
rz2JWPrMQsMeKv91sU+hkIdjsTr/WOh6nUl9veQUOlNTf6BiiYXWa55lFelO
ofRbqp94eQl0cKJI+4nbFHrg+tPmnQKB/lr2mkZenULQnWO6QYNAQR9Xn7v4
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
muoueXC6w3OFq4eFFgdKV8WBPASqxJy70MRCnsOT2b4H5MHxZ7KdSQG53pk2
M4qW8iCzSoYPn2OhZLHQ5mvW8uD6J1WQ34WFJnfkvOq0lYddkv1qnGYslBq5
4B7nLA/Pinf4jmmS+4vK01YeP3k4/0Ei81s/E/3n/OfTWKQ8GP0UHSwEJuKI
5Io7fFceVGc8xcvUmMg6X+Ns9n15aI493hQoxkRcbFfVXOPJePgnRkYGGcgh
SfbJ7+fy8DSW9W4pjIGEWh2Di0vkoWvRMUXi8yg6tRJmLVUhDy3J2/kkUkdR
EeX15qAqeegxdXGovjmKTgewMWkN8nByyXBsz+FRVCaSZv+8Qx60NfHphHY6
On+4d/edaXm41f6uQGFoBLWWubLbUBXAzvFDO0ftEBrb0y55RUsByCs1eQQM
odWlRzen6ihA/m7x3NO3h5Ae3u4+uE0BfK/MzQ/vGUIPPwvVn92nAFsCChN3
vB9ERwuK4qMcFKDMa0Nd8MMBVPlcTPtLjAK8GvZ2HlHtQ+/CKxzkpxTgkPmo
8bMnHSjLuG592KwC7A3yEzXSJ+8D/E1NzAUFuH0uVy7tVzu6HtO9/zOHImhY
Xb94WqgdmcTPa1oJKYLqkFHypeutqDdTeyVKXRFGXXWKn5r/RIJVT1NmnBTB
cP2JDuJJPTrFFfC3oUERPosxuFptHiGXs5ff8SduhA1V81erbvzGejpd71ST
NsLi3h4ji67fmHcc3u9P3Qh7q5/vztzeil/7c3+4/mIjdLwPVnk63ooX/e5/
nHyzEYjPPWkvHdtxnG/m5866jVDmYHgrVuMPrvFuLv1vaSMU/rnGZmfUg59S
9cpq2JTApHEL0jnXg/0Y8WWDnErg0HVsS9fTHizu7VAuz6sEW/T0Ct4RPdjZ
a6TiobgS3EoT5rN+0IsXT69UBWspwZPvy4RoUx/WcldvMHFSgoAqLscGtUHc
dVrON9dVCfZ54p+ZpoP4jreokKCHEtRxmr7YEzSIR/wXTL/7KAGHpWNSQcUg
Tg+u+2karAT8QdLcd2yGsESs1x+rx0pwMLtvT8bFYVz50PHqh0QlgLLHFqZP
h/H5x+Zy65OVYIJPctvH4mH84+kOp7YMJZiv6x/J5xjBUZl8A7ZvlIC618rX
OGwErxTlME7WK4Hdx682xSF0nIdToksbleD+EeNdnal0bFf2QFOxRQmiMyO1
8orp+FPVZb++diWg+bEI7zk6Ptd0aNJtWAma37dVm3iN4qGh0QVPTmWo2mA6
fRQYOI7e/bSOWxnWXVlsCz/BwIbM5l1UXmXYEp3b73eWgdPGP19jCilD2aVR
88PpDGy7FMXpJ6sMOxVVBbXZmfi7CJUvQF8ZPD78euSSy8S7z5wZebJTGXZY
R3tJlTBxXlVeVRki7TH/c4hoYuK7wbSbQvvJ8Q21g7enmdhkUG8px0wZYnVM
szl3sHARBHU0WSqD0SOZWPdDLEx98unTnLUyxCyf3HXdloX5ju0MPOCoDE4+
Cuj7JRau/bSH6PVShov/nIu737HwdrHQeh5fZejQzIoaKGfhbJ+KHO2zylB+
k/Iv+QcLR2w84HE1SBnCr+stqTNY+GC0Sc+GW2T+QYp3c2QI/HEoGkO4MizN
XL9jrEpgFYPvSe5RyiDnclDlKakHuWdMbd7dV4bGl05lVsYE/nryePOxZGU4
myqWQzlL4M2f4/MvpClDnv2P9OOXCZyxrv1ecoYytI9on9l+k9SztXYmjGxl
SJG0lFz3iNTXSslqonnKcHjP7hb+JAK7XOtesz1fGdjTRfneZxDYYLPz17AP
ynAoVj1D+i2B39xNT88rVIYfgdm9bZ8IrDjSf+PnF2UQS7prdbCEwOzJ7rs3
ViiDVfaplG3fCOw3myVtXKUMusYFVoU/CPzXjD7vV6sM1CHJNcxfBC5ZfeZD
caMy/DtpQXH7S2Bt57xHA83KkDb+7HJ2P4FTi4hz/L+VIVGZ42nqMIGFJGhm
uu3KwOn25MoBBoGv+Z/VtvlD2qPbSaQQBGbVvRW88VcZNjTPncwcJ7ADZYqR
2acMMlvpZienCNxwXa+uYVAZovS9BmtmCLy748LLqRFluCl5bV3/HIHztnwK
k2YqQ+s+ZnveAoFlYubd9o4pw6KjgY7aEoHv0HcYek6Q9k0bJayWCbxoeEXx
/rQyaB/JC9dZIbB3SjHbxzllOPr3YwgmcefcSlfXojIMj9xftURiE4s9X7jY
KKCdnSowSuLPeSFPqJwUSCkWTo4gMbeJpeRjbgo4BqkeqCTtm46oJLDzUoDD
/1PCc9L/09vzEt4CFPCr50tQWSTw0Mb6uF9CFNg3ccnIZJ7AOqUp6/aIUUAu
2P+16CyBrzicfZgjQYHvyp4tV8j8qxcMRcWlKHAWE0WRJD+iCRKx12VJLJp0
djvJn4MeXWhUgQLeDdIrd0YJ/LK56J6lMgXmnVXPhAyR/eJ3T7BkEwVO0+9U
S/YRGAk6R6tRKWDFoSBr1UXgyJzN/I+0KKCZ2XB5cxuBfx5cHbWiQ4FEvrtj
75oJ7BX6X3iLPgWm+s6cfFZF4Pfy11ajXRSY0K25KlBK9k+x6e2XQIGuhznz
UoUEfjw7HXr1AAU+O26w35hD4N5HNRwjxhQIuGzqK51OYA3dpzfMj1Bg/53T
ep8SCVx+Zs+1TZYUEDxL2d8VTmBBPrHlWGsKSLT2lJ26RuATWYPBS7YUOPXl
pd2DAAITvVGXmpwpoDUmYtt2ksBS1r8Cgv0oEEJ/OySlS+BTU1mTg+fIeggP
vKymEDg/9vI50wsk/x8yoyQlCXygXt6fcpUcr9hjkLfCwucMvLwbo0j7TcS3
hEoWLu7eNbr9HgX4JLf8OPeBhXmuCHk+j6WA8ESz/mQmC6d8eOd+KYEC/gJL
zOEwFq6jsrkoZVKgYs0ascy9LCxe29RzN5sCUvwLbp9oLOzk/vzkXC5Znym3
Z+fkWHgmzdihoYACis87X/+dY+KNEo9OBJVRQOhJw9b0bCa+zK527NsfClwI
lqpdWmDgQUO+VkoPBUxy3d9KDDDwsXCG441+Ml7HnQ5/6xlYae0rX71RCvDk
XF2+mszA36Q330udpYBeI8/X2R0MLLttd8N5URXok926SdpjFIdflrP6Lq4C
3H7irw1MRvF4MVuXqqQKqF7nuCCtPYqr9pUzu+RVQHvZZ4U+Tcd+5gcFjDRV
YCXE9/fidTou8zEzkTFSAcp0OtpFnjfUN7otF0xUINOzIa341AiOmxKzazqq
AkqplPjZfSPYK/i3V5iVCqnfSt885hzBYpF2Uf9cVOBlWEX/ncvD+NTzU7Vf
r6qAS4L7YKbDEObtvHTQp0AFYnOFTnlP9mO9Cy8F7n1QgcNXN2Rda+jHTiKt
Ta8KVSD04tyqk1n9+OPBLfb/SlTAobH4ZoRtPz71jvA/X68CTbnvmBG4D5fe
dX1yaVAF2E4rXnx4tRcH7TnCur1+E5xoqGcKfejGAy8UHqYEbwLPdTMwdbQF
P9y0YdUnS1Uw33w56UHzJ2TnQMnss1YFdxHhojenPiOlh7rGgnaqEASRatFz
Rahg5XCMi7MqnHfSX6+ztgS1/AqRFvRVBWbY48PiOuVI9BZjs0u4Kkj6Kf2w
9alBsT3YTeCzKvy6Y5uU1NaEbCTq12wrVoUHRr4RttubkeLh9hznUlXw0Hcy
GElsRm8+Tv77UKUKMnx65n62LajpnupV5xZVOCt3IU6k/ScS3v0g7gNTFX6Y
pN/+9a0VxSSeqnKSVwOj3sPu/250oQuBIeeCN6rB4c5KNrm2LuRgliz3mKIG
5stqxhza3YjK++vCN6oagLVa1mBnN6q5uG/TVn010BlMZYQl/EUcJ5Qi+M3U
oNRvq+P64R4UINFr/CGUxMHtqTKu/chuYmn6x201iFezX20S2Y8Mv29IZ0So
gcfe/PGDr/uRSJjpgkKMGtA7ttH/W+hHedMlOXeeqsHKFCVINGYADf9M4Xd+
pwZrizddF3g1iGwe2jfwD6mB1K1ZNZfyYST9llfKi64Girm+Z5wHhlH3jw/u
NUzS/zoFEanVI8h1rQj77Uk1MG5zWfXBaAT5RFbqrrCrw3H9NQfv1Y2gkOta
Cf+k1eFi6ds6/1I6MkzpHDgqrw7jx79KdXbR0eriCJ28jeqQK3xs8/wCHd1Z
6KvzVFOHv56HA45tGUVxgfHLfVvVQYm64mKXMYpeerO7/jJTB81tkbS8cwzk
HZX3erMV+T4uRFf7DgNpZtsuxZ5Qh/9uae10ymCgN0Pv4o6eVIcNOWLHvjcz
UJGzZ031GXUYNE3Sb9Fkoqs3JMRV/NVh5EW4YpUhE+1JrXC+dZ6M/9RDbncb
Jqr8I7u457I6mOxKrfvvJhM1Wjdrfg5XB0Vh+wajn0wUe+H65Q131OH1hbeC
ycNMZBmnUX3hnjrccvS/mLTARO3NYU6b49TB/GnEzFN5Fuo/svNhbro6pFu3
M+JPsdCLMyN/+TLVoSkvshEusNDpO3EantmkPzNB49gwFmLVjFVS8tXhhOPJ
/bRMFpo1fD6XUqwO1u5FMTa9LBT8OSW0olQdAnwP8DmQ+o9NJ1FgpEId4nuD
Nq5bZKHVcvcUdOrUoerA9KskMQKJzwUZVfxWh9+rfsyKGRAo0fdc83C7OkQT
XZJvTAgkM3jGXqCLHH9OYZL9OIGUmp39rfrVYfiwmvsnTwLp5pokDI+pg36J
z7ubdwn0fuOBjQKT6uATJTheEEfq68Q9ubQZdbAo36j1OJlABmF6pZeW1IGS
c9/eP5dAlUvah1LYqCC7brfa6QICGZ1X/1nOSQXXwtV5Ip8JdMxJfoSflwpG
+4cSLlURqOW35DmaABUswbZvG6nPrY+sW7IUooLGcNaLLFK/d1asDbskSgW1
QpdfNb8J5LiDVzhFnArpW3vcnnYSqDd/1ZPyDVSgcesbyfcQ6NSmFaVhaSpI
C+wLsBwgED15Lo9fngq/Y9K6d4wQyGfd5DbaRirkm+RebWaQ+j+KVWZJoUJC
ZISR9BiBAjhGTC6pUoFTX3Kb+ASBZoP6fiVTqTCxzLW3dIpAwcSfk+VaVJA7
8t5FZpZAbKda6UM6VNA5d/yh2jyBbnY2nefXI3FG6/fhBQKtMa9f1tanArsA
Q9h6iUBRNVXhljupsNzGfTxomUCCUCZyCVHhKzg9NVohUOz7oqfJBlTgCZvu
riOxuMYHSvk+KjxafUt+hcSJ6fmvhw5SwWnLXfs+EstK/red34QK359aPQ4i
cVrMiwrto6T93oGGYtK+0uq0I5ZmVDAo5+Z+T/rPuvKk9aIlFd7zHkAOiwSi
Tj5yTramAuv+zJUPZPyvPWMYZbZUqNhMrSwl89vcExk45ECFw9Wfpa9ME+jD
8Vts/M5U6BWEsBGSn+0N1yK13ch6Zq/jX/2PQMWGl8QsPaiwit/uzU8m2R+f
zydf9KLCZ5epG5Z0sj9ovpuSfahQHnU79PYggYyzTr8p8yfznwgs8eglUL2s
686h81QIjxgzWPxD9gffiWPal6lwo3nccGsL2R8h5u0WV0k+WImdXQ1kf8we
dr14gwpxNbz0rTUE6hswCCoLo8K5jF/Jy0Wk/5SGZ2pRVPC1SvTqeEegVGub
+ti7VHixJnKzXR6BHOr8FV0eUWHOdlHEmOznLzeXTOriyfzWKRz/8IhA0rsj
Lug+pcL+S+8mq+8QqP116jfOdCo8qP2b0XaRQPqe1BmvF1SwO3ya1epLoPiN
HxVaXlLh3xrDlWA3AlnFfQ/MeE2F1KNbxt4eJVDT5WX5fcVU8FfPSfgrRyDa
lshDuaVUSCtWTeMRJVAMa13guq9kfZKMrrRyEeiIk0bdQB05PzPmsAedhWr3
2wXcbiPXl//uYotXLKTKNpzC6iT56Exufv2//xM/nau1+kuFZ1qW/AX3WGg/
NUpOZYgKq89YPnvtw0JlwoU1VZNUqD5R/yZsEwsp1O2b1JqlwvDkpIaiOAtd
v/lDNn6BCtMdCbZunCy0e2b4nAeHBvTGtZDnFxMVdkrI8ghpwFjAjR0dUUz0
JjPgrLG6BiwpPpgraWMgYSf2pDeaGvCo0mgXRxkD+UlGV0nqaADflJ/g2Ety
/47OkB7dpgFgcMq/KYiBss82V0bt1wBNrb/rC0UY6NkumlS9kwasZewct9o6
isqO8IYuuGqA4epXUz7So6jXsY+u6qEBdGEeJwP2UbQx5FHhbR8NyE1RDpWu
paOMyrkTcFkDAgKuZTy3pqPnR8vi3z7UANe2PVyHTo+gLCdz8cQqDeDeY3Oe
3XYIVZ+lXq2u1YCBi1dt1m8bQsOhXIPT9RogZOl6Y1JsCG168eGdeYsGbG7K
nlqqH0Qv6VKWAj0asLeuyNJx1yDKPtf/4Pq8BkxV7/r0n/AAyr0VIOyuoQmN
gU73xR70IsZO+5Bb2prAGRXqYevZS643w4l0XU2omvoZGLCnF2U7i/38q68J
JkNHqpSIHpSF3sbb7NeE3qLvOpcP9qCMuTG5I46acFtFpbJksBslnvHW3HJf
EyIP+p5qPtGOwixdDnFOacKF2BtzY1L1aEtn2suwei0Y9bO/N/SkGgtpesy+
atSC1Sc8NSWcazDjmuaB1mYt2OX2M2L1plqcsfFz/6Z2LYivWFuq+LYOi3m1
yNUOagF9Pt9VoLIBzwdzHuJm0wYt4nBhqE8TbuPTKz24QRv+O7U0SHVqxZWb
E4Y7JbXh1S5+rkvFrbjAfnGtv7Q2aJ43uBAh1YZjXpU5JMhpQ0vt0sfRljZ8
0Pzo4oiyNjz6pH8pw7ADf0z02Bqlow0yH/Ot5CS6cLzqk9z6Q9rQo/tCUbi0
B09O7H8eelgbHKpOy4ayevDR4vGn+ke1QcnDOblEqhdzmxvfeW6mDYTa8Ian
Ab04IHjO88oJbUh02Z1dSenDZt+Pb9Jw14azD7wSLl7tx3kJnPJ9HtqgWsym
7E7eb3lcX0kkeGpD/E/V7eub+nHJLPdqLh9t+JX8fUO50gDWUnw/0HleGwoE
em9oVg1g/gCx9Dsh2lB1kIs5uTKIPVBJosFNbZg5kerTpzyEy3m8Y2dvaYOg
77zW3UND+FJy+Q3XCG2Qon74JB43hEeqzp7cGUPy86mRb1hlGFdK/pBhJGmD
Bcd2B63dI/haSXT8oU/asGju/zNBZxTT/5Q8nCvUhhvDXGZfj4xiq4WJmMwi
bSiuS6lI9xzFVD2bCM4SbTA9C2ZBaaO4NYdy6XMlGb9MTs4FPgbWeYxt1Vu0
gWJtLXKvkYGTCsaPt/3Uhot6P2cqhxh4TZOyRdhvbdh196Jp7jIDd/PfMelr
1wYzw3eON9WZ+E6I9a4nPdrQzeAQsrzBxINn/snyEdrw/EDnsokMC5tGKUl9
GtMGv4fLHUe1WLgo67iE+7g2RAYY3F8CFn7Q92Vt+ZQ2bOZO+2LtwsJwIpLt
8qI2BH5L61+TwcI5gV8WNy1rw/KQ2l77t6S+ezg2+2tFGz5mHOKyLWNhZoPV
Px1OGjiZyfCbdbNwouHGXjoPDQ6qq5aoriMwl7NVVzwfDXpPjzZWKBDY71pE
+34BGqx/Wy+wRpPUo4VE0zMhGry9HxFyex+B3/xW/H5MhAZfr0kFlR4jsOyU
Zd2yKA3+9O9el2FL6nmtonIbCRoo9Np/c/QjsONhAq/ZQCPPk46cbZcIXOup
WPRekgarfxNfPoYSOPV5eIGILA2UL6atzXtEYL7yz69L5GhgsvmR9MZkAgf+
Zf3no0CDjlvfpne/IPBhKcvntUo0kMq//tHzHYHj+zVLbCk0uDS38puziMD9
uWs6GCo0aPncuPZoGYGDoUhorToN3MKtoxbqCVzNE6eeSiXzU3R/Y9dMYLFm
3/00TRqIPwn86NtK4P/cNgab02jgrn5TO6eHwLOaS3H9OjQIVm+Nah4gsOHs
r/yAzTRYJdYWnztC4JjS19+49Uj+dogc0WcSuCMycujxVhosmHx/FjhGYIqF
K4eqPg1ST0jfc5sg8FmZ3TKF22nAN/aVj3uawMWDEtsO7aSBAPWEiPUsgXlf
/zPr3EWD/sqNSbbzBLa6WHfmDKKBvvLmTKFFAj8zeB6+DDQwcDlBvbBEYBbf
tfR7BqQ9x42q95YJrP/TuljekJxf0ptovULgm8k6bfn7aLDC/vJaM4kb3fkn
DQ7QQM3/4K///f8jTRsUbDlIgzdbLJL/9/+PxzxWdTOmgf8x+VZvEheUJxhO
HyLnJ5bezCXts0Wfcww7TAOerwIvUkj/JlaHL60/SoPmo0927yXji5dTefTy
GFmvsFLTeDL+/mG219vNaJAZHN+XTOan/aa9ts6cBu+nZ2etyPyDLxcM2FnS
4IlX8OMSkp8qw7tsLCsa7B0L/tpB8ici6CF1zZoGpqrrIrNIfh1+79ETsiHn
68szKXQCZ6dKmabZ0uDMK/0Zq0ECT5+e8tKxJ/vH50v+tl4CG+h+v13uQNY3
oYry7Q+B7y5mpVmcpEF60GYn4TayPvfsfge60IA3zt0yv4Gsj7Xe+Go3sp/V
XmziryHroyAkkHCKBt19WyfXlxPYsqDc4PNpGmhfuPHq4Huyf68k2Zt40eCC
UF6x1ysCM/ZfCPrjTdZ7WZxrTxbJf5ta3oovDQZYRVc5Ekj+n62qifGnwWXD
U79ZMST/3l19CudI/9uV3kSHE/jt8v0NhoFkv93vh75AAvdunLsZHkyDSAN1
nbGjBNZkNqVsuEqD249mV50j1+Ol9/8VZl8j19t/m0Rfbif5Mjo59i2EBifi
HEy0lAi8x6fKVjiCBqHSi/syJ1h4vnVkf0UkDXZp3nuZO8DCBXv5dS7cocFH
s+/dNr9ZmLLBdM2fe6T/1gLP7E8szF/RXpAVR4OQ67hY8RILV2oupdjG02Cn
o3WA62kWvpYgFyWYSOZbZeV2xJqFx31cnc4n0cD+YfkHqS0s3LqBJQAZNCj9
aFiTRmfi2JtCc+PPaTBbtDKo9puJDxE6/c8zaZA4rdZvX87ExRUXCvlyaPAP
uziXJTJxhi+7++98cv84enY0ah8T+30VK/HBNJg727LTOoqB1bS35iiU0mBj
juyWp2cZuC/xRFxLGQ3MT00L3z3BwFZ+yd7bK2mQ1XzlSTCFgXdKbdrAXU/y
b/dWKLpoFK/x33E2qZ0GCQHUR7iNjlOknZW+TdFAse+MbGH7MN6uq67pPEOD
qhhmx7PCYdxiNLl1dpYG2CvX5XDiMF5z4fYhpUUaxOUMSoxYD2O/H9lngzl0
oNB0TNaweQjD7YkS6lodeHz09mxT0SDuJW7aR2/SgZlDD8Mq3PqxUnlm3BFb
HQg72/7i3MEu3ECdzei004HOuzzT6WN/cFDcwbeeDjowGbG9Nyr+D647PfL9
tpMO3FveM3hrqBOfFVLnwe46EN/+n8j2kA6M7fMua53XgcSSusqTOa3YZrbg
pFC0Doh46nG9a2rCMRplak3FOtCdwKWwnFSIT02s+lGjpgtdmzZJHV5sRg7Z
hg12VF0olvpaOGLbgqycbtYRGrpQuE9xyPxzC9r/nbNyHU0XXgy3bY6++BNR
cjg+O23VhapRPHRx4hcacGZ7PrdXF8yJq+G+nW3ItWkhSNVeF4riRsMjgruR
XcSOwCIHXeheffnW+pZuZAGXzx09qQsfO8+Y/rfuLzLMmz8T4KILD4+x+Z33
/ouUIuecS0/rQmRD+Mz69T2ob8+MyYlAXZi45frKyr0XOeePy0fc04W0o5Vq
v3v7kXeI+aLxfV1AHbqqpgIDKMC84Df/A11yv29Qjtw6gMKnAu7GxOlCTV69
0NaoAZSnP7fwOEkX7FfOJvloDaK50pVfL3J0wbF1V+Gg5xDieHDyjUeuLiT+
MN277v4Q4nctjVZ7pQu1kMO98H4IyXKHGua90YW27TMedPZhZGjM/ebdJ13Y
y6a32uThMIpp4o+uqCL5Mj2x9DF7hNSfZzxu1+iCptO2g5RvIyj9fMPeg3Uk
NpsY2cscQe/FY+brGnTBu4aecFeTjjptRD2af+rCP97CT1a5dKTSt2Fvb58u
mJYeT7d/Moq0Cy7JZgzoAqtdOfbZh1G0/VbHnNuQLhyt3Ui/3zyKTFSSXo/Q
yXiVc6/48DLQWS952X//yHgeq3OJn2eg4J035t5MkPVpv7TmeTQD3RLobTk/
pQtD+xX+drxgoPhX6VGzs7pw3F/sF2ol9cX1Ve6F87pgHPnH1nuMgXJM3QyC
F3XhmfXsTbSGiQoUK2V2L+vCgnjz6k9yTFQ8QZlbWdGF7JaxJ616TPR/H4pn
9Q==
       "]]},
     Annotation[#, "Charting`Private`Tag$3510#1"]& ]}, {}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 20}, {-0.999999941761652, 0.9999995837354044}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.809697264180338*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"b944d0d4-cad0-4cad-bef6-5038ba7746d8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Sin", "[", "x", "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", "0", ",", " ", "20"}], "}"}], ",", " ", 
   RowBox[{"AspectRatio", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.809697279453455*^9, 3.809697287237555*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"7827f635-5911-415c-8cd6-ced11b061f9f"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwlWnc8le/7N6LMrCibOMIxDqW07itpkIaZzKwIGRWptKislFRCWVHEh1Ja
ktvKjITKimyOc84je/s939fvr+f1fj33fY33dd3j/bweBWdfMzcONja2u5xs
bP97Jl115qa5PtlddeX/nxXN8ibH5S8it/dGsybkc6WyOFRePgI9r722ZUYu
AiWVRMtxySegd4nPRhzlEpD3roAzM3IvEZU48NJZ5iVqXvB4OCb3CXluvn49
ed0ntLqjV4UpV4NqwE+9YLoapdWm+I/KtaFG40Ri/nIrmox/p9Z9pw158LXr
3vjbiva71/U1zbUh3vr3jtiwDTE4ZywLm9sROxIacOBvR9t2HdkeEdaJzI8P
iPHFd6DGV4scKkQ3Sn7r7yKb2oWu1VKNaY596Mx60fnaLb0oK/8DJedRH7rp
HyEc7NyLmuINOJW/9aECQ8Oembu9SMndumi9fj9q8gx6cXioF9Vy3tRkEx1A
w5ydLS7kPPFdHSLfKweRG1/nzvrBfpT3KqLDW5OOjtjLCx6yHUJ0EfodYyc6
ajxSnTB+ZQipBBrv3vSQjlY3rtQ4pA6h1J18aX1zdPTRor4otH8IxdbcOWXz
dRSZxnVHT58eRoF99/4dsGOiVbomw3qnR9Cb/WPPlO8xUQnP1wPs4SOIeHnM
grOMiYq9PypFvRhBHn7CH4pVWCh9jcDGzt4RZLMUG7xlgoU8I+xHPK3pKIWv
LlR43xjqicm6tqA3inbvumx33WEM1T/rmk40HUWdPupbiAtjKN/kuPuU1yha
3xQ1+C17DG2OPaXWnjKK7sebGIUL/UPnZ6qk7FYxUKhyg+BKxz/EcVyBh6+E
gRSPXx06M/UPRf2847TzFwOVhGuWdAqOIy2BA3+UGAy0OHrXv3DPOBq7Mukk
KcFEAW+OtgRkjiPape/4/mkmckc/EhhnJ1Dg1BWtW2wsxPZsurAjagINPgDO
T8IsFL9KurM2YwJJ8pQ0piuyUHXNKdmXvyaQIKfpu6S9LLTJYvGZ2/ZJZGSh
YyYbwkIl7xUqLMwnUXjL5adc91nIesOBgb3ek6jgiG3OsxQWCu+6r6KYPIky
rz2JWPrMQsMeKv91sU+hkIdjsTr/WOh6nUl9veQUOlNTf6BiiYXWa55lFelO
ofRbqp94eQl0cKJI+4nbFHrg+tPmnQKB/lr2mkZenULQnWO6QYNAQR9Xn7v4
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
muoueXC6w3OFq4eFFgdKV8WBPASqxJy70MRCnsOT2b4H5MHxZ7KdSQG53pk2
M4qW8iCzSoYPn2OhZLHQ5mvW8uD6J1WQ34WFJnfkvOq0lYddkv1qnGYslBq5
4B7nLA/Pinf4jmmS+4vK01YeP3k4/0Ei81s/E/3n/OfTWKQ8GP0UHSwEJuKI
5Io7fFceVGc8xcvUmMg6X+Ns9n15aI493hQoxkRcbFfVXOPJePgnRkYGGcgh
SfbJ7+fy8DSW9W4pjIGEWh2Di0vkoWvRMUXi8yg6tRJmLVUhDy3J2/kkUkdR
EeX15qAqeegxdXGovjmKTgewMWkN8nByyXBsz+FRVCaSZv+8Qx60NfHphHY6
On+4d/edaXm41f6uQGFoBLWWubLbUBXAzvFDO0ftEBrb0y55RUsByCs1eQQM
odWlRzen6ihA/m7x3NO3h5Ae3u4+uE0BfK/MzQ/vGUIPPwvVn92nAFsCChN3
vB9ERwuK4qMcFKDMa0Nd8MMBVPlcTPtLjAK8GvZ2HlHtQ+/CKxzkpxTgkPmo
8bMnHSjLuG592KwC7A3yEzXSJ+8D/E1NzAUFuH0uVy7tVzu6HtO9/zOHImhY
Xb94WqgdmcTPa1oJKYLqkFHypeutqDdTeyVKXRFGXXWKn5r/RIJVT1NmnBTB
cP2JDuJJPTrFFfC3oUERPosxuFptHiGXs5ff8SduhA1V81erbvzGejpd71ST
NsLi3h4ji67fmHcc3u9P3Qh7q5/vztzeil/7c3+4/mIjdLwPVnk63ooX/e5/
nHyzEYjPPWkvHdtxnG/m5866jVDmYHgrVuMPrvFuLv1vaSMU/rnGZmfUg59S
9cpq2JTApHEL0jnXg/0Y8WWDnErg0HVsS9fTHizu7VAuz6sEW/T0Ct4RPdjZ
a6TiobgS3EoT5rN+0IsXT69UBWspwZPvy4RoUx/WcldvMHFSgoAqLscGtUHc
dVrON9dVCfZ54p+ZpoP4jreokKCHEtRxmr7YEzSIR/wXTL/7KAGHpWNSQcUg
Tg+u+2karAT8QdLcd2yGsESs1x+rx0pwMLtvT8bFYVz50PHqh0QlgLLHFqZP
h/H5x+Zy65OVYIJPctvH4mH84+kOp7YMJZiv6x/J5xjBUZl8A7ZvlIC618rX
OGwErxTlME7WK4Hdx682xSF0nIdToksbleD+EeNdnal0bFf2QFOxRQmiMyO1
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
9Q==
       "]]},
     Annotation[#, "Charting`Private`Tag$4149#1"]& ]}, {}},
  AspectRatio->Full,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 20}, {-0.999999941761652, 0.9999995837354044}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.809697289666418*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"c48bab09-38e9-472f-b82b-08a5ad056a3b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Sin", "[", "x", "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", "0", ",", " ", "20"}], "}"}], ",", " ", 
   RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8096973167895055`*^9, 3.809697324645488*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"1f2e33d0-4f45-44b4-9a54-54e9dbff0a30"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwlWnc8le/7N6LMrCibOMIxDqW07itpkIaZzKwIGRWptKislFRCWVHEh1Ja
ktvKjITKimyOc84je/s939fvr+f1fj33fY33dd3j/bweBWdfMzcONja2u5xs
bP97Jl115qa5PtlddeX/nxXN8ibH5S8it/dGsybkc6WyOFRePgI9r722ZUYu
AiWVRMtxySegd4nPRhzlEpD3roAzM3IvEZU48NJZ5iVqXvB4OCb3CXluvn49
ed0ntLqjV4UpV4NqwE+9YLoapdWm+I/KtaFG40Ri/nIrmox/p9Z9pw158LXr
3vjbiva71/U1zbUh3vr3jtiwDTE4ZywLm9sROxIacOBvR9t2HdkeEdaJzI8P
iPHFd6DGV4scKkQ3Sn7r7yKb2oWu1VKNaY596Mx60fnaLb0oK/8DJedRH7rp
HyEc7NyLmuINOJW/9aECQ8Oembu9SMndumi9fj9q8gx6cXioF9Vy3tRkEx1A
w5ydLS7kPPFdHSLfKweRG1/nzvrBfpT3KqLDW5OOjtjLCx6yHUJ0EfodYyc6
ajxSnTB+ZQipBBrv3vSQjlY3rtQ4pA6h1J18aX1zdPTRor4otH8IxdbcOWXz
dRSZxnVHT58eRoF99/4dsGOiVbomw3qnR9Cb/WPPlO8xUQnP1wPs4SOIeHnM
grOMiYq9PypFvRhBHn7CH4pVWCh9jcDGzt4RZLMUG7xlgoU8I+xHPK3pKIWv
LlR43xjqicm6tqA3inbvumx33WEM1T/rmk40HUWdPupbiAtjKN/kuPuU1yha
3xQ1+C17DG2OPaXWnjKK7sebGIUL/UPnZ6qk7FYxUKhyg+BKxz/EcVyBh6+E
gRSPXx06M/UPRf2847TzFwOVhGuWdAqOIy2BA3+UGAy0OHrXv3DPOBq7Mukk
KcFEAW+OtgRkjiPape/4/mkmckc/EhhnJ1Dg1BWtW2wsxPZsurAjagINPgDO
T8IsFL9KurM2YwJJ8pQ0piuyUHXNKdmXvyaQIKfpu6S9LLTJYvGZ2/ZJZGSh
YyYbwkIl7xUqLMwnUXjL5adc91nIesOBgb3ek6jgiG3OsxQWCu+6r6KYPIky
rz2JWPrMQsMeKv91sU+hkIdjsTr/WOh6nUl9veQUOlNTf6BiiYXWa55lFelO
ofRbqp94eQl0cKJI+4nbFHrg+tPmnQKB/lr2mkZenULQnWO6QYNAQR9Xn7v4
eAq9kxaMpW0j0MsrZu+O10yhtYfcb149TCCDvxd+7e+dQtkh6RxvjxOo3SBp
ZsvCFJIIn3Z+4kQg3jXD+mIa0yh3j61n2HkCecZeKW6MmUb717PJ18YRiGPq
WTd+OY2Ofqnc8iSZQInHq9lelU2jfeV+N+ReEKhWWnRv9OQ0wplKZ/cUEMj5
2jbXYIEZxKfTOdlVSKD5HvtbXpQZpFXd5KFVSiD1zKwqI+sZ5PGnZ2j4G4Eq
eBqGt/nPIK71N36ZNhHIznuCZ1PkDMqTPHPlzG8CTTasV5dIn0G+m3c37ugk
0B3abhPuohkkdP1gedFfAik9dDkz1ULaY3t6aKyfQEXT4Xf7mTOIKFzl+GuY
QBYn8l41c8+i8EbeSR8GgRifmxvL5GbRpYfj7IUEgW7Kzv3L3zaLstOKrn8Y
J5D0DVnRNNNZxMVSPu0+RaCCvr2bYzxnkVJnZkHNDIFM9p+2vBZK4kNB9l1z
BOrPuhvo83QWvcuIcHi+QKBgvoLH9u9mkdNI5FvZJQKJ+bR9NGmYRTyfh6yN
lwmU27jctmNoFsW6VR/atEKg/bpKC2psc+j7gHDkRxJ3PTKSltwwh1JYbiIL
JA6c9dnFozOHdjIU+wkSC9o+dJg1nkM1XK4rcSR+8eXTtSGXOcQrw+42Rtrf
Ld+d+it4Dtl9uyu+SPr/FbKq7OujOfTH2UG8cJFAPgOqfQV5c6i264q7Ghnv
X4e2NaU1c2hPmCm3ApmPeWu4Zn3/HHr99tv+omkCVZpus2hbmUP7vCq1FicI
tK1u6OKA5Dyy/yxZ83eMQDmGj1P+bZlHYmnZUp5MAskW7/+6dGwe9RC2tPgR
AsVsnabzeM+jo1s2rPMaIBBn/nMh8bB5VJfwo6mXrF+gmqWe4rN5FFEcdGGl
g0DD6avsNL/Mo5B4buHSXwRqiHPJ3D8xj/zGah116wgEQqL1ZoILyO0Wl15/
BYHeRpSNO6guIP0Uzb3biwkUH6yw+4LjAqK+v3z01yuyv6cbXUIvLSBVHXxB
OotAV3yvR9x7tIB2f9ZSXZNK9qtzd0tm3QL6eWzyZuNdArV03J1/O7iAiNHL
J3NvEeiA5W75EvZF9E7psYp2MIGoB5O8WrcuIj8K+6CKB4GSS03u95stoi0V
d8WT7AkkvGPx/dgZcjyXxvOPZgSa1rDl4MlYRMuz0jZ9OwhUKrohQV9oCcns
2lLzv/W9Obq6eJ/6EvIsyIt4v8hCL7iD+k33LyGXOIUvPAQL3Zn7peUZvIQa
0kEys4mFrLofViYOL6FxiSxa2SNyf7I2ZLzgXEbjOw1W591ioR1NE8JvZZeR
68JSukEAC8l/NbOvs1hG2kEhxClzFqJnC00ulCyjtQ7pGml8LGSnVLJhTecy
un/ixMPWWSb6nuSLxGaW0cC95xaFA0xUENMQSdVYQasOXflypZiJrgXeUbBP
WEHw9LcbrzcT8SrcVOnexgZOyf2/fD8wUPXO+1pX97HB+7uVD7jSGOi2dfJW
GTM2MF/uEbSIZCCOmI8HbL3YYHq7m6K0HQPNLzPcfyexgaNOpITj4iga7bTM
+s7BDp3b2HcPaI2i7Fnn1z5r2eFgns5vxXWjyEPM76OANDvA+ZnVMvN01H8o
svrQFnbooY7uOlhOR52FxcNV7uyw/eX7azfM6OhbvIpqyTd2SHrR8PiL6wiK
LNhMc2xjh6B1gokD+0bQwcY9+ssD7ODU2VXQQBlBFavtjHausAO7hZXnwNAw
KgqMOf2RxgHlQgH+Gu7DKNdi7uXrOA64E/u7zsdmCN0VqlNLO8kJR8X+NPKJ
D6BPW2XeHfHhBM3TZR++MvpRv4MvWrzMCf+F1J8zKO9HO3JFLY4/5oRFD2/T
2779aNjI7opAAye4/vsnuu9rH9obyvx+cccqOIgW/PlP9aLZqbUBZuJc4LPa
5XY6Wzdy7rDAnN+4YXSRO0nQuwn5f73p7KvCC+fyqo8PHirBsv37uad1eUGK
36c8UaQU13HwZAcDL6zPtLNQbivFyhD9L+IEL7COPTj0zq0ctxU+up4RxQuP
TM18ooIr8Z7XL5LbCF7o0QiWPp3yDQs/qW7f+5EPbG2WbdytWnDxp8irtRV8
IJ+oVmD6rgV7tZoomv7gg89tYwd5xH7ir+t+nHag88EOs/mbnY0/8cWYttkg
aX5o2LfINn/gN+65RRfPu84PUjav4w6qt+N8P37z9UYCcHnfyJG1Jd34W6Lo
xVwrASid9BWUWfsXD1ZIphi4CkBzf4Haqt1/seQG1VHvawLwLbH51L4nf/HN
0n2hpe8EwG5y/75b5j3YSuTaW09FQUih5KiGFfbi+bf/RL8sCMLN2j8d4o4D
WKxrVt+MZy3s6/+67B42gDXXsJ0cEl8LD0wuiVx+NYBd7AT/E9ZZC5PfhncP
LA/gb6vUDU95rIVK+uSWL4mDONnS9fzan2uBj+58RLJyCKdd9qJrHxeCbx0q
Zi+GR7B2Cc9smL0QmOecCjTmpuOSVVlc3S5CwLtmj37uRjr+G90vH+0nBKUM
+fO59nQsm2p/fCRCCFq/bG2JaaDjxIqjFWlFQlBGkRV5kT6K1XhYP2bLhOCQ
LMeEyJdR/Onwne6jNUJw4Ka60vZfo7j1V/X80k8hmMjcfvn9agYWH9lDsyGE
4OCFo7tPujNwrMDmZBFFYTgyvc3fcAMTK5o15ZzeJAxzXRI7t2sycX6c36cS
TWEoetz8YdCAiRvlclt8dgiDSXPbuLMXEwvqUPjqLIShYOnMdO9HJk4OrFiv
aCsM2qsulYXXMbHGZ2fKRSdhKBvRLuj7w8Qmhil7VHyEwXNx6NhHdhaOtFof
FBomDP/KvsX+3sfCkk/e32qPJt/XOGYrWLHwy26LB7SHwsB13TtK7hQLV3vc
z+tOFYZNlis8erdYmPsy78COQmGIfuVTXoNZOA5njceWCENm4Nxobj0LK686
wEavFIZU5ax8ww4WNowOlYpvJse/fn4nYoqFQ1IWTScZwsBbsXPKm0LgY9of
/dUnhCFB8cmNlzQCy5aeu+88JwxRote/JO4kcGEvvbGRSwTMPwy2J5oSOPzc
i7HV/CJg51YQ8dKWwFarnIWQiAjEiaeFeLsReFy57WiurAjsjTs4JRhE4JL3
D337lcj5r7kMWNcJfPfAsXtS6iLg/2Pw6o0IAqudrmqI2CoC9i6LgeUJBJ6d
C2GV7BKBjdvHeM+mEbgycrfg7F4R+M8gDFqyCOz837vDp46JwIfcNcZv3xNY
e5f/mSQrEfgWHLCo9YXAy/XU6BY7EXiRGSlwspzAiUT6N4PTIqDO/VyovYHA
HtcdGRd9RaCgcHJwYwuB9YSl+PMDROD52pB++TYCN+nEHpILEYGQl73Km3sJ
nFp+2MsqXATG87+ZGw8S2MeCJyr6rgh8FFe8Ikon8M6BiuyKh2R8I8Xx95gE
5g28XruQSPrbr59cPEbgVu6ddJ00EXBz67mVOkHgF49neDwzRYD1uvTglmkC
n9/0VjUtVwTCmpP/Bs8SeM8nH6PWtyJAq545cGGewILGaqfXFoqA7xDXJaVF
Ane2D4TvLxGBlvGiszeXCJztlZZ1pVIEKmXrNB8vEzho0a664JsIhEom5Nit
EHh/9Prh0SYRcBQ3HmohsZhsy+qNbSJwqPrz3xUS9+bdU7HpFoEIn9uP/5D4
NTp04P6ACOQ0LvL5kPhqI7d79SjJ724qyiftmziV3V75JwKc9zp1Mkn/kuNX
XujNioDkhpiRo2R8wyH6lWeWReDi69BTOWT870WnBjJWiYL907zcT2R+NzNe
c3XyisLuu2Xll8j8zbZ4K4sKi8KVOPU8FsmPfKXKPmMJUTCREDq37h+BWVZ9
rjdkRKHl3bENBMlv0VDyzY8bReGpUXjWZZL/yCCbDEJVFNRr+VQ/k/Wx5hGv
oGiLwsh2enouWT9K4o8+ez1R2PuIoWjeReBJtWjORztFgS//0escst4xJqv2
chqJgohxuHLgdwI7/MHO24+KwueeC8rDNQSm+lwO8bcUBaXNNm4CFQSuvjde
2u0kCmYB27v8PxA4Tj6vR9xDFP71ZW3Jf01g1/zT7Ed8RCG0nM6T8ZLAbM1/
oeiSKDxkFJ7JSCTzHylOu3RDFFLeCLxmjyUwD1sSh344Of57hx4XuR5ENE5U
vHskCpvcRC+uBBD48d6tyuefisJ7yl3PaS8CS9usu62TLgpCW1/wP3QisHLY
jwOvXovCKYvPbeWHyH5IepV15oMoVDp8NLACAmsWRPNQi0UhksOs9d5mAm/r
MarLqhOF+E96QnNSBDbeUXbk2aAoRCv+TsgcZOEG09RXJ5mikN7RfeBCKwub
e1wVkpsUhc6mEiOihoXtHm1vesIuBluT9InWHBb2Id5YPpIWg79c8SGPvVj4
QXq6XbiZGPj3/mMbbWfi9YU3vuw/IQahk5ZullVM/LTRUZbrpBiYhQwoe71l
4hdLUn9vnBGDAPHe5IRIJv54/KHL5XAxSBNR6VyzhYk7+W55+hSLQUdIBePU
JQY+qehSR/0qBi+8HmWkOzHwwLY91NE6MVDs3p1/7yADs9yWmO5tYrArX2Yo
cB0Ds5cE+DtNisG6sJHqiJxRTDl/KshCbR109YmfWlVDxxrbu81TtNeB0JuN
Fta5dLyZzVqLrrcOeiMXd3nep2ODO0aD1/aug5pSqmSNNR07ZFAtcuzWQd+e
/JxL/SM4rmVci+PeOlj4uDjLIIYx15ZrQ68m1oHM2h37qG2DmH9hpmx+bh3k
mqSG/ng3iEVK/ZL3sYnDhYHeu7tjB7H8YWfLDn5x8Djyn7e/8SDe6bavnJsi
DvJnhdcYfhzA5x/xpdhbi8O3rOpoRkQ/7p96bMX3RRy6zD9V9a3uxc/26J77
Uy4OXw+4Or5r78GO0Q33XtWKw/PX3ALmuT24XYmrxrxVHA6EphROmvbgH+Zn
dzydEAfPQ1fGu+P/4uJ8E3kNNQm4k3whMn5HF358hp1+5LEEpNnt/C9ubSs2
HvC8Euu/HnbM88rp//uKj/THqMvKSgKPj+daUd3v6Jt6f4udkiRY63WNF05+
R4fObb36RE0Sdp17cZHXthEd5OhqXL9VEqSpnjOjUj+Qgbx6oOgx8n0j/463
T5rQFruvJWtCJEFvZ9iv27E/kXTLnOXEgCRkJXJkzFt1oESpwys0hiTk3qL4
aud3oA0uqVl+45Lg4/r2syJfJxIf37/AXJaEerWv3vrFnUhI6GHqsIQU7Mlq
t5dQ6EKcJpqjf4ykwOfilwRv77+IXu58vTpXCgRDeYLsuPqQ3P1Wz7sFJDYa
nG3W7kMWDkcsLT5LQZZ24zkxuz5UPKuv9rdaCt5fcfRg5fehWA3hlpk+KTCw
ieubtSHvr4+xioqkNATvLJ9dThtAfq5bRJjy0nDo1bJDfc0AekHLWXyjIg0/
iVwT+38DSOhb3I/dW6RBYs5pDqNB1M/mc9nqmDT8lnhrd7NtEN3xlP5+67Y0
NPEkN75kG0alW2M/HYqWhh1Lr9fZKw2j6VVrMoQfSsOZffcV6w4Mo5MpE0FJ
adLAeqm+/DN6GG1uqVV8VyQNcab1P56Ij6A/uy4G9o9Lw7nzmrQHknQkwkec
zJ6Thg88UcJf9enoYKvrIT82GZDUsyrJsaajN2ePyS8KyEBIfI5K3CM6up2p
UiuqKgO0KaFnP/lGkabwL5m9jjLgYJ6F3o+MosHowZBHbjJw53D40yMcDJTE
OzM05CUDJc/ZONMkGYh/1fo3d4Jk4Jmy+/xZYwaiT5/Y/+u+DKSEw4avLxjo
eecfn9MVMpA9zhczZspEdidYzZ9rZaDQuvye4CkmEvu1vE3whwzcsA+U77vI
RCHf5Tjf/pGBdavdtF6lMtHJMqfHi9MyYJXZ9LWezkTSWQP4nqoslPylGi/5
sVCL0rRSr5YsrInW+uBznYWi0rgjN+vJgvnx1okH91hoPlHFos1AFhK+h+2b
+4+FWqNPDyvayYKN5AYr9X4WiuG9dDjAWRbaUn7u3/qPhQ6ERb6p8pCF8o/X
mVNLLPT+ek6wd4AsfA4U6IoUJ9CDc0yh93dlYXG/MZuQIYGMx5YC1jyShTD2
a0fzjhCI44xgh80TWahcUvdatiaQ3ymt5yuZsrDzT2baW28CbepDvGZ5shAZ
tjNqfSCBuh2P+WYUyEJm8M8uzWsEOnLCX9+oVBZ+XxDw9I0hEPevG8lPqmTB
Mv5hYEI8gb6YxXKy6mVBOmMs7jyp56kmb+tj22XhYq3P112k/u+vLtcZ+CsL
K/zP8tTfE+jJvpbHW4dkgT74zam2iEC8aMqpc0IWXBnZ/RtqCBS0Z9Oa9/Oy
wCHhUgjfCTS41zbvHrscvHG6uo/3J4Es9t+1OL1GDrLecwYEthOo7GDpvMFa
OeCt59O/1U0g7UOTqdLicnD/eGmIXj+Bkg+rHJiWloO12k6GkcME4j9mw/y+
UQ6qrm33v84g0CWz6Acv1eTgZX/e0voxAg1blOiH0uTA+YFOt/kEgayOT3Tb
bZMDk0ATfto0gSpOUG7rITnYZhQX/HqWQDp2J6hC++WA703RpqZ5AqU63Gka
MZEDZHWNN26RQIJOOKjcXA62Ml9L/+97ULDLuGySjRx4H91qu2qFQKNuyl8D
neQgKISvPI/ENh7WXsc85GC6VN/sf9+fqj2jhNV85UD/Vs9qOon1zhR/4AyU
g94bW/ovkTjD95/9n2A5MM65PJy7TCCRs0qrPoTKQYWmgEQo6e/6+ePZMZFy
gL2tzs0vEIgVGHnM874cvGf9Yhcj47W7+GV6b7wccNooVH+fIVDt5bGnMily
EOrY8U1jikDbrm7cO/NcDqSyvkhojhPoxXWrkcb/5ECk+EF+I4tAYqER97Lf
yoHhxI6MdaMECrlVtOVmoRzoGGbOLw4SaCyM6LAvlQP61raS270E+nbHcpPw
dznQ5lj4caOVQNvvhTfQf8rB9yOHt080ESjr/ufzFZ1yoNGidnh1PYFuximU
XqCT/sqFPkmUEGg83sLd9J8cPHDn2Sb2iUAnn4QJqM/KQcihM7lv8wkk2zhN
JTjkwdpepLkjjUCWpkJsdtzyMBNXm++aQKA7TarN1TzyoJPS0RdD9vN8i93F
Z0LyoEJ/nt18hUC/2sq+WsrKg4jP1XYuCwIJ2HbGlynIg/mMput/Bwlk2Dnl
paUsDy7VkxozOwn0pmuTCA9VHkKnlPkvKRHobt9dhyJ9eSjhj5veRrDQV9cs
muoueXC6w3OFq4eFFgdKV8WBPASqxJy70MRCnsOT2b4H5MHxZ7KdSQG53pk2
M4qW8iCzSoYPn2OhZLHQ5mvW8uD6J1WQ34WFJnfkvOq0lYddkv1qnGYslBq5
4B7nLA/Pinf4jmmS+4vK01YeP3k4/0Ei81s/E/3n/OfTWKQ8GP0UHSwEJuKI
5Io7fFceVGc8xcvUmMg6X+Ns9n15aI493hQoxkRcbFfVXOPJePgnRkYGGcgh
SfbJ7+fy8DSW9W4pjIGEWh2Di0vkoWvRMUXi8yg6tRJmLVUhDy3J2/kkUkdR
EeX15qAqeegxdXGovjmKTgewMWkN8nByyXBsz+FRVCaSZv+8Qx60NfHphHY6
On+4d/edaXm41f6uQGFoBLWWubLbUBXAzvFDO0ftEBrb0y55RUsByCs1eQQM
odWlRzen6ihA/m7x3NO3h5Ae3u4+uE0BfK/MzQ/vGUIPPwvVn92nAFsCChN3
vB9ERwuK4qMcFKDMa0Nd8MMBVPlcTPtLjAK8GvZ2HlHtQ+/CKxzkpxTgkPmo
8bMnHSjLuG592KwC7A3yEzXSJ+8D/E1NzAUFuH0uVy7tVzu6HtO9/zOHImhY
Xb94WqgdmcTPa1oJKYLqkFHypeutqDdTeyVKXRFGXXWKn5r/RIJVT1NmnBTB
cP2JDuJJPTrFFfC3oUERPosxuFptHiGXs5ff8SduhA1V81erbvzGejpd71ST
NsLi3h4ji67fmHcc3u9P3Qh7q5/vztzeil/7c3+4/mIjdLwPVnk63ooX/e5/
nHyzEYjPPWkvHdtxnG/m5866jVDmYHgrVuMPrvFuLv1vaSMU/rnGZmfUg59S
9cpq2JTApHEL0jnXg/0Y8WWDnErg0HVsS9fTHizu7VAuz6sEW/T0Ct4RPdjZ
a6TiobgS3EoT5rN+0IsXT69UBWspwZPvy4RoUx/WcldvMHFSgoAqLscGtUHc
dVrON9dVCfZ54p+ZpoP4jreokKCHEtRxmr7YEzSIR/wXTL/7KAGHpWNSQcUg
Tg+u+2karAT8QdLcd2yGsESs1x+rx0pwMLtvT8bFYVz50PHqh0QlgLLHFqZP
h/H5x+Zy65OVYIJPctvH4mH84+kOp7YMJZiv6x/J5xjBUZl8A7ZvlIC618rX
OGwErxTlME7WK4Hdx682xSF0nIdToksbleD+EeNdnal0bFf2QFOxRQmiMyO1
8orp+FPVZb++diWg+bEI7zk6Ptd0aNJtWAma37dVm3iN4qGh0QVPTmWo2mA6
fRQYOI7e/bSOWxnWXVlsCz/BwIbM5l1UXmXYEp3b73eWgdPGP19jCilD2aVR
88PpDGy7FMXpJ6sMOxVVBbXZmfi7CJUvQF8ZPD78euSSy8S7z5wZebJTGXZY
R3tJlTBxXlVeVRki7TH/c4hoYuK7wbSbQvvJ8Q21g7enmdhkUG8px0wZYnVM
szl3sHARBHU0WSqD0SOZWPdDLEx98unTnLUyxCyf3HXdloX5ju0MPOCoDE4+
Cuj7JRau/bSH6PVShov/nIu737HwdrHQeh5fZejQzIoaKGfhbJ+KHO2zylB+
k/Iv+QcLR2w84HE1SBnCr+stqTNY+GC0Sc+GW2T+QYp3c2QI/HEoGkO4MizN
XL9jrEpgFYPvSe5RyiDnclDlKakHuWdMbd7dV4bGl05lVsYE/nryePOxZGU4
myqWQzlL4M2f4/MvpClDnv2P9OOXCZyxrv1ecoYytI9on9l+k9SztXYmjGxl
SJG0lFz3iNTXSslqonnKcHjP7hb+JAK7XOtesz1fGdjTRfneZxDYYLPz17AP
ynAoVj1D+i2B39xNT88rVIYfgdm9bZ8IrDjSf+PnF2UQS7prdbCEwOzJ7rs3
ViiDVfaplG3fCOw3myVtXKUMusYFVoU/CPzXjD7vV6sM1CHJNcxfBC5ZfeZD
caMy/DtpQXH7S2Bt57xHA83KkDb+7HJ2P4FTi4hz/L+VIVGZ42nqMIGFJGhm
uu3KwOn25MoBBoGv+Z/VtvlD2qPbSaQQBGbVvRW88VcZNjTPncwcJ7ADZYqR
2acMMlvpZienCNxwXa+uYVAZovS9BmtmCLy748LLqRFluCl5bV3/HIHztnwK
k2YqQ+s+ZnveAoFlYubd9o4pw6KjgY7aEoHv0HcYek6Q9k0bJayWCbxoeEXx
/rQyaB/JC9dZIbB3SjHbxzllOPr3YwgmcefcSlfXojIMj9xftURiE4s9X7jY
KKCdnSowSuLPeSFPqJwUSCkWTo4gMbeJpeRjbgo4BqkeqCTtm46oJLDzUoDD
/1PCc9L/09vzEt4CFPCr50tQWSTw0Mb6uF9CFNg3ccnIZJ7AOqUp6/aIUUAu
2P+16CyBrzicfZgjQYHvyp4tV8j8qxcMRcWlKHAWE0WRJD+iCRKx12VJLJp0
djvJn4MeXWhUgQLeDdIrd0YJ/LK56J6lMgXmnVXPhAyR/eJ3T7BkEwVO0+9U
S/YRGAk6R6tRKWDFoSBr1UXgyJzN/I+0KKCZ2XB5cxuBfx5cHbWiQ4FEvrtj
75oJ7BX6X3iLPgWm+s6cfFZF4Pfy11ajXRSY0K25KlBK9k+x6e2XQIGuhznz
UoUEfjw7HXr1AAU+O26w35hD4N5HNRwjxhQIuGzqK51OYA3dpzfMj1Bg/53T
ep8SCVx+Zs+1TZYUEDxL2d8VTmBBPrHlWGsKSLT2lJ26RuATWYPBS7YUOPXl
pd2DAAITvVGXmpwpoDUmYtt2ksBS1r8Cgv0oEEJ/OySlS+BTU1mTg+fIeggP
vKymEDg/9vI50wsk/x8yoyQlCXygXt6fcpUcr9hjkLfCwucMvLwbo0j7TcS3
hEoWLu7eNbr9HgX4JLf8OPeBhXmuCHk+j6WA8ESz/mQmC6d8eOd+KYEC/gJL
zOEwFq6jsrkoZVKgYs0ascy9LCxe29RzN5sCUvwLbp9oLOzk/vzkXC5Znym3
Z+fkWHgmzdihoYACis87X/+dY+KNEo9OBJVRQOhJw9b0bCa+zK527NsfClwI
lqpdWmDgQUO+VkoPBUxy3d9KDDDwsXCG441+Ml7HnQ5/6xlYae0rX71RCvDk
XF2+mszA36Q330udpYBeI8/X2R0MLLttd8N5URXok926SdpjFIdflrP6Lq4C
3H7irw1MRvF4MVuXqqQKqF7nuCCtPYqr9pUzu+RVQHvZZ4U+Tcd+5gcFjDRV
YCXE9/fidTou8zEzkTFSAcp0OtpFnjfUN7otF0xUINOzIa341AiOmxKzazqq
AkqplPjZfSPYK/i3V5iVCqnfSt885hzBYpF2Uf9cVOBlWEX/ncvD+NTzU7Vf
r6qAS4L7YKbDEObtvHTQp0AFYnOFTnlP9mO9Cy8F7n1QgcNXN2Rda+jHTiKt
Ta8KVSD04tyqk1n9+OPBLfb/SlTAobH4ZoRtPz71jvA/X68CTbnvmBG4D5fe
dX1yaVAF2E4rXnx4tRcH7TnCur1+E5xoqGcKfejGAy8UHqYEbwLPdTMwdbQF
P9y0YdUnS1Uw33w56UHzJ2TnQMnss1YFdxHhojenPiOlh7rGgnaqEASRatFz
Rahg5XCMi7MqnHfSX6+ztgS1/AqRFvRVBWbY48PiOuVI9BZjs0u4Kkj6Kf2w
9alBsT3YTeCzKvy6Y5uU1NaEbCTq12wrVoUHRr4RttubkeLh9hznUlXw0Hcy
GElsRm8+Tv77UKUKMnx65n62LajpnupV5xZVOCt3IU6k/ScS3v0g7gNTFX6Y
pN/+9a0VxSSeqnKSVwOj3sPu/250oQuBIeeCN6rB4c5KNrm2LuRgliz3mKIG
5stqxhza3YjK++vCN6oagLVa1mBnN6q5uG/TVn010BlMZYQl/EUcJ5Qi+M3U
oNRvq+P64R4UINFr/CGUxMHtqTKu/chuYmn6x201iFezX20S2Y8Mv29IZ0So
gcfe/PGDr/uRSJjpgkKMGtA7ttH/W+hHedMlOXeeqsHKFCVINGYADf9M4Xd+
pwZrizddF3g1iGwe2jfwD6mB1K1ZNZfyYST9llfKi64Girm+Z5wHhlH3jw/u
NUzS/zoFEanVI8h1rQj77Uk1MG5zWfXBaAT5RFbqrrCrw3H9NQfv1Y2gkOta
Cf+k1eFi6ds6/1I6MkzpHDgqrw7jx79KdXbR0eriCJ28jeqQK3xs8/wCHd1Z
6KvzVFOHv56HA45tGUVxgfHLfVvVQYm64mKXMYpeerO7/jJTB81tkbS8cwzk
HZX3erMV+T4uRFf7DgNpZtsuxZ5Qh/9uae10ymCgN0Pv4o6eVIcNOWLHvjcz
UJGzZ031GXUYNE3Sb9Fkoqs3JMRV/NVh5EW4YpUhE+1JrXC+dZ6M/9RDbncb
Jqr8I7u457I6mOxKrfvvJhM1Wjdrfg5XB0Vh+wajn0wUe+H65Q131OH1hbeC
ycNMZBmnUX3hnjrccvS/mLTARO3NYU6b49TB/GnEzFN5Fuo/svNhbro6pFu3
M+JPsdCLMyN/+TLVoSkvshEusNDpO3EantmkPzNB49gwFmLVjFVS8tXhhOPJ
/bRMFpo1fD6XUqwO1u5FMTa9LBT8OSW0olQdAnwP8DmQ+o9NJ1FgpEId4nuD
Nq5bZKHVcvcUdOrUoerA9KskMQKJzwUZVfxWh9+rfsyKGRAo0fdc83C7OkQT
XZJvTAgkM3jGXqCLHH9OYZL9OIGUmp39rfrVYfiwmvsnTwLp5pokDI+pg36J
z7ubdwn0fuOBjQKT6uATJTheEEfq68Q9ubQZdbAo36j1OJlABmF6pZeW1IGS
c9/eP5dAlUvah1LYqCC7brfa6QICGZ1X/1nOSQXXwtV5Ip8JdMxJfoSflwpG
+4cSLlURqOW35DmaABUswbZvG6nPrY+sW7IUooLGcNaLLFK/d1asDbskSgW1
QpdfNb8J5LiDVzhFnArpW3vcnnYSqDd/1ZPyDVSgcesbyfcQ6NSmFaVhaSpI
C+wLsBwgED15Lo9fngq/Y9K6d4wQyGfd5DbaRirkm+RebWaQ+j+KVWZJoUJC
ZISR9BiBAjhGTC6pUoFTX3Kb+ASBZoP6fiVTqTCxzLW3dIpAwcSfk+VaVJA7
8t5FZpZAbKda6UM6VNA5d/yh2jyBbnY2nefXI3FG6/fhBQKtMa9f1tanArsA
Q9h6iUBRNVXhljupsNzGfTxomUCCUCZyCVHhKzg9NVohUOz7oqfJBlTgCZvu
riOxuMYHSvk+KjxafUt+hcSJ6fmvhw5SwWnLXfs+EstK/red34QK359aPQ4i
cVrMiwrto6T93oGGYtK+0uq0I5ZmVDAo5+Z+T/rPuvKk9aIlFd7zHkAOiwSi
Tj5yTramAuv+zJUPZPyvPWMYZbZUqNhMrSwl89vcExk45ECFw9Wfpa9ME+jD
8Vts/M5U6BWEsBGSn+0N1yK13ch6Zq/jX/2PQMWGl8QsPaiwit/uzU8m2R+f
zydf9KLCZ5epG5Z0sj9ovpuSfahQHnU79PYggYyzTr8p8yfznwgs8eglUL2s
686h81QIjxgzWPxD9gffiWPal6lwo3nccGsL2R8h5u0WV0k+WImdXQ1kf8we
dr14gwpxNbz0rTUE6hswCCoLo8K5jF/Jy0Wk/5SGZ2pRVPC1SvTqeEegVGub
+ti7VHixJnKzXR6BHOr8FV0eUWHOdlHEmOznLzeXTOriyfzWKRz/8IhA0rsj
Lug+pcL+S+8mq+8QqP116jfOdCo8qP2b0XaRQPqe1BmvF1SwO3ya1epLoPiN
HxVaXlLh3xrDlWA3AlnFfQ/MeE2F1KNbxt4eJVDT5WX5fcVU8FfPSfgrRyDa
lshDuaVUSCtWTeMRJVAMa13guq9kfZKMrrRyEeiIk0bdQB05PzPmsAedhWr3
2wXcbiPXl//uYotXLKTKNpzC6iT56Exufv2//xM/nau1+kuFZ1qW/AX3WGg/
NUpOZYgKq89YPnvtw0JlwoU1VZNUqD5R/yZsEwsp1O2b1JqlwvDkpIaiOAtd
v/lDNn6BCtMdCbZunCy0e2b4nAeHBvTGtZDnFxMVdkrI8ghpwFjAjR0dUUz0
JjPgrLG6BiwpPpgraWMgYSf2pDeaGvCo0mgXRxkD+UlGV0nqaADflJ/g2Ety
/47OkB7dpgFgcMq/KYiBss82V0bt1wBNrb/rC0UY6NkumlS9kwasZewct9o6
isqO8IYuuGqA4epXUz7So6jXsY+u6qEBdGEeJwP2UbQx5FHhbR8NyE1RDpWu
paOMyrkTcFkDAgKuZTy3pqPnR8vi3z7UANe2PVyHTo+gLCdz8cQqDeDeY3Oe
3XYIVZ+lXq2u1YCBi1dt1m8bQsOhXIPT9RogZOl6Y1JsCG168eGdeYsGbG7K
nlqqH0Qv6VKWAj0asLeuyNJx1yDKPtf/4Pq8BkxV7/r0n/AAyr0VIOyuoQmN
gU73xR70IsZO+5Bb2prAGRXqYevZS643w4l0XU2omvoZGLCnF2U7i/38q68J
JkNHqpSIHpSF3sbb7NeE3qLvOpcP9qCMuTG5I46acFtFpbJksBslnvHW3HJf
EyIP+p5qPtGOwixdDnFOacKF2BtzY1L1aEtn2suwei0Y9bO/N/SkGgtpesy+
atSC1Sc8NSWcazDjmuaB1mYt2OX2M2L1plqcsfFz/6Z2LYivWFuq+LYOi3m1
yNUOagF9Pt9VoLIBzwdzHuJm0wYt4nBhqE8TbuPTKz24QRv+O7U0SHVqxZWb
E4Y7JbXh1S5+rkvFrbjAfnGtv7Q2aJ43uBAh1YZjXpU5JMhpQ0vt0sfRljZ8
0Pzo4oiyNjz6pH8pw7ADf0z02Bqlow0yH/Ot5CS6cLzqk9z6Q9rQo/tCUbi0
B09O7H8eelgbHKpOy4ayevDR4vGn+ke1QcnDOblEqhdzmxvfeW6mDYTa8Ian
Ab04IHjO88oJbUh02Z1dSenDZt+Pb9Jw14azD7wSLl7tx3kJnPJ9HtqgWsym
7E7eb3lcX0kkeGpD/E/V7eub+nHJLPdqLh9t+JX8fUO50gDWUnw/0HleGwoE
em9oVg1g/gCx9Dsh2lB1kIs5uTKIPVBJosFNbZg5kerTpzyEy3m8Y2dvaYOg
77zW3UND+FJy+Q3XCG2Qon74JB43hEeqzp7cGUPy86mRb1hlGFdK/pBhJGmD
Bcd2B63dI/haSXT8oU/asGju/zNBZxTT/5Q8nCvUhhvDXGZfj4xiq4WJmMwi
bSiuS6lI9xzFVD2bCM4SbTA9C2ZBaaO4NYdy6XMlGb9MTs4FPgbWeYxt1Vu0
gWJtLXKvkYGTCsaPt/3Uhot6P2cqhxh4TZOyRdhvbdh196Jp7jIDd/PfMelr
1wYzw3eON9WZ+E6I9a4nPdrQzeAQsrzBxINn/snyEdrw/EDnsokMC5tGKUl9
GtMGv4fLHUe1WLgo67iE+7g2RAYY3F8CFn7Q92Vt+ZQ2bOZO+2LtwsJwIpLt
8qI2BH5L61+TwcI5gV8WNy1rw/KQ2l77t6S+ezg2+2tFGz5mHOKyLWNhZoPV
Px1OGjiZyfCbdbNwouHGXjoPDQ6qq5aoriMwl7NVVzwfDXpPjzZWKBDY71pE
+34BGqx/Wy+wRpPUo4VE0zMhGry9HxFyex+B3/xW/H5MhAZfr0kFlR4jsOyU
Zd2yKA3+9O9el2FL6nmtonIbCRoo9Np/c/QjsONhAq/ZQCPPk46cbZcIXOup
WPRekgarfxNfPoYSOPV5eIGILA2UL6atzXtEYL7yz69L5GhgsvmR9MZkAgf+
Zf3no0CDjlvfpne/IPBhKcvntUo0kMq//tHzHYHj+zVLbCk0uDS38puziMD9
uWs6GCo0aPncuPZoGYGDoUhorToN3MKtoxbqCVzNE6eeSiXzU3R/Y9dMYLFm
3/00TRqIPwn86NtK4P/cNgab02jgrn5TO6eHwLOaS3H9OjQIVm+Nah4gsOHs
r/yAzTRYJdYWnztC4JjS19+49Uj+dogc0WcSuCMycujxVhosmHx/FjhGYIqF
K4eqPg1ST0jfc5sg8FmZ3TKF22nAN/aVj3uawMWDEtsO7aSBAPWEiPUsgXlf
/zPr3EWD/sqNSbbzBLa6WHfmDKKBvvLmTKFFAj8zeB6+DDQwcDlBvbBEYBbf
tfR7BqQ9x42q95YJrP/TuljekJxf0ptovULgm8k6bfn7aLDC/vJaM4kb3fkn
DQ7QQM3/4K///f8jTRsUbDlIgzdbLJL/9/+PxzxWdTOmgf8x+VZvEheUJxhO
HyLnJ5bezCXts0Wfcww7TAOerwIvUkj/JlaHL60/SoPmo0927yXji5dTefTy
GFmvsFLTeDL+/mG219vNaJAZHN+XTOan/aa9ts6cBu+nZ2etyPyDLxcM2FnS
4IlX8OMSkp8qw7tsLCsa7B0L/tpB8ici6CF1zZoGpqrrIrNIfh1+79ETsiHn
68szKXQCZ6dKmabZ0uDMK/0Zq0ECT5+e8tKxJ/vH50v+tl4CG+h+v13uQNY3
oYry7Q+B7y5mpVmcpEF60GYn4TayPvfsfge60IA3zt0yv4Gsj7Xe+Go3sp/V
XmziryHroyAkkHCKBt19WyfXlxPYsqDc4PNpGmhfuPHq4Huyf68k2Zt40eCC
UF6x1ysCM/ZfCPrjTdZ7WZxrTxbJf5ta3oovDQZYRVc5Ekj+n62qifGnwWXD
U79ZMST/3l19CudI/9uV3kSHE/jt8v0NhoFkv93vh75AAvdunLsZHkyDSAN1
nbGjBNZkNqVsuEqD249mV50j1+Ol9/8VZl8j19t/m0Rfbif5Mjo59i2EBifi
HEy0lAi8x6fKVjiCBqHSi/syJ1h4vnVkf0UkDXZp3nuZO8DCBXv5dS7cocFH
s+/dNr9ZmLLBdM2fe6T/1gLP7E8szF/RXpAVR4OQ67hY8RILV2oupdjG02Cn
o3WA62kWvpYgFyWYSOZbZeV2xJqFx31cnc4n0cD+YfkHqS0s3LqBJQAZNCj9
aFiTRmfi2JtCc+PPaTBbtDKo9puJDxE6/c8zaZA4rdZvX87ExRUXCvlyaPAP
uziXJTJxhi+7++98cv84enY0ah8T+30VK/HBNJg727LTOoqB1bS35iiU0mBj
juyWp2cZuC/xRFxLGQ3MT00L3z3BwFZ+yd7bK2mQ1XzlSTCFgXdKbdrAXU/y
b/dWKLpoFK/x33E2qZ0GCQHUR7iNjlOknZW+TdFAse+MbGH7MN6uq67pPEOD
qhhmx7PCYdxiNLl1dpYG2CvX5XDiMF5z4fYhpUUaxOUMSoxYD2O/H9lngzl0
oNB0TNaweQjD7YkS6lodeHz09mxT0SDuJW7aR2/SgZlDD8Mq3PqxUnlm3BFb
HQg72/7i3MEu3ECdzei004HOuzzT6WN/cFDcwbeeDjowGbG9Nyr+D647PfL9
tpMO3FveM3hrqBOfFVLnwe46EN/+n8j2kA6M7fMua53XgcSSusqTOa3YZrbg
pFC0Doh46nG9a2rCMRplak3FOtCdwKWwnFSIT02s+lGjpgtdmzZJHV5sRg7Z
hg12VF0olvpaOGLbgqycbtYRGrpQuE9xyPxzC9r/nbNyHU0XXgy3bY6++BNR
cjg+O23VhapRPHRx4hcacGZ7PrdXF8yJq+G+nW3ItWkhSNVeF4riRsMjgruR
XcSOwCIHXeheffnW+pZuZAGXzx09qQsfO8+Y/rfuLzLMmz8T4KILD4+x+Z33
/ouUIuecS0/rQmRD+Mz69T2ob8+MyYlAXZi45frKyr0XOeePy0fc04W0o5Vq
v3v7kXeI+aLxfV1AHbqqpgIDKMC84Df/A11yv29Qjtw6gMKnAu7GxOlCTV69
0NaoAZSnP7fwOEkX7FfOJvloDaK50pVfL3J0wbF1V+Gg5xDieHDyjUeuLiT+
MN277v4Q4nctjVZ7pQu1kMO98H4IyXKHGua90YW27TMedPZhZGjM/ebdJ13Y
y6a32uThMIpp4o+uqCL5Mj2x9DF7hNSfZzxu1+iCptO2g5RvIyj9fMPeg3Uk
NpsY2cscQe/FY+brGnTBu4aecFeTjjptRD2af+rCP97CT1a5dKTSt2Fvb58u
mJYeT7d/Moq0Cy7JZgzoAqtdOfbZh1G0/VbHnNuQLhyt3Ui/3zyKTFSSXo/Q
yXiVc6/48DLQWS952X//yHgeq3OJn2eg4J035t5MkPVpv7TmeTQD3RLobTk/
pQtD+xX+drxgoPhX6VGzs7pw3F/sF2ol9cX1Ve6F87pgHPnH1nuMgXJM3QyC
F3XhmfXsTbSGiQoUK2V2L+vCgnjz6k9yTFQ8QZlbWdGF7JaxJ616TPR/H4pn
9Q==
       "]]},
     Annotation[#, "Charting`Private`Tag$5714#1"]& ]}, {}},
  AspectRatio->1,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 20}, {-0.999999941761652, 0.9999995837354044}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8096973258674655`*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"931c4b0e-bcd5-4a86-b485-d0e6e9c636c3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Sin", "[", "x", "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", "0", ",", " ", "20"}], "}"}], ",", " ", 
   RowBox[{"AspectRatio", "\[Rule]", 
    RowBox[{"1", "/", "2"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8096973513514366`*^9, 3.8096973615114155`*^9}, {
  3.809697395926343*^9, 3.809697399829345*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"14b1c108-bd10-45a3-8fc1-96e16fef2edb"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwlWnc8le/7N6LMrCibOMIxDqW07itpkIaZzKwIGRWptKislFRCWVHEh1Ja
ktvKjITKimyOc84je/s939fvr+f1fj33fY33dd3j/bweBWdfMzcONja2u5xs
bP97Jl115qa5PtlddeX/nxXN8ibH5S8it/dGsybkc6WyOFRePgI9r722ZUYu
AiWVRMtxySegd4nPRhzlEpD3roAzM3IvEZU48NJZ5iVqXvB4OCb3CXluvn49
ed0ntLqjV4UpV4NqwE+9YLoapdWm+I/KtaFG40Ri/nIrmox/p9Z9pw158LXr
3vjbiva71/U1zbUh3vr3jtiwDTE4ZywLm9sROxIacOBvR9t2HdkeEdaJzI8P
iPHFd6DGV4scKkQ3Sn7r7yKb2oWu1VKNaY596Mx60fnaLb0oK/8DJedRH7rp
HyEc7NyLmuINOJW/9aECQ8Oembu9SMndumi9fj9q8gx6cXioF9Vy3tRkEx1A
w5ydLS7kPPFdHSLfKweRG1/nzvrBfpT3KqLDW5OOjtjLCx6yHUJ0EfodYyc6
ajxSnTB+ZQipBBrv3vSQjlY3rtQ4pA6h1J18aX1zdPTRor4otH8IxdbcOWXz
dRSZxnVHT58eRoF99/4dsGOiVbomw3qnR9Cb/WPPlO8xUQnP1wPs4SOIeHnM
grOMiYq9PypFvRhBHn7CH4pVWCh9jcDGzt4RZLMUG7xlgoU8I+xHPK3pKIWv
LlR43xjqicm6tqA3inbvumx33WEM1T/rmk40HUWdPupbiAtjKN/kuPuU1yha
3xQ1+C17DG2OPaXWnjKK7sebGIUL/UPnZ6qk7FYxUKhyg+BKxz/EcVyBh6+E
gRSPXx06M/UPRf2847TzFwOVhGuWdAqOIy2BA3+UGAy0OHrXv3DPOBq7Mukk
KcFEAW+OtgRkjiPape/4/mkmckc/EhhnJ1Dg1BWtW2wsxPZsurAjagINPgDO
T8IsFL9KurM2YwJJ8pQ0piuyUHXNKdmXvyaQIKfpu6S9LLTJYvGZ2/ZJZGSh
YyYbwkIl7xUqLMwnUXjL5adc91nIesOBgb3ek6jgiG3OsxQWCu+6r6KYPIky
rz2JWPrMQsMeKv91sU+hkIdjsTr/WOh6nUl9veQUOlNTf6BiiYXWa55lFelO
ofRbqp94eQl0cKJI+4nbFHrg+tPmnQKB/lr2mkZenULQnWO6QYNAQR9Xn7v4
eAq9kxaMpW0j0MsrZu+O10yhtYfcb149TCCDvxd+7e+dQtkh6RxvjxOo3SBp
ZsvCFJIIn3Z+4kQg3jXD+mIa0yh3j61n2HkCecZeKW6MmUb717PJ18YRiGPq
WTd+OY2Ofqnc8iSZQInHq9lelU2jfeV+N+ReEKhWWnRv9OQ0wplKZ/cUEMj5
2jbXYIEZxKfTOdlVSKD5HvtbXpQZpFXd5KFVSiD1zKwqI+sZ5PGnZ2j4G4Eq
eBqGt/nPIK71N36ZNhHIznuCZ1PkDMqTPHPlzG8CTTasV5dIn0G+m3c37ugk
0B3abhPuohkkdP1gedFfAik9dDkz1ULaY3t6aKyfQEXT4Xf7mTOIKFzl+GuY
QBYn8l41c8+i8EbeSR8GgRifmxvL5GbRpYfj7IUEgW7Kzv3L3zaLstOKrn8Y
J5D0DVnRNNNZxMVSPu0+RaCCvr2bYzxnkVJnZkHNDIFM9p+2vBZK4kNB9l1z
BOrPuhvo83QWvcuIcHi+QKBgvoLH9u9mkdNI5FvZJQKJ+bR9NGmYRTyfh6yN
lwmU27jctmNoFsW6VR/atEKg/bpKC2psc+j7gHDkRxJ3PTKSltwwh1JYbiIL
JA6c9dnFozOHdjIU+wkSC9o+dJg1nkM1XK4rcSR+8eXTtSGXOcQrw+42Rtrf
Ld+d+it4Dtl9uyu+SPr/FbKq7OujOfTH2UG8cJFAPgOqfQV5c6i264q7Ghnv
X4e2NaU1c2hPmCm3ApmPeWu4Zn3/HHr99tv+omkCVZpus2hbmUP7vCq1FicI
tK1u6OKA5Dyy/yxZ83eMQDmGj1P+bZlHYmnZUp5MAskW7/+6dGwe9RC2tPgR
AsVsnabzeM+jo1s2rPMaIBBn/nMh8bB5VJfwo6mXrF+gmqWe4rN5FFEcdGGl
g0DD6avsNL/Mo5B4buHSXwRqiHPJ3D8xj/zGah116wgEQqL1ZoILyO0Wl15/
BYHeRpSNO6guIP0Uzb3biwkUH6yw+4LjAqK+v3z01yuyv6cbXUIvLSBVHXxB
OotAV3yvR9x7tIB2f9ZSXZNK9qtzd0tm3QL6eWzyZuNdArV03J1/O7iAiNHL
J3NvEeiA5W75EvZF9E7psYp2MIGoB5O8WrcuIj8K+6CKB4GSS03u95stoi0V
d8WT7AkkvGPx/dgZcjyXxvOPZgSa1rDl4MlYRMuz0jZ9OwhUKrohQV9oCcns
2lLzv/W9Obq6eJ/6EvIsyIt4v8hCL7iD+k33LyGXOIUvPAQL3Zn7peUZvIQa
0kEys4mFrLofViYOL6FxiSxa2SNyf7I2ZLzgXEbjOw1W591ioR1NE8JvZZeR
68JSukEAC8l/NbOvs1hG2kEhxClzFqJnC00ulCyjtQ7pGml8LGSnVLJhTecy
un/ixMPWWSb6nuSLxGaW0cC95xaFA0xUENMQSdVYQasOXflypZiJrgXeUbBP
WEHw9LcbrzcT8SrcVOnexgZOyf2/fD8wUPXO+1pX97HB+7uVD7jSGOi2dfJW
GTM2MF/uEbSIZCCOmI8HbL3YYHq7m6K0HQPNLzPcfyexgaNOpITj4iga7bTM
+s7BDp3b2HcPaI2i7Fnn1z5r2eFgns5vxXWjyEPM76OANDvA+ZnVMvN01H8o
svrQFnbooY7uOlhOR52FxcNV7uyw/eX7azfM6OhbvIpqyTd2SHrR8PiL6wiK
LNhMc2xjh6B1gokD+0bQwcY9+ssD7ODU2VXQQBlBFavtjHausAO7hZXnwNAw
KgqMOf2RxgHlQgH+Gu7DKNdi7uXrOA64E/u7zsdmCN0VqlNLO8kJR8X+NPKJ
D6BPW2XeHfHhBM3TZR++MvpRv4MvWrzMCf+F1J8zKO9HO3JFLY4/5oRFD2/T
2779aNjI7opAAye4/vsnuu9rH9obyvx+cccqOIgW/PlP9aLZqbUBZuJc4LPa
5XY6Wzdy7rDAnN+4YXSRO0nQuwn5f73p7KvCC+fyqo8PHirBsv37uad1eUGK
36c8UaQU13HwZAcDL6zPtLNQbivFyhD9L+IEL7COPTj0zq0ctxU+up4RxQuP
TM18ooIr8Z7XL5LbCF7o0QiWPp3yDQs/qW7f+5EPbG2WbdytWnDxp8irtRV8
IJ+oVmD6rgV7tZoomv7gg89tYwd5xH7ir+t+nHag88EOs/mbnY0/8cWYttkg
aX5o2LfINn/gN+65RRfPu84PUjav4w6qt+N8P37z9UYCcHnfyJG1Jd34W6Lo
xVwrASid9BWUWfsXD1ZIphi4CkBzf4Haqt1/seQG1VHvawLwLbH51L4nf/HN
0n2hpe8EwG5y/75b5j3YSuTaW09FQUih5KiGFfbi+bf/RL8sCMLN2j8d4o4D
WKxrVt+MZy3s6/+67B42gDXXsJ0cEl8LD0wuiVx+NYBd7AT/E9ZZC5PfhncP
LA/gb6vUDU95rIVK+uSWL4mDONnS9fzan2uBj+58RLJyCKdd9qJrHxeCbx0q
Zi+GR7B2Cc9smL0QmOecCjTmpuOSVVlc3S5CwLtmj37uRjr+G90vH+0nBKUM
+fO59nQsm2p/fCRCCFq/bG2JaaDjxIqjFWlFQlBGkRV5kT6K1XhYP2bLhOCQ
LMeEyJdR/Onwne6jNUJw4Ka60vZfo7j1V/X80k8hmMjcfvn9agYWH9lDsyGE
4OCFo7tPujNwrMDmZBFFYTgyvc3fcAMTK5o15ZzeJAxzXRI7t2sycX6c36cS
TWEoetz8YdCAiRvlclt8dgiDSXPbuLMXEwvqUPjqLIShYOnMdO9HJk4OrFiv
aCsM2qsulYXXMbHGZ2fKRSdhKBvRLuj7w8Qmhil7VHyEwXNx6NhHdhaOtFof
FBomDP/KvsX+3sfCkk/e32qPJt/XOGYrWLHwy26LB7SHwsB13TtK7hQLV3vc
z+tOFYZNlis8erdYmPsy78COQmGIfuVTXoNZOA5njceWCENm4Nxobj0LK686
wEavFIZU5ax8ww4WNowOlYpvJse/fn4nYoqFQ1IWTScZwsBbsXPKm0LgY9of
/dUnhCFB8cmNlzQCy5aeu+88JwxRote/JO4kcGEvvbGRSwTMPwy2J5oSOPzc
i7HV/CJg51YQ8dKWwFarnIWQiAjEiaeFeLsReFy57WiurAjsjTs4JRhE4JL3
D337lcj5r7kMWNcJfPfAsXtS6iLg/2Pw6o0IAqudrmqI2CoC9i6LgeUJBJ6d
C2GV7BKBjdvHeM+mEbgycrfg7F4R+M8gDFqyCOz837vDp46JwIfcNcZv3xNY
e5f/mSQrEfgWHLCo9YXAy/XU6BY7EXiRGSlwspzAiUT6N4PTIqDO/VyovYHA
HtcdGRd9RaCgcHJwYwuB9YSl+PMDROD52pB++TYCN+nEHpILEYGQl73Km3sJ
nFp+2MsqXATG87+ZGw8S2MeCJyr6rgh8FFe8Ikon8M6BiuyKh2R8I8Xx95gE
5g28XruQSPrbr59cPEbgVu6ddJ00EXBz67mVOkHgF49neDwzRYD1uvTglmkC
n9/0VjUtVwTCmpP/Bs8SeM8nH6PWtyJAq545cGGewILGaqfXFoqA7xDXJaVF
Ane2D4TvLxGBlvGiszeXCJztlZZ1pVIEKmXrNB8vEzho0a664JsIhEom5Nit
EHh/9Prh0SYRcBQ3HmohsZhsy+qNbSJwqPrz3xUS9+bdU7HpFoEIn9uP/5D4
NTp04P6ACOQ0LvL5kPhqI7d79SjJ724qyiftmziV3V75JwKc9zp1Mkn/kuNX
XujNioDkhpiRo2R8wyH6lWeWReDi69BTOWT870WnBjJWiYL907zcT2R+NzNe
c3XyisLuu2Xll8j8zbZ4K4sKi8KVOPU8FsmPfKXKPmMJUTCREDq37h+BWVZ9
rjdkRKHl3bENBMlv0VDyzY8bReGpUXjWZZL/yCCbDEJVFNRr+VQ/k/Wx5hGv
oGiLwsh2enouWT9K4o8+ez1R2PuIoWjeReBJtWjORztFgS//0escst4xJqv2
chqJgohxuHLgdwI7/MHO24+KwueeC8rDNQSm+lwO8bcUBaXNNm4CFQSuvjde
2u0kCmYB27v8PxA4Tj6vR9xDFP71ZW3Jf01g1/zT7Ed8RCG0nM6T8ZLAbM1/
oeiSKDxkFJ7JSCTzHylOu3RDFFLeCLxmjyUwD1sSh344Of57hx4XuR5ENE5U
vHskCpvcRC+uBBD48d6tyuefisJ7yl3PaS8CS9usu62TLgpCW1/wP3QisHLY
jwOvXovCKYvPbeWHyH5IepV15oMoVDp8NLACAmsWRPNQi0UhksOs9d5mAm/r
MarLqhOF+E96QnNSBDbeUXbk2aAoRCv+TsgcZOEG09RXJ5mikN7RfeBCKwub
e1wVkpsUhc6mEiOihoXtHm1vesIuBluT9InWHBb2Id5YPpIWg79c8SGPvVj4
QXq6XbiZGPj3/mMbbWfi9YU3vuw/IQahk5ZullVM/LTRUZbrpBiYhQwoe71l
4hdLUn9vnBGDAPHe5IRIJv54/KHL5XAxSBNR6VyzhYk7+W55+hSLQUdIBePU
JQY+qehSR/0qBi+8HmWkOzHwwLY91NE6MVDs3p1/7yADs9yWmO5tYrArX2Yo
cB0Ds5cE+DtNisG6sJHqiJxRTDl/KshCbR109YmfWlVDxxrbu81TtNeB0JuN
Fta5dLyZzVqLrrcOeiMXd3nep2ODO0aD1/aug5pSqmSNNR07ZFAtcuzWQd+e
/JxL/SM4rmVci+PeOlj4uDjLIIYx15ZrQ68m1oHM2h37qG2DmH9hpmx+bh3k
mqSG/ng3iEVK/ZL3sYnDhYHeu7tjB7H8YWfLDn5x8Djyn7e/8SDe6bavnJsi
DvJnhdcYfhzA5x/xpdhbi8O3rOpoRkQ/7p96bMX3RRy6zD9V9a3uxc/26J77
Uy4OXw+4Or5r78GO0Q33XtWKw/PX3ALmuT24XYmrxrxVHA6EphROmvbgH+Zn
dzydEAfPQ1fGu+P/4uJ8E3kNNQm4k3whMn5HF358hp1+5LEEpNnt/C9ubSs2
HvC8Euu/HnbM88rp//uKj/THqMvKSgKPj+daUd3v6Jt6f4udkiRY63WNF05+
R4fObb36RE0Sdp17cZHXthEd5OhqXL9VEqSpnjOjUj+Qgbx6oOgx8n0j/463
T5rQFruvJWtCJEFvZ9iv27E/kXTLnOXEgCRkJXJkzFt1oESpwys0hiTk3qL4
aud3oA0uqVl+45Lg4/r2syJfJxIf37/AXJaEerWv3vrFnUhI6GHqsIQU7Mlq
t5dQ6EKcJpqjf4ykwOfilwRv77+IXu58vTpXCgRDeYLsuPqQ3P1Wz7sFJDYa
nG3W7kMWDkcsLT5LQZZ24zkxuz5UPKuv9rdaCt5fcfRg5fehWA3hlpk+KTCw
ieubtSHvr4+xioqkNATvLJ9dThtAfq5bRJjy0nDo1bJDfc0AekHLWXyjIg0/
iVwT+38DSOhb3I/dW6RBYs5pDqNB1M/mc9nqmDT8lnhrd7NtEN3xlP5+67Y0
NPEkN75kG0alW2M/HYqWhh1Lr9fZKw2j6VVrMoQfSsOZffcV6w4Mo5MpE0FJ
adLAeqm+/DN6GG1uqVV8VyQNcab1P56Ij6A/uy4G9o9Lw7nzmrQHknQkwkec
zJ6Thg88UcJf9enoYKvrIT82GZDUsyrJsaajN2ePyS8KyEBIfI5K3CM6up2p
UiuqKgO0KaFnP/lGkabwL5m9jjLgYJ6F3o+MosHowZBHbjJw53D40yMcDJTE
OzM05CUDJc/ZONMkGYh/1fo3d4Jk4Jmy+/xZYwaiT5/Y/+u+DKSEw4avLxjo
eecfn9MVMpA9zhczZspEdidYzZ9rZaDQuvye4CkmEvu1vE3whwzcsA+U77vI
RCHf5Tjf/pGBdavdtF6lMtHJMqfHi9MyYJXZ9LWezkTSWQP4nqoslPylGi/5
sVCL0rRSr5YsrInW+uBznYWi0rgjN+vJgvnx1okH91hoPlHFos1AFhK+h+2b
+4+FWqNPDyvayYKN5AYr9X4WiuG9dDjAWRbaUn7u3/qPhQ6ERb6p8pCF8o/X
mVNLLPT+ek6wd4AsfA4U6IoUJ9CDc0yh93dlYXG/MZuQIYGMx5YC1jyShTD2
a0fzjhCI44xgh80TWahcUvdatiaQ3ymt5yuZsrDzT2baW28CbepDvGZ5shAZ
tjNqfSCBuh2P+WYUyEJm8M8uzWsEOnLCX9+oVBZ+XxDw9I0hEPevG8lPqmTB
Mv5hYEI8gb6YxXKy6mVBOmMs7jyp56kmb+tj22XhYq3P112k/u+vLtcZ+CsL
K/zP8tTfE+jJvpbHW4dkgT74zam2iEC8aMqpc0IWXBnZ/RtqCBS0Z9Oa9/Oy
wCHhUgjfCTS41zbvHrscvHG6uo/3J4Es9t+1OL1GDrLecwYEthOo7GDpvMFa
OeCt59O/1U0g7UOTqdLicnD/eGmIXj+Bkg+rHJiWloO12k6GkcME4j9mw/y+
UQ6qrm33v84g0CWz6Acv1eTgZX/e0voxAg1blOiH0uTA+YFOt/kEgayOT3Tb
bZMDk0ATfto0gSpOUG7rITnYZhQX/HqWQDp2J6hC++WA703RpqZ5AqU63Gka
MZEDZHWNN26RQIJOOKjcXA62Ml9L/+97ULDLuGySjRx4H91qu2qFQKNuyl8D
neQgKISvPI/ENh7WXsc85GC6VN/sf9+fqj2jhNV85UD/Vs9qOon1zhR/4AyU
g94bW/ovkTjD95/9n2A5MM65PJy7TCCRs0qrPoTKQYWmgEQo6e/6+ePZMZFy
gL2tzs0vEIgVGHnM874cvGf9Yhcj47W7+GV6b7wccNooVH+fIVDt5bGnMily
EOrY8U1jikDbrm7cO/NcDqSyvkhojhPoxXWrkcb/5ECk+EF+I4tAYqER97Lf
yoHhxI6MdaMECrlVtOVmoRzoGGbOLw4SaCyM6LAvlQP61raS270E+nbHcpPw
dznQ5lj4caOVQNvvhTfQf8rB9yOHt080ESjr/ufzFZ1yoNGidnh1PYFuximU
XqCT/sqFPkmUEGg83sLd9J8cPHDn2Sb2iUAnn4QJqM/KQcihM7lv8wkk2zhN
JTjkwdpepLkjjUCWpkJsdtzyMBNXm++aQKA7TarN1TzyoJPS0RdD9vN8i93F
Z0LyoEJ/nt18hUC/2sq+WsrKg4jP1XYuCwIJ2HbGlynIg/mMput/Bwlk2Dnl
paUsDy7VkxozOwn0pmuTCA9VHkKnlPkvKRHobt9dhyJ9eSjhj5veRrDQV9cs
muoueXC6w3OFq4eFFgdKV8WBPASqxJy70MRCnsOT2b4H5MHxZ7KdSQG53pk2
M4qW8iCzSoYPn2OhZLHQ5mvW8uD6J1WQ34WFJnfkvOq0lYddkv1qnGYslBq5
4B7nLA/Pinf4jmmS+4vK01YeP3k4/0Ei81s/E/3n/OfTWKQ8GP0UHSwEJuKI
5Io7fFceVGc8xcvUmMg6X+Ns9n15aI493hQoxkRcbFfVXOPJePgnRkYGGcgh
SfbJ7+fy8DSW9W4pjIGEWh2Di0vkoWvRMUXi8yg6tRJmLVUhDy3J2/kkUkdR
EeX15qAqeegxdXGovjmKTgewMWkN8nByyXBsz+FRVCaSZv+8Qx60NfHphHY6
On+4d/edaXm41f6uQGFoBLWWubLbUBXAzvFDO0ftEBrb0y55RUsByCs1eQQM
odWlRzen6ihA/m7x3NO3h5Ae3u4+uE0BfK/MzQ/vGUIPPwvVn92nAFsCChN3
vB9ERwuK4qMcFKDMa0Nd8MMBVPlcTPtLjAK8GvZ2HlHtQ+/CKxzkpxTgkPmo
8bMnHSjLuG592KwC7A3yEzXSJ+8D/E1NzAUFuH0uVy7tVzu6HtO9/zOHImhY
Xb94WqgdmcTPa1oJKYLqkFHypeutqDdTeyVKXRFGXXWKn5r/RIJVT1NmnBTB
cP2JDuJJPTrFFfC3oUERPosxuFptHiGXs5ff8SduhA1V81erbvzGejpd71ST
NsLi3h4ji67fmHcc3u9P3Qh7q5/vztzeil/7c3+4/mIjdLwPVnk63ooX/e5/
nHyzEYjPPWkvHdtxnG/m5866jVDmYHgrVuMPrvFuLv1vaSMU/rnGZmfUg59S
9cpq2JTApHEL0jnXg/0Y8WWDnErg0HVsS9fTHizu7VAuz6sEW/T0Ct4RPdjZ
a6TiobgS3EoT5rN+0IsXT69UBWspwZPvy4RoUx/WcldvMHFSgoAqLscGtUHc
dVrON9dVCfZ54p+ZpoP4jreokKCHEtRxmr7YEzSIR/wXTL/7KAGHpWNSQcUg
Tg+u+2karAT8QdLcd2yGsESs1x+rx0pwMLtvT8bFYVz50PHqh0QlgLLHFqZP
h/H5x+Zy65OVYIJPctvH4mH84+kOp7YMJZiv6x/J5xjBUZl8A7ZvlIC618rX
OGwErxTlME7WK4Hdx682xSF0nIdToksbleD+EeNdnal0bFf2QFOxRQmiMyO1
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
9Q==
       "]]},
     Annotation[#, "Charting`Private`Tag$7006#1"]& ]}, {}},
  AspectRatio->NCache[
    Rational[1, 2], 0.5],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 20}, {-0.999999941761652, 0.9999995837354044}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8096974010126595`*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"a836c794-91d6-4075-9295-700fe91b30d1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Sin", "[", "x", "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", "0", ",", " ", "20"}], "}"}], ",", " ", 
   RowBox[{"AspectRatio", "\[Rule]", 
    RowBox[{"1", "/", "3"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8096974241812973`*^9, 3.8096975348770795`*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"c13eb55e-6e15-4923-95a3-a176bc37d7fe"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwlWnc8le/7N6LMrCibOMIxDqW07itpkIaZzKwIGRWptKislFRCWVHEh1Ja
ktvKjITKimyOc84je/s939fvr+f1fj33fY33dd3j/bweBWdfMzcONja2u5xs
bP97Jl115qa5PtlddeX/nxXN8ibH5S8it/dGsybkc6WyOFRePgI9r722ZUYu
AiWVRMtxySegd4nPRhzlEpD3roAzM3IvEZU48NJZ5iVqXvB4OCb3CXluvn49
ed0ntLqjV4UpV4NqwE+9YLoapdWm+I/KtaFG40Ri/nIrmox/p9Z9pw158LXr
3vjbiva71/U1zbUh3vr3jtiwDTE4ZywLm9sROxIacOBvR9t2HdkeEdaJzI8P
iPHFd6DGV4scKkQ3Sn7r7yKb2oWu1VKNaY596Mx60fnaLb0oK/8DJedRH7rp
HyEc7NyLmuINOJW/9aECQ8Oembu9SMndumi9fj9q8gx6cXioF9Vy3tRkEx1A
w5ydLS7kPPFdHSLfKweRG1/nzvrBfpT3KqLDW5OOjtjLCx6yHUJ0EfodYyc6
ajxSnTB+ZQipBBrv3vSQjlY3rtQ4pA6h1J18aX1zdPTRor4otH8IxdbcOWXz
dRSZxnVHT58eRoF99/4dsGOiVbomw3qnR9Cb/WPPlO8xUQnP1wPs4SOIeHnM
grOMiYq9PypFvRhBHn7CH4pVWCh9jcDGzt4RZLMUG7xlgoU8I+xHPK3pKIWv
LlR43xjqicm6tqA3inbvumx33WEM1T/rmk40HUWdPupbiAtjKN/kuPuU1yha
3xQ1+C17DG2OPaXWnjKK7sebGIUL/UPnZ6qk7FYxUKhyg+BKxz/EcVyBh6+E
gRSPXx06M/UPRf2847TzFwOVhGuWdAqOIy2BA3+UGAy0OHrXv3DPOBq7Mukk
KcFEAW+OtgRkjiPape/4/mkmckc/EhhnJ1Dg1BWtW2wsxPZsurAjagINPgDO
T8IsFL9KurM2YwJJ8pQ0piuyUHXNKdmXvyaQIKfpu6S9LLTJYvGZ2/ZJZGSh
YyYbwkIl7xUqLMwnUXjL5adc91nIesOBgb3ek6jgiG3OsxQWCu+6r6KYPIky
rz2JWPrMQsMeKv91sU+hkIdjsTr/WOh6nUl9veQUOlNTf6BiiYXWa55lFelO
ofRbqp94eQl0cKJI+4nbFHrg+tPmnQKB/lr2mkZenULQnWO6QYNAQR9Xn7v4
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
muoueXC6w3OFq4eFFgdKV8WBPASqxJy70MRCnsOT2b4H5MHxZ7KdSQG53pk2
M4qW8iCzSoYPn2OhZLHQ5mvW8uD6J1WQ34WFJnfkvOq0lYddkv1qnGYslBq5
4B7nLA/Pinf4jmmS+4vK01YeP3k4/0Ei81s/E/3n/OfTWKQ8GP0UHSwEJuKI
5Io7fFceVGc8xcvUmMg6X+Ns9n15aI493hQoxkRcbFfVXOPJePgnRkYGGcgh
SfbJ7+fy8DSW9W4pjIGEWh2Di0vkoWvRMUXi8yg6tRJmLVUhDy3J2/kkUkdR
EeX15qAqeegxdXGovjmKTgewMWkN8nByyXBsz+FRVCaSZv+8Qx60NfHphHY6
On+4d/edaXm41f6uQGFoBLWWubLbUBXAzvFDO0ftEBrb0y55RUsByCs1eQQM
odWlRzen6ihA/m7x3NO3h5Ae3u4+uE0BfK/MzQ/vGUIPPwvVn92nAFsCChN3
vB9ERwuK4qMcFKDMa0Nd8MMBVPlcTPtLjAK8GvZ2HlHtQ+/CKxzkpxTgkPmo
8bMnHSjLuG592KwC7A3yEzXSJ+8D/E1NzAUFuH0uVy7tVzu6HtO9/zOHImhY
Xb94WqgdmcTPa1oJKYLqkFHypeutqDdTeyVKXRFGXXWKn5r/RIJVT1NmnBTB
cP2JDuJJPTrFFfC3oUERPosxuFptHiGXs5ff8SduhA1V81erbvzGejpd71ST
NsLi3h4ji67fmHcc3u9P3Qh7q5/vztzeil/7c3+4/mIjdLwPVnk63ooX/e5/
nHyzEYjPPWkvHdtxnG/m5866jVDmYHgrVuMPrvFuLv1vaSMU/rnGZmfUg59S
9cpq2JTApHEL0jnXg/0Y8WWDnErg0HVsS9fTHizu7VAuz6sEW/T0Ct4RPdjZ
a6TiobgS3EoT5rN+0IsXT69UBWspwZPvy4RoUx/WcldvMHFSgoAqLscGtUHc
dVrON9dVCfZ54p+ZpoP4jreokKCHEtRxmr7YEzSIR/wXTL/7KAGHpWNSQcUg
Tg+u+2karAT8QdLcd2yGsESs1x+rx0pwMLtvT8bFYVz50PHqh0QlgLLHFqZP
h/H5x+Zy65OVYIJPctvH4mH84+kOp7YMJZiv6x/J5xjBUZl8A7ZvlIC618rX
OGwErxTlME7WK4Hdx682xSF0nIdToksbleD+EeNdnal0bFf2QFOxRQmiMyO1
8orp+FPVZb++diWg+bEI7zk6Ptd0aNJtWAma37dVm3iN4qGh0QVPTmWo2mA6
fRQYOI7e/bSOWxnWXVlsCz/BwIbM5l1UXmXYEp3b73eWgdPGP19jCilD2aVR
88PpDGy7FMXpJ6sMOxVVBbXZmfi7CJUvQF8ZPD78euSSy8S7z5wZebJTGXZY
R3tJlTBxXlVeVRki7TH/c4hoYuK7wbSbQvvJ8Q21g7enmdhkUG8px0wZYnVM
szl3sHARBHU0WSqD0SOZWPdDLEx98unTnLUyxCyf3HXdloX5ju0MPOCoDE4+
Cuj7JRau/bSH6PVShov/nIu737HwdrHQeh5fZejQzIoaKGfhbJ+KHO2zylB+
k/Iv+QcLR2w84HE1SBnCr+stqTNY+GC0Sc+GW2T+QYp3c2QI/HEoGkO4MizN
XL9jrEpgFYPvSe5RyiDnclDlKakHuWdMbd7dV4bGl05lVsYE/nryePOxZGU4
myqWQzlL4M2f4/MvpClDnv2P9OOXCZyxrv1ecoYytI9on9l+k9SztXYmjGxl
SJG0lFz3iNTXSslqonnKcHjP7hb+JAK7XOtesz1fGdjTRfneZxDYYLPz17AP
ynAoVj1D+i2B39xNT88rVIYfgdm9bZ8IrDjSf+PnF2UQS7prdbCEwOzJ7rs3
ViiDVfaplG3fCOw3myVtXKUMusYFVoU/CPzXjD7vV6sM1CHJNcxfBC5ZfeZD
caMy/DtpQXH7S2Bt57xHA83KkDb+7HJ2P4FTi4hz/L+VIVGZ42nqMIGFJGhm
uu3KwOn25MoBBoGv+Z/VtvlD2qPbSaQQBGbVvRW88VcZNjTPncwcJ7ADZYqR
2acMMlvpZienCNxwXa+uYVAZovS9BmtmCLy748LLqRFluCl5bV3/HIHztnwK
k2YqQ+s+ZnveAoFlYubd9o4pw6KjgY7aEoHv0HcYek6Q9k0bJayWCbxoeEXx
/rQyaB/JC9dZIbB3SjHbxzllOPr3YwgmcefcSlfXojIMj9xftURiE4s9X7jY
KKCdnSowSuLPeSFPqJwUSCkWTo4gMbeJpeRjbgo4BqkeqCTtm46oJLDzUoDD
/1PCc9L/09vzEt4CFPCr50tQWSTw0Mb6uF9CFNg3ccnIZJ7AOqUp6/aIUUAu
2P+16CyBrzicfZgjQYHvyp4tV8j8qxcMRcWlKHAWE0WRJD+iCRKx12VJLJp0
djvJn4MeXWhUgQLeDdIrd0YJ/LK56J6lMgXmnVXPhAyR/eJ3T7BkEwVO0+9U
S/YRGAk6R6tRKWDFoSBr1UXgyJzN/I+0KKCZ2XB5cxuBfx5cHbWiQ4FEvrtj
75oJ7BX6X3iLPgWm+s6cfFZF4Pfy11ajXRSY0K25KlBK9k+x6e2XQIGuhznz
UoUEfjw7HXr1AAU+O26w35hD4N5HNRwjxhQIuGzqK51OYA3dpzfMj1Bg/53T
ep8SCVx+Zs+1TZYUEDxL2d8VTmBBPrHlWGsKSLT2lJ26RuATWYPBS7YUOPXl
pd2DAAITvVGXmpwpoDUmYtt2ksBS1r8Cgv0oEEJ/OySlS+BTU1mTg+fIeggP
vKymEDg/9vI50wsk/x8yoyQlCXygXt6fcpUcr9hjkLfCwucMvLwbo0j7TcS3
hEoWLu7eNbr9HgX4JLf8OPeBhXmuCHk+j6WA8ESz/mQmC6d8eOd+KYEC/gJL
zOEwFq6jsrkoZVKgYs0ascy9LCxe29RzN5sCUvwLbp9oLOzk/vzkXC5Znym3
Z+fkWHgmzdihoYACis87X/+dY+KNEo9OBJVRQOhJw9b0bCa+zK527NsfClwI
lqpdWmDgQUO+VkoPBUxy3d9KDDDwsXCG441+Ml7HnQ5/6xlYae0rX71RCvDk
XF2+mszA36Q330udpYBeI8/X2R0MLLttd8N5URXok926SdpjFIdflrP6Lq4C
3H7irw1MRvF4MVuXqqQKqF7nuCCtPYqr9pUzu+RVQHvZZ4U+Tcd+5gcFjDRV
YCXE9/fidTou8zEzkTFSAcp0OtpFnjfUN7otF0xUINOzIa341AiOmxKzazqq
AkqplPjZfSPYK/i3V5iVCqnfSt885hzBYpF2Uf9cVOBlWEX/ncvD+NTzU7Vf
r6qAS4L7YKbDEObtvHTQp0AFYnOFTnlP9mO9Cy8F7n1QgcNXN2Rda+jHTiKt
Ta8KVSD04tyqk1n9+OPBLfb/SlTAobH4ZoRtPz71jvA/X68CTbnvmBG4D5fe
dX1yaVAF2E4rXnx4tRcH7TnCur1+E5xoqGcKfejGAy8UHqYEbwLPdTMwdbQF
P9y0YdUnS1Uw33w56UHzJ2TnQMnss1YFdxHhojenPiOlh7rGgnaqEASRatFz
Rahg5XCMi7MqnHfSX6+ztgS1/AqRFvRVBWbY48PiOuVI9BZjs0u4Kkj6Kf2w
9alBsT3YTeCzKvy6Y5uU1NaEbCTq12wrVoUHRr4RttubkeLh9hznUlXw0Hcy
GElsRm8+Tv77UKUKMnx65n62LajpnupV5xZVOCt3IU6k/ScS3v0g7gNTFX6Y
pN/+9a0VxSSeqnKSVwOj3sPu/250oQuBIeeCN6rB4c5KNrm2LuRgliz3mKIG
5stqxhza3YjK++vCN6oagLVa1mBnN6q5uG/TVn010BlMZYQl/EUcJ5Qi+M3U
oNRvq+P64R4UINFr/CGUxMHtqTKu/chuYmn6x201iFezX20S2Y8Mv29IZ0So
gcfe/PGDr/uRSJjpgkKMGtA7ttH/W+hHedMlOXeeqsHKFCVINGYADf9M4Xd+
pwZrizddF3g1iGwe2jfwD6mB1K1ZNZfyYST9llfKi64Girm+Z5wHhlH3jw/u
NUzS/zoFEanVI8h1rQj77Uk1MG5zWfXBaAT5RFbqrrCrw3H9NQfv1Y2gkOta
Cf+k1eFi6ds6/1I6MkzpHDgqrw7jx79KdXbR0eriCJ28jeqQK3xs8/wCHd1Z
6KvzVFOHv56HA45tGUVxgfHLfVvVQYm64mKXMYpeerO7/jJTB81tkbS8cwzk
HZX3erMV+T4uRFf7DgNpZtsuxZ5Qh/9uae10ymCgN0Pv4o6eVIcNOWLHvjcz
UJGzZ031GXUYNE3Sb9Fkoqs3JMRV/NVh5EW4YpUhE+1JrXC+dZ6M/9RDbncb
Jqr8I7u457I6mOxKrfvvJhM1Wjdrfg5XB0Vh+wajn0wUe+H65Q131OH1hbeC
ycNMZBmnUX3hnjrccvS/mLTARO3NYU6b49TB/GnEzFN5Fuo/svNhbro6pFu3
M+JPsdCLMyN/+TLVoSkvshEusNDpO3EantmkPzNB49gwFmLVjFVS8tXhhOPJ
/bRMFpo1fD6XUqwO1u5FMTa9LBT8OSW0olQdAnwP8DmQ+o9NJ1FgpEId4nuD
Nq5bZKHVcvcUdOrUoerA9KskMQKJzwUZVfxWh9+rfsyKGRAo0fdc83C7OkQT
XZJvTAgkM3jGXqCLHH9OYZL9OIGUmp39rfrVYfiwmvsnTwLp5pokDI+pg36J
z7ubdwn0fuOBjQKT6uATJTheEEfq68Q9ubQZdbAo36j1OJlABmF6pZeW1IGS
c9/eP5dAlUvah1LYqCC7brfa6QICGZ1X/1nOSQXXwtV5Ip8JdMxJfoSflwpG
+4cSLlURqOW35DmaABUswbZvG6nPrY+sW7IUooLGcNaLLFK/d1asDbskSgW1
QpdfNb8J5LiDVzhFnArpW3vcnnYSqDd/1ZPyDVSgcesbyfcQ6NSmFaVhaSpI
C+wLsBwgED15Lo9fngq/Y9K6d4wQyGfd5DbaRirkm+RebWaQ+j+KVWZJoUJC
ZISR9BiBAjhGTC6pUoFTX3Kb+ASBZoP6fiVTqTCxzLW3dIpAwcSfk+VaVJA7
8t5FZpZAbKda6UM6VNA5d/yh2jyBbnY2nefXI3FG6/fhBQKtMa9f1tanArsA
Q9h6iUBRNVXhljupsNzGfTxomUCCUCZyCVHhKzg9NVohUOz7oqfJBlTgCZvu
riOxuMYHSvk+KjxafUt+hcSJ6fmvhw5SwWnLXfs+EstK/red34QK359aPQ4i
cVrMiwrto6T93oGGYtK+0uq0I5ZmVDAo5+Z+T/rPuvKk9aIlFd7zHkAOiwSi
Tj5yTramAuv+zJUPZPyvPWMYZbZUqNhMrSwl89vcExk45ECFw9Wfpa9ME+jD
8Vts/M5U6BWEsBGSn+0N1yK13ch6Zq/jX/2PQMWGl8QsPaiwit/uzU8m2R+f
zydf9KLCZ5epG5Z0sj9ovpuSfahQHnU79PYggYyzTr8p8yfznwgs8eglUL2s
686h81QIjxgzWPxD9gffiWPal6lwo3nccGsL2R8h5u0WV0k+WImdXQ1kf8we
dr14gwpxNbz0rTUE6hswCCoLo8K5jF/Jy0Wk/5SGZ2pRVPC1SvTqeEegVGub
+ti7VHixJnKzXR6BHOr8FV0eUWHOdlHEmOznLzeXTOriyfzWKRz/8IhA0rsj
Lug+pcL+S+8mq+8QqP116jfOdCo8qP2b0XaRQPqe1BmvF1SwO3ya1epLoPiN
HxVaXlLh3xrDlWA3AlnFfQ/MeE2F1KNbxt4eJVDT5WX5fcVU8FfPSfgrRyDa
lshDuaVUSCtWTeMRJVAMa13guq9kfZKMrrRyEeiIk0bdQB05PzPmsAedhWr3
2wXcbiPXl//uYotXLKTKNpzC6iT56Exufv2//xM/nau1+kuFZ1qW/AX3WGg/
NUpOZYgKq89YPnvtw0JlwoU1VZNUqD5R/yZsEwsp1O2b1JqlwvDkpIaiOAtd
v/lDNn6BCtMdCbZunCy0e2b4nAeHBvTGtZDnFxMVdkrI8ghpwFjAjR0dUUz0
JjPgrLG6BiwpPpgraWMgYSf2pDeaGvCo0mgXRxkD+UlGV0nqaADflJ/g2Ety
/47OkB7dpgFgcMq/KYiBss82V0bt1wBNrb/rC0UY6NkumlS9kwasZewct9o6
isqO8IYuuGqA4epXUz7So6jXsY+u6qEBdGEeJwP2UbQx5FHhbR8NyE1RDpWu
paOMyrkTcFkDAgKuZTy3pqPnR8vi3z7UANe2PVyHTo+gLCdz8cQqDeDeY3Oe
3XYIVZ+lXq2u1YCBi1dt1m8bQsOhXIPT9RogZOl6Y1JsCG168eGdeYsGbG7K
nlqqH0Qv6VKWAj0asLeuyNJx1yDKPtf/4Pq8BkxV7/r0n/AAyr0VIOyuoQmN
gU73xR70IsZO+5Bb2prAGRXqYevZS643w4l0XU2omvoZGLCnF2U7i/38q68J
JkNHqpSIHpSF3sbb7NeE3qLvOpcP9qCMuTG5I46acFtFpbJksBslnvHW3HJf
EyIP+p5qPtGOwixdDnFOacKF2BtzY1L1aEtn2suwei0Y9bO/N/SkGgtpesy+
atSC1Sc8NSWcazDjmuaB1mYt2OX2M2L1plqcsfFz/6Z2LYivWFuq+LYOi3m1
yNUOagF9Pt9VoLIBzwdzHuJm0wYt4nBhqE8TbuPTKz24QRv+O7U0SHVqxZWb
E4Y7JbXh1S5+rkvFrbjAfnGtv7Q2aJ43uBAh1YZjXpU5JMhpQ0vt0sfRljZ8
0Pzo4oiyNjz6pH8pw7ADf0z02Bqlow0yH/Ot5CS6cLzqk9z6Q9rQo/tCUbi0
B09O7H8eelgbHKpOy4ayevDR4vGn+ke1QcnDOblEqhdzmxvfeW6mDYTa8Ian
Ab04IHjO88oJbUh02Z1dSenDZt+Pb9Jw14azD7wSLl7tx3kJnPJ9HtqgWsym
7E7eb3lcX0kkeGpD/E/V7eub+nHJLPdqLh9t+JX8fUO50gDWUnw/0HleGwoE
em9oVg1g/gCx9Dsh2lB1kIs5uTKIPVBJosFNbZg5kerTpzyEy3m8Y2dvaYOg
77zW3UND+FJy+Q3XCG2Qon74JB43hEeqzp7cGUPy86mRb1hlGFdK/pBhJGmD
Bcd2B63dI/haSXT8oU/asGju/zNBZxTT/5Q8nCvUhhvDXGZfj4xiq4WJmMwi
bSiuS6lI9xzFVD2bCM4SbTA9C2ZBaaO4NYdy6XMlGb9MTs4FPgbWeYxt1Vu0
gWJtLXKvkYGTCsaPt/3Uhot6P2cqhxh4TZOyRdhvbdh196Jp7jIDd/PfMelr
1wYzw3eON9WZ+E6I9a4nPdrQzeAQsrzBxINn/snyEdrw/EDnsokMC5tGKUl9
GtMGv4fLHUe1WLgo67iE+7g2RAYY3F8CFn7Q92Vt+ZQ2bOZO+2LtwsJwIpLt
8qI2BH5L61+TwcI5gV8WNy1rw/KQ2l77t6S+ezg2+2tFGz5mHOKyLWNhZoPV
Px1OGjiZyfCbdbNwouHGXjoPDQ6qq5aoriMwl7NVVzwfDXpPjzZWKBDY71pE
+34BGqx/Wy+wRpPUo4VE0zMhGry9HxFyex+B3/xW/H5MhAZfr0kFlR4jsOyU
Zd2yKA3+9O9el2FL6nmtonIbCRoo9Np/c/QjsONhAq/ZQCPPk46cbZcIXOup
WPRekgarfxNfPoYSOPV5eIGILA2UL6atzXtEYL7yz69L5GhgsvmR9MZkAgf+
Zf3no0CDjlvfpne/IPBhKcvntUo0kMq//tHzHYHj+zVLbCk0uDS38puziMD9
uWs6GCo0aPncuPZoGYGDoUhorToN3MKtoxbqCVzNE6eeSiXzU3R/Y9dMYLFm
3/00TRqIPwn86NtK4P/cNgab02jgrn5TO6eHwLOaS3H9OjQIVm+Nah4gsOHs
r/yAzTRYJdYWnztC4JjS19+49Uj+dogc0WcSuCMycujxVhosmHx/FjhGYIqF
K4eqPg1ST0jfc5sg8FmZ3TKF22nAN/aVj3uawMWDEtsO7aSBAPWEiPUsgXlf
/zPr3EWD/sqNSbbzBLa6WHfmDKKBvvLmTKFFAj8zeB6+DDQwcDlBvbBEYBbf
tfR7BqQ9x42q95YJrP/TuljekJxf0ptovULgm8k6bfn7aLDC/vJaM4kb3fkn
DQ7QQM3/4K///f8jTRsUbDlIgzdbLJL/9/+PxzxWdTOmgf8x+VZvEheUJxhO
HyLnJ5bezCXts0Wfcww7TAOerwIvUkj/JlaHL60/SoPmo0927yXji5dTefTy
GFmvsFLTeDL+/mG219vNaJAZHN+XTOan/aa9ts6cBu+nZ2etyPyDLxcM2FnS
4IlX8OMSkp8qw7tsLCsa7B0L/tpB8ici6CF1zZoGpqrrIrNIfh1+79ETsiHn
68szKXQCZ6dKmabZ0uDMK/0Zq0ECT5+e8tKxJ/vH50v+tl4CG+h+v13uQNY3
oYry7Q+B7y5mpVmcpEF60GYn4TayPvfsfge60IA3zt0yv4Gsj7Xe+Go3sp/V
XmziryHroyAkkHCKBt19WyfXlxPYsqDc4PNpGmhfuPHq4Huyf68k2Zt40eCC
UF6x1ysCM/ZfCPrjTdZ7WZxrTxbJf5ta3oovDQZYRVc5Ekj+n62qifGnwWXD
U79ZMST/3l19CudI/9uV3kSHE/jt8v0NhoFkv93vh75AAvdunLsZHkyDSAN1
nbGjBNZkNqVsuEqD249mV50j1+Ol9/8VZl8j19t/m0Rfbif5Mjo59i2EBifi
HEy0lAi8x6fKVjiCBqHSi/syJ1h4vnVkf0UkDXZp3nuZO8DCBXv5dS7cocFH
s+/dNr9ZmLLBdM2fe6T/1gLP7E8szF/RXpAVR4OQ67hY8RILV2oupdjG02Cn
o3WA62kWvpYgFyWYSOZbZeV2xJqFx31cnc4n0cD+YfkHqS0s3LqBJQAZNCj9
aFiTRmfi2JtCc+PPaTBbtDKo9puJDxE6/c8zaZA4rdZvX87ExRUXCvlyaPAP
uziXJTJxhi+7++98cv84enY0ah8T+30VK/HBNJg727LTOoqB1bS35iiU0mBj
juyWp2cZuC/xRFxLGQ3MT00L3z3BwFZ+yd7bK2mQ1XzlSTCFgXdKbdrAXU/y
b/dWKLpoFK/x33E2qZ0GCQHUR7iNjlOknZW+TdFAse+MbGH7MN6uq67pPEOD
qhhmx7PCYdxiNLl1dpYG2CvX5XDiMF5z4fYhpUUaxOUMSoxYD2O/H9lngzl0
oNB0TNaweQjD7YkS6lodeHz09mxT0SDuJW7aR2/SgZlDD8Mq3PqxUnlm3BFb
HQg72/7i3MEu3ECdzei004HOuzzT6WN/cFDcwbeeDjowGbG9Nyr+D647PfL9
tpMO3FveM3hrqBOfFVLnwe46EN/+n8j2kA6M7fMua53XgcSSusqTOa3YZrbg
pFC0Doh46nG9a2rCMRplak3FOtCdwKWwnFSIT02s+lGjpgtdmzZJHV5sRg7Z
hg12VF0olvpaOGLbgqycbtYRGrpQuE9xyPxzC9r/nbNyHU0XXgy3bY6++BNR
cjg+O23VhapRPHRx4hcacGZ7PrdXF8yJq+G+nW3ItWkhSNVeF4riRsMjgruR
XcSOwCIHXeheffnW+pZuZAGXzx09qQsfO8+Y/rfuLzLMmz8T4KILD4+x+Z33
/ouUIuecS0/rQmRD+Mz69T2ob8+MyYlAXZi45frKyr0XOeePy0fc04W0o5Vq
v3v7kXeI+aLxfV1AHbqqpgIDKMC84Df/A11yv29Qjtw6gMKnAu7GxOlCTV69
0NaoAZSnP7fwOEkX7FfOJvloDaK50pVfL3J0wbF1V+Gg5xDieHDyjUeuLiT+
MN277v4Q4nctjVZ7pQu1kMO98H4IyXKHGua90YW27TMedPZhZGjM/ebdJ13Y
y6a32uThMIpp4o+uqCL5Mj2x9DF7hNSfZzxu1+iCptO2g5RvIyj9fMPeg3Uk
NpsY2cscQe/FY+brGnTBu4aecFeTjjptRD2af+rCP97CT1a5dKTSt2Fvb58u
mJYeT7d/Moq0Cy7JZgzoAqtdOfbZh1G0/VbHnNuQLhyt3Ui/3zyKTFSSXo/Q
yXiVc6/48DLQWS952X//yHgeq3OJn2eg4J035t5MkPVpv7TmeTQD3RLobTk/
pQtD+xX+drxgoPhX6VGzs7pw3F/sF2ol9cX1Ve6F87pgHPnH1nuMgXJM3QyC
F3XhmfXsTbSGiQoUK2V2L+vCgnjz6k9yTFQ8QZlbWdGF7JaxJ616TPR/H4pn
9Q==
       "]]},
     Annotation[#, "Charting`Private`Tag$8810#1"]& ]}, {}},
  AspectRatio->NCache[
    Rational[1, 3], 0.3333333333333333],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 20}, {-0.999999941761652, 0.9999995837354044}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.809697471197768*^9, 3.8096975012803392`*^9}, 
   3.809697536088053*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"8b22194b-2d31-4e37-862d-c75ed4a5bc46"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
If you don\[CloseCurlyQuote]t understand a command, use Help -> Find Selected \
Function (F1) or Help -> Wolfram Documentation to learn more about the input \
parameters. Go look up Plot. Here are some Examples for the Plot Function \
Documentation.\
\>", "Subtitle",
 CellChangeTimes->{{3.8096975746069913`*^9, 3.809697668363823*^9}, {
  3.8096977328366976`*^9, 3.809697778867896*^9}, {3.8096983835714235`*^9, 
  3.809698426771329*^9}},ExpressionUUID->"a5c12f73-3a56-4940-8abf-\
c6a94da24a9b"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8096978472942977`*^9, 
  3.809697967580245*^9}},ExpressionUUID->"68629c38-4d52-4e9d-a025-\
8cd2d11963b8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Sin", "[", "x", "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", "0", ",", " ", 
     RowBox[{"6", "Pi"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8096984351733265`*^9, 3.809698458075285*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"b4feed8b-7da9-4564-84ef-a85f550a67d2"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
I1I=
       "]]},
     Annotation[#, "Charting`Private`Tag$11731#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{0, 6 Pi}, {-0.9999990687548602, 0.9999987329187721}}, {{
     0, 18.84955592153876}, {-0.9999990687548602, 0.9999987329187721}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8096984611610737`*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"3e652780-061a-4d44-92ea-9c6e7d52693c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Sin", "[", "x", "]"}], ",", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", "x"}], "]"}], ",", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"3", "x"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", " ", "0", ",", " ", 
      RowBox[{"2", "Pi"}]}], "}"}], ",", " ", 
    RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], "]"}], 
  "  "}]], "Input",
 CellChangeTimes->{{3.8096984655572677`*^9, 3.8096984815142317`*^9}, {
  3.809698520939161*^9, 3.8096985959570074`*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"73b9bb24-fe81-481d-bf00-45ddb5ddad9c"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
YuPAzg9yJTQDzbZ0My8/zcZaziVbtPkM5FQ0zejZLTb2vfwgeZ4ME2XYRZpI
vmVjxSQrp/HlTLRPOkQjbT0Hb/FvXD97FRO9OtUwM0Sfg0877BHfoMVEhkuD
a04bcHDpUqM497VMpNeXlCOzj4Ptc9bX9W1mojf12pweZw7OqlBc02zKRBrq
ybdUH3Gw8Z9GQYELE3UtMM0xEOfiyytCL2W7MpFRadTwS2kuzj1vPJHuxkSX
w9W7VszkYtXJUpE4TyZ63174YVSZi7mzUqX8/ZhoMkwnSFuTi6OMvRTNQpmo
YZX0f0ZWXPwrc4529zMmqk2UZ/95zMWKQ99y27OZaM1zw0DXdC7etSFcpzmH
iVIvfM0c/o+L895KbqgpYKKsP9E3Ogu4OOAnd0vuKyZawTCxcXxPPmXly039
aplIkFddKdfLxV5uJ07P4jDR/mR728zFNA404Z7aRDPR1urV0yKW0/jewoun
bAaZ6BRb7PU5TRoXfgs8mTrKRMH9RqcZ62k8vOk/h/WTTNTpPurcbUBjF/Fh
O0t5CoU4mlp32dH48o9Ldj5MCi0em5W/2YHGIQUSdgksChn+PTYz+BSNM0/N
su1WohDFy3k33YXGPR83HvVUpxDH5PDKxz40Ph519VCMNoUYciCpEUFjt7My
h0rWUqj3nqJKTxSN/Q0jDrato9CBiUsaqfdonMR/bLV4E4Ui877JScXTuM36
/YHCbRRaEOK4wTqNxpx1ew+0GFAo0X9fa8tTGo/PbLaYNKTQ5ksfnff+R2PV
8r79hiYUOvct4aB6Do0PLpq579t+Cmm6F6L9JTQ+PRljLjxAoeAQvkFQKY0v
Ns0zn3uQQsskz68pLKNxTJD23pPWFFrxPOjdSAWNGzkWZjwHCjnKhFRIfKSx
WeHDXbM8KbRJdfj2uWZyvWH7KUUvCm2Te7iX30Lj66uX5yv6UEhvtFXd+weN
izOK1RT9KORmmtFh307j+YlfB1gBFFqU4v77WxeN9X7EpbACiV7i9fx53TS2
UnE4zAqmkN22ceVjf4nekUNvqFAKvXxw0+1jL415t+TvMWMoxMIsf8SlMaPy
mwnzPtm/+UHTTprGK8QSRJixxI/aJ2tNBmhs57vSiZFAoScqeybXDdHY58Xw
XEYShTwM3Z3nDdM4mlfSKJ9M2GnpL5ERGn9w3akvn0qhBIeTTZmjNO56xhia
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
          "]]}, Annotation[#, "Charting`Private`Tag$12418#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
z5IwnNJkX/KQoAXp+SkJXyXhS3JLndYTgiZ2nCDsCkkQ/9t13DWOoHLvwgtu
9ZJQGbu59FYSQenM0++ymiQh+/6CgCPpBEVmMCZG2yShmza5nfGWul+Pi593
nyTkj5d+kSogyMxXvhhzJcF08vyl/Z8IWidfKiw0KAmBYd/lvD9TfM2Vbt/6
Kwn3G3/K2lZQ9WV/jYicT4dW15eBh5oJCth18XejBB2i5g/pXW8jyKVPVXGh
DB0++pblB3QS9J/S5dgXinSw6A5ZuLCPILWcJV0sFTroyS8bz+IQJLLn51Kt
JXRI/3A/fOkAped19aSMFXQovDwk9GSQoALlmoE/q+kwb8nvuthhgl7m+qze
uJ4OAgdc7a+NEHTHYrnH1U10WODw8In+GOVPf93bAn06vM7Yd69unKADAdfG
BbbSwYbWtOb/30NBZeV/RsZ0mN12PeDRBEEa7397B+2kw8v4n4HFk5T/ljfw
t110UL7tuuHrFEGjXG2apCUdQl+tD0+eJqjlZpPRXhs6/O5VjTo1Q1DJosCg
iIN0CLl8yFRolqCkD2u//T5MB/la3YTLFA7b1yqudJQO9mlab75S+DIveM/h
E3RwFmmzHqOwQ9D68Odn6ICXLkyeobCJWkddjxsd8u+2JXZReFX+HTnNC3Tw
pBvuiaewrPXGg2cu0yHrU+gzAwpP8rti0rzpEDSt/+gtxacrOKR96Boduo50
6c2j8NfF/y3WvUmHimrjIF2Kf8bH3mOXb9Eh+rz1NUTV98gm7HX+PTp8T9dU
X0bV7zuo3z8TRofm1QJXWZRezrfZKw0jqetbjH1u/CXIfGmE281oOjxqvbt2
itJbpxBllT+j/H0Y9thilCDF/dwRsRd02Ppc7+21PwQJDkdu3POaDjn1DwLv
DhHEvmN4NTyZDq+gQfoCISgXR83Kv6WDZHOFXX0/la8DxoZ27+mwh1mgtpdN
5evPYEDsRzqkPJRJet1LkKXGDlH1z3Sw018rzW4nSO/TH/NTX+ng+tp/rLqF
INVDsfdTKuiQXW+S8qiRIBIyJqtTT4dDa2mPc2sIGhhUKV7VRIfgbVFqe34S
1G+53U2zjQ4O+2zXlH8nqIf5+OtCFh24bfbcQ6UENT3T8xUZo8Oq2n8gSvVP
g4DTCqEJOuyv2mf3muqvX063G6anKb43NJWXJRN08sHZqH80KWCs/O9J8XOC
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
mpU5Se547eY3ZpNqCjC15t7//79b+D/2BUg7
          "]]}, Annotation[#, "Charting`Private`Tag$12418#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
iSk7tq9yt6Miy1WZVXpkfPn+8tm3DlRU6Cz0nI/cXzfc6m/3eSpa7p8KvEfm
a76LlSl1kYpe/Nr0OJOs58qwb8jhy1R0r9n028MZAodEiV4IcKeixwZvJaWn
CPxmT5LBl+sk32n28WbjBC5haa+ZuknGX7Ky2ksQuDPmB5uqHxX9cTU07xz5
//sdizZ7fyqKuBzzVG2QwJITQx+jg0g9Ax9t2NhLYK14r6jqECraqL9RvKmD
wCZG1Ks8j6mobZ3OmW0tBHaaeW666wkVcXoZKOrXE9g/aZOq+zMqSjTMtOb6
Q+AXpt9538VT0Q/VCEX3XwRufNX3TSqVinKb5G47/v/90THP54ffUdG5+D6d
wXwCC7PxeQVkUNF2FZtc6SwC61uoak/lU9EtPSWD8CQCf+C9+rK6jIqG+o5X
VPoRuN/7NvNLJRXtzioLcLtB5j/2SDvtDxWxFY611V8msHfTu+/3m6jIJ+tP
SpUtqfeb/vY9Q1Qk5+ldF6xDYA/ZqbWaTCpS+b0mnKZO4NRwzotyY1SkMe0R
elyJwAJe8gsLs1SEHHnTqFSyv41OMT7wCqEdZ4MY5m0sTPl63iZJUAipVSoF
fqtm4a3anilhIkJIvHw9ZaiIhWNWRWhdkhRCmXlvQ1xes/BpZqWp8nohtK+o
VNbmMnk/CdkdGG0ghH77SIS0TjKxIufh3wFGQkjuYCr3ul4mPu5pQ/cwFUI7
n+Jg9Vomzrf1Sj5qLoREjvqcuJnBxL6bPnwVOCeEzjjyUejnmVioZv3cTX8h
JPhl15TZr1GM9Lch5yAhxNMQjpNyR/GVgv0Bp0KE0K6PgeuyXozi+kR7iW1R
QmjcdeCWuOcojrsaq/kvRQgNHfvlNyk7ilUlRJzsS4SQWCLF2PjMCBZ7X/gu
pUwI6WfcyMoxHMHzhueIwUohxPZL/HSD2ggu9f7i5lJPxr+4+Np4Zhg79Dr7
eg8IIQO7bU+X/YdxXHZZRBSfMEqYanmEo4ew0NE7uPyQMFoKmKfWhwzgqRF1
DqGjwui2jtltKecB3Hqved8RM2F099WKtMKBAfzmo2Z5g40watm1V9mHYwDr
K3TW9boIox1Zf0KuX+nHPv90h5fDhJHcTv/mHwZ9mAiZFteqF0YZUpdi7Mu7
8eg/2e9qzcJo8m0Z7VVSNx4+auCyvl0YXXI25v/u3Y176U/LVvcLox91IX+8
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
dfSX/wGND4rg
          "]]}, Annotation[#, "Charting`Private`Tag$12418#3"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{0, 2 Pi}, {-0.9999998592131705, 0.9999998782112116}}, {{
        0, 6.283185307179586}, {-0.9999998592131705, 0.9999998782112116}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"sin", "(", 
         TagBox["x", HoldForm], ")"}], 
       RowBox[{"sin", "(", 
         RowBox[{"2", " ", 
           TagBox["x", HoldForm]}], ")"}], 
       RowBox[{"sin", "(", 
         RowBox[{"3", " ", 
           TagBox["x", HoldForm]}], ")"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.809698563627125*^9, 3.8096985984865713`*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"121f1ea1-a309-43af-a60a-92ee4050b007"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Sin", "[", "x", "]"}], ",", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", "x"}], "]"}], ",", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"3", "x"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", " ", "0", ",", " ", 
      RowBox[{"2", "Pi"}]}], "}"}], ",", " ", 
    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}], "  "}]], "Input",
 CellChangeTimes->{{3.809698613626979*^9, 3.8096986191479645`*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"d7008861-b2bd-4088-a617-445eb9c68d47"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
YuPAzg9yJTQDzbZ0My8/zcZaziVbtPkM5FQ0zejZLTb2vfwgeZ4ME2XYRZpI
vmVjxSQrp/HlTLRPOkQjbT0Hb/FvXD97FRO9OtUwM0Sfg0877BHfoMVEhkuD
a04bcHDpUqM497VMpNeXlCOzj4Ptc9bX9W1mojf12pweZw7OqlBc02zKRBrq
ybdUH3Gw8Z9GQYELE3UtMM0xEOfiyytCL2W7MpFRadTwS2kuzj1vPJHuxkSX
w9W7VszkYtXJUpE4TyZ63174YVSZi7mzUqX8/ZhoMkwnSFuTi6OMvRTNQpmo
YZX0f0ZWXPwrc4529zMmqk2UZ/95zMWKQ99y27OZaM1zw0DXdC7etSFcpzmH
iVIvfM0c/o+L895KbqgpYKKsP9E3Ogu4OOAnd0vuKyZawTCxcXxPPmXly039
aplIkFddKdfLxV5uJ07P4jDR/mR728zFNA404Z7aRDPR1urV0yKW0/jewoun
bAaZ6BRb7PU5TRoXfgs8mTrKRMH9RqcZ62k8vOk/h/WTTNTpPurcbUBjF/Fh
O0t5CoU4mlp32dH48o9Ldj5MCi0em5W/2YHGIQUSdgksChn+PTYz+BSNM0/N
su1WohDFy3k33YXGPR83HvVUpxDH5PDKxz40Ph519VCMNoUYciCpEUFjt7My
h0rWUqj3nqJKTxSN/Q0jDrato9CBiUsaqfdonMR/bLV4E4Ui877JScXTuM36
/YHCbRRaEOK4wTqNxpx1ew+0GFAo0X9fa8tTGo/PbLaYNKTQ5ksfnff+R2PV
8r79hiYUOvct4aB6Do0PLpq579t+Cmm6F6L9JTQ+PRljLjxAoeAQvkFQKY0v
Ns0zn3uQQsskz68pLKNxTJD23pPWFFrxPOjdSAWNGzkWZjwHCjnKhFRIfKSx
WeHDXbM8KbRJdfj2uWZyvWH7KUUvCm2Te7iX30Lj66uX5yv6UEhvtFXd+weN
izOK1RT9KORmmtFh307j+YlfB1gBFFqU4v77WxeN9X7EpbACiV7i9fx53TS2
UnE4zAqmkN22ceVjf4nekUNvqFAKvXxw0+1jL415t+TvMWMoxMIsf8SlMaPy
mwnzPtm/+UHTTprGK8QSRJixxI/aJ2tNBmhs57vSiZFAoScqeybXDdHY58Xw
XEYShTwM3Z3nDdM4mlfSKJ9M2GnpL5ERGn9w3akvn0qhBIeTTZmjNO56xhia
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
          "]]}, Annotation[#, "Charting`Private`Tag$12899#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
z5IwnNJkX/KQoAXp+SkJXyXhS3JLndYTgiZ2nCDsCkkQ/9t13DWOoHLvwgtu
9ZJQGbu59FYSQenM0++ymiQh+/6CgCPpBEVmMCZG2yShmza5nfGWul+Pi593
nyTkj5d+kSogyMxXvhhzJcF08vyl/Z8IWidfKiw0KAmBYd/lvD9TfM2Vbt/6
Kwn3G3/K2lZQ9WV/jYicT4dW15eBh5oJCth18XejBB2i5g/pXW8jyKVPVXGh
DB0++pblB3QS9J/S5dgXinSw6A5ZuLCPILWcJV0sFTroyS8bz+IQJLLn51Kt
JXRI/3A/fOkAped19aSMFXQovDwk9GSQoALlmoE/q+kwb8nvuthhgl7m+qze
uJ4OAgdc7a+NEHTHYrnH1U10WODw8In+GOVPf93bAn06vM7Yd69unKADAdfG
BbbSwYbWtOb/30NBZeV/RsZ0mN12PeDRBEEa7397B+2kw8v4n4HFk5T/ljfw
t110UL7tuuHrFEGjXG2apCUdQl+tD0+eJqjlZpPRXhs6/O5VjTo1Q1DJosCg
iIN0CLl8yFRolqCkD2u//T5MB/la3YTLFA7b1yqudJQO9mlab75S+DIveM/h
E3RwFmmzHqOwQ9D68Odn6ICXLkyeobCJWkddjxsd8u+2JXZReFX+HTnNC3Tw
pBvuiaewrPXGg2cu0yHrU+gzAwpP8rti0rzpEDSt/+gtxacrOKR96Boduo50
6c2j8NfF/y3WvUmHimrjIF2Kf8bH3mOXb9Eh+rz1NUTV98gm7HX+PTp8T9dU
X0bV7zuo3z8TRofm1QJXWZRezrfZKw0jqetbjH1u/CXIfGmE281oOjxqvbt2
itJbpxBllT+j/H0Y9thilCDF/dwRsRd02Ppc7+21PwQJDkdu3POaDjn1DwLv
DhHEvmN4NTyZDq+gQfoCISgXR83Kv6WDZHOFXX0/la8DxoZ27+mwh1mgtpdN
5evPYEDsRzqkPJRJet1LkKXGDlH1z3Sw018rzW4nSO/TH/NTX+ng+tp/rLqF
INVDsfdTKuiQXW+S8qiRIBIyJqtTT4dDa2mPc2sIGhhUKV7VRIfgbVFqe34S
1G+53U2zjQ4O+2zXlH8nqIf5+OtCFh24bfbcQ6UENT3T8xUZo8Oq2n8gSvVP
g4DTCqEJOuyv2mf3muqvX063G6anKb43NJWXJRN08sHZqH80KWCs/O9J8XOC
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
mpU5Se547eY3ZpNqCjC15t7//79b+D/2BUg7
          "]]}, Annotation[#, "Charting`Private`Tag$12899#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
iSk7tq9yt6Miy1WZVXpkfPn+8tm3DlRU6Cz0nI/cXzfc6m/3eSpa7p8KvEfm
a76LlSl1kYpe/Nr0OJOs58qwb8jhy1R0r9n028MZAodEiV4IcKeixwZvJaWn
CPxmT5LBl+sk32n28WbjBC5haa+ZuknGX7Ky2ksQuDPmB5uqHxX9cTU07xz5
//sdizZ7fyqKuBzzVG2QwJITQx+jg0g9Ax9t2NhLYK14r6jqECraqL9RvKmD
wCZG1Ks8j6mobZ3OmW0tBHaaeW666wkVcXoZKOrXE9g/aZOq+zMqSjTMtOb6
Q+AXpt9538VT0Q/VCEX3XwRufNX3TSqVinKb5G47/v/90THP54ffUdG5+D6d
wXwCC7PxeQVkUNF2FZtc6SwC61uoak/lU9EtPSWD8CQCf+C9+rK6jIqG+o5X
VPoRuN/7NvNLJRXtzioLcLtB5j/2SDvtDxWxFY611V8msHfTu+/3m6jIJ+tP
SpUtqfeb/vY9Q1Qk5+ldF6xDYA/ZqbWaTCpS+b0mnKZO4NRwzotyY1SkMe0R
elyJwAJe8gsLs1SEHHnTqFSyv41OMT7wCqEdZ4MY5m0sTPl63iZJUAipVSoF
fqtm4a3anilhIkJIvHw9ZaiIhWNWRWhdkhRCmXlvQ1xes/BpZqWp8nohtK+o
VNbmMnk/CdkdGG0ghH77SIS0TjKxIufh3wFGQkjuYCr3ul4mPu5pQ/cwFUI7
n+Jg9Vomzrf1Sj5qLoREjvqcuJnBxL6bPnwVOCeEzjjyUejnmVioZv3cTX8h
JPhl15TZr1GM9Lch5yAhxNMQjpNyR/GVgv0Bp0KE0K6PgeuyXozi+kR7iW1R
QmjcdeCWuOcojrsaq/kvRQgNHfvlNyk7ilUlRJzsS4SQWCLF2PjMCBZ7X/gu
pUwI6WfcyMoxHMHzhueIwUohxPZL/HSD2ggu9f7i5lJPxr+4+Np4Zhg79Dr7
eg8IIQO7bU+X/YdxXHZZRBSfMEqYanmEo4ew0NE7uPyQMFoKmKfWhwzgqRF1
DqGjwui2jtltKecB3Hqved8RM2F099WKtMKBAfzmo2Z5g40watm1V9mHYwDr
K3TW9boIox1Zf0KuX+nHPv90h5fDhJHcTv/mHwZ9mAiZFteqF0YZUpdi7Mu7
8eg/2e9qzcJo8m0Z7VVSNx4+auCyvl0YXXI25v/u3Y176U/LVvcLox91IX+8
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
dfSX/wGND4rg
          "]]}, Annotation[#, "Charting`Private`Tag$12899#3"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{0, 2 Pi}, {-0.9999998592131705, 0.9999998782112116}}, {{
        0, 6.283185307179586}, {-0.9999998592131705, 0.9999998782112116}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       TagBox[
        FrameBox[
         StyleBox["1", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["2", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["3", Smaller, StripOnInput -> False]], "Placeholder"]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8096986201237526`*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"14ec495f-bfa4-4f3f-a11f-5d36b3b30626"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Sin", "[", "x", "]"}], ",", " ", 
     RowBox[{"Cos", "[", "x", "]"}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", "0", ",", " ", 
     RowBox[{"2", "Pi"}]}], "}"}], ",", " ", 
   RowBox[{"PlotLabels", "\[Rule]", "\"\<Expressions\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8096986368069267`*^9, 3.8096986948948154`*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"9b3c0470-9ed3-4ef0-9c12-5a4f0f8e819f"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
YuPAzg9yJTQDzbZ0My8/zcZaziVbtPkM5FQ0zejZLTb2vfwgeZ4ME2XYRZpI
vmVjxSQrp/HlTLRPOkQjbT0Hb/FvXD97FRO9OtUwM0Sfg0877BHfoMVEhkuD
a04bcHDpUqM497VMpNeXlCOzj4Ptc9bX9W1mojf12pweZw7OqlBc02zKRBrq
ybdUH3Gw8Z9GQYELE3UtMM0xEOfiyytCL2W7MpFRadTwS2kuzj1vPJHuxkSX
w9W7VszkYtXJUpE4TyZ63174YVSZi7mzUqX8/ZhoMkwnSFuTi6OMvRTNQpmo
YZX0f0ZWXPwrc4529zMmqk2UZ/95zMWKQ99y27OZaM1zw0DXdC7etSFcpzmH
iVIvfM0c/o+L895KbqgpYKKsP9E3Ogu4OOAnd0vuKyZawTCxcXxPPmXly039
aplIkFddKdfLxV5uJ07P4jDR/mR728zFNA404Z7aRDPR1urV0yKW0/jewoun
bAaZ6BRb7PU5TRoXfgs8mTrKRMH9RqcZ62k8vOk/h/WTTNTpPurcbUBjF/Fh
O0t5CoU4mlp32dH48o9Ldj5MCi0em5W/2YHGIQUSdgksChn+PTYz+BSNM0/N
su1WohDFy3k33YXGPR83HvVUpxDH5PDKxz40Ph519VCMNoUYciCpEUFjt7My
h0rWUqj3nqJKTxSN/Q0jDrato9CBiUsaqfdonMR/bLV4E4Ui877JScXTuM36
/YHCbRRaEOK4wTqNxpx1ew+0GFAo0X9fa8tTGo/PbLaYNKTQ5ksfnff+R2PV
8r79hiYUOvct4aB6Do0PLpq579t+Cmm6F6L9JTQ+PRljLjxAoeAQvkFQKY0v
Ns0zn3uQQsskz68pLKNxTJD23pPWFFrxPOjdSAWNGzkWZjwHCjnKhFRIfKSx
WeHDXbM8KbRJdfj2uWZyvWH7KUUvCm2Te7iX30Lj66uX5yv6UEhvtFXd+weN
izOK1RT9KORmmtFh307j+YlfB1gBFFqU4v77WxeN9X7EpbACiV7i9fx53TS2
UnE4zAqmkN22ceVjf4nekUNvqFAKvXxw0+1jL415t+TvMWMoxMIsf8SlMaPy
mwnzPtm/+UHTTprGK8QSRJixxI/aJ2tNBmhs57vSiZFAoScqeybXDdHY58Xw
XEYShTwM3Z3nDdM4mlfSKJ9M2GnpL5ERGn9w3akvn0qhBIeTTZmjNO56xhia
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
       "]]},
     Annotation[#, "Charting`Private`Tag$13493#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
yJirVKPmZxSgNkv5H+OU3bOLFeH//1/4Pym7d/E=
       "]]},
     Annotation[#, "Charting`Private`Tag$13493#2"]& ]}, {{{}, {
      GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{0, 0}, {6.414085001079161, -1.28228271801381*^-7}], 
           Offset[{0, 0}, {6.414085001079161, -1.28228271801381*^-7}], 
           Offset[{0., 0.}, {6.476916854150957, -1.28228271801381*^-7}], 
           Offset[{0., 0.}, {6.476916854150957, -1.28228271801381*^-7}], 
           Offset[{0., 0.}, {6.539748707222753, -1.28228271801381*^-7}], 
           Offset[{0, 0}, {6.665976055126499, -5.636481286437229*^-6}], 
           Offset[{5., 1.1102230246251565`*^-15}, {
            6.665976055126499, -5.636481286437229*^-6}], 
           Offset[{10., 2.220446049250313*^-15}, {
            6.665976055126499, -5.636481286437229*^-6}], 
           Offset[{10., 2.220446049250313*^-15}, {
            6.665976055126499, -5.636481286437229*^-6}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{0, 0}, {6.414085001079161, -1.28228271801381*^-7}], 
           Offset[{0, 0}, {6.414085001079161, -1.28228271801381*^-7}], 
           Offset[{0., 0.}, {6.476916854150957, -1.28228271801381*^-7}], 
           Offset[{0., 0.}, {6.476916854150957, -1.28228271801381*^-7}], 
           Offset[{0., 0.}, {6.539748707222753, -1.28228271801381*^-7}], 
           Offset[{0, 0}, {6.665976055126499, -5.636481286437229*^-6}], 
           Offset[{5., 1.1102230246251565`*^-15}, {
            6.665976055126499, -5.636481286437229*^-6}], 
           Offset[{10., 2.220446049250313*^-15}, {
            6.665976055126499, -5.636481286437229*^-6}], 
           Offset[{10., 2.220446049250313*^-15}, {
            6.665976055126499, -5.636481286437229*^-6}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{40., 9.500000000000009}, {
            6.665976055126499, -5.636481286437229*^-6}], 
           Offset[{40., -9.499999999999991}, {
            6.665976055126499, -5.636481286437229*^-6}], 
           Offset[{10.000000000000002`, -9.499999999999998}, {
            6.665976055126499, -5.636481286437229*^-6}], 
           Offset[{9.999999999999998, 9.500000000000002}, {
            6.665976055126499, -5.636481286437229*^-6}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox[
           TagBox[
            RowBox[{"sin", "(", 
             TagBox["x",
              HoldForm], ")"}],
            HoldForm],
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{25., 5.551115123125783*^-15}, \
{6.665976055126499, -5.636481286437229*^-6}], 
         ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}], GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{0, 0}, {6.414085001079161, 0.9999999999999918}], 
           Offset[{0, 0}, {6.414085001079161, 0.9999999999999918}], 
           Offset[{0., 0.}, {6.476916854150957, 0.9999999999999918}], 
           Offset[{0., 0.}, {6.476916854150957, 0.9999999999999918}], 
           Offset[{0., 0.}, {6.539748707222753, 0.9999999999999918}], 
           Offset[{0, 0}, {6.665976055126499, 0.9994617617978893}], 
           Offset[{5., 1.1102230246251565`*^-15}, {6.665976055126499, 
            0.9994617617978893}], 
           Offset[{10., 2.220446049250313*^-15}, {6.665976055126499, 
            0.9994617617978893}], 
           Offset[{10., 2.220446049250313*^-15}, {6.665976055126499, 
            0.9994617617978893}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{0, 0}, {6.414085001079161, 0.9999999999999918}], 
           Offset[{0, 0}, {6.414085001079161, 0.9999999999999918}], 
           Offset[{0., 0.}, {6.476916854150957, 0.9999999999999918}], 
           Offset[{0., 0.}, {6.476916854150957, 0.9999999999999918}], 
           Offset[{0., 0.}, {6.539748707222753, 0.9999999999999918}], 
           Offset[{0, 0}, {6.665976055126499, 0.9994617617978893}], 
           Offset[{5., 1.1102230246251565`*^-15}, {6.665976055126499, 
            0.9994617617978893}], 
           Offset[{10., 2.220446049250313*^-15}, {6.665976055126499, 
            0.9994617617978893}], 
           Offset[{10., 2.220446049250313*^-15}, {6.665976055126499, 
            0.9994617617978893}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{42., 9.500000000000009}, {6.665976055126499, 
            0.9994617617978893}], 
           Offset[{42., -9.499999999999991}, {6.665976055126499, 
            0.9994617617978893}], 
           Offset[{10.000000000000002`, -9.499999999999998}, {
            6.665976055126499, 0.9994617617978893}], 
           Offset[{9.999999999999996, 9.500000000000002}, {6.665976055126499, 
            0.9994617617978893}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox[
           TagBox[
            RowBox[{"cos", "(", 
             TagBox["x",
              HoldForm], ")"}],
            HoldForm],
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{26., 5.773159728050814*^-15}, \
{6.665976055126499, 0.9994617617978893}], 
         ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}]}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->{{All, 60.432294294014184`}, {All, All}},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{0, 2 Pi}, {-0.9999998830731719, 0.9999999999999918}}, {{
     0, 6.283185307179586}, {-0.9999998830731719, 0.9999999999999918}}],
  PlotRangeClipping->False,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.08090169943749476]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8096986852147074`*^9, 3.809698697301382*^9}},
 CellLabel->"Out[18]=",ExpressionUUID->"1cc98b17-8e92-485a-8c08-791d87259aff"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Sin", "[", "x", "]"}], ",", " ", 
     RowBox[{"Cos", "[", "x", "]"}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", "0", ",", " ", 
     RowBox[{"2", "Pi"}]}], "}"}], ",", " ", 
   RowBox[{"PlotLabels", "\[Rule]", "\"\<Expressions\>\""}], ",", " ", 
   RowBox[{"Filling", "\[Rule]", "Bottom"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.809698762171687*^9, 3.809698766852656*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"40faae4e-0478-4e78-b785-d41d115f45e5"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1: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
joZZRqMEqDXvzOfqwXp6p2zXNzyfoMyjTemDs2D5+rGG7fj/p91eCpMbKXBn
xoX0RHyeEjief9B5Drx/aky/jfVWP35LFf873M/dr4frYr099N6kSfTsLOBd
1f11FdbbmIOilhyjFCjs1GTDgddXUmbSykxSAq6j/FxTdcsTzSd/vDMaNgtC
qnVlqTifsVkK6Uu/mgNrD3/9ysBjplA7K18xBTrluZ2Jxnrjffei/X3JOZBy
5JMt3l8gsldPn/sH7r+/bj3Az4s0xZ5NFbXNApMX+68m4flVzFGSyXUUeLxB
b60uPl82uqfzuBXunwI/mkXw/zt89pvkoOP337DpQTKe3ynO6RaeSgpMCvmz
WRWPZQtb5C7tmQOLBnX0Rvx5lrYLclz9FFhDD58Kxtfr1mPLeDk3C5qtOPdG
4fOKTOUbpBYKFP9+aH8vPm+zISl8h88c+FGpJV2D97PCffGlKhkJqPHi0q2C
lDNohXflLf/3R4AV3rXXr4LxsZz4x7ukulQu9owz//GuVfdjBAcyGf94l3Tv
XlN9Dvo/3tVbK2ig9n7oH+/KZD/y2Evxzz/eZbmQx1/B1v+Pd6lk7V8z/6jn
H+9yCxu4Lriu4x/vUh+6Y2+6rukf79KfUR8T+lD5j3d5h8/b2jJe/+NdnWaq
UYO2+WiFd1F6ndKvGH5GK7xraFfsQEbvN7TCu2oahltQeBda4V1nTPrG3db3
ohXedU0z8BLZ6zda4V0t/cUeZ/cNohXeNfppXUX7t2G0wrvY5zqZMb/paIV3
RXaLE0sWTLTCu46X1elXY3+5wrs0n69lmcf6uMK7WoKuhZ7H+rjCuw5u3YDG
7Il/vEvLd6vIagfmP94lZm6T9/gL/R/v+shrwPegaPgf7xLY/MV0n/XgP96l
mnJ9q5D973+8ay6Iwn73SO8/3nXyocfhGnrXP971tCKqDam0/uNdyfWvGkoP
1//jXXCuuDX4S8E/3lW7PcOW1+8FWOFdAtSTV0s2fwArvOvxXnVTcu9XsMK7
npfkinueagcrvOvTcsj9TO8esMK73hyz/2o21QdWeJfUu/je/J4BsMK75D9Y
2L1JHAIrvItD89WQQcsIWOFd2A1F9DxkgBXeFRy2W19piAlWeBfJVvn8qiwC
rPCulXpY4V15jx8Rl7Be/WRdk//HpBrISP2p1MV5oDW2LnfepQWYvaPzPDjD
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
jKv7ySzg663whpX6X/m+dWX8/3f+/wHbWHSX
    "], {{{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwl1XWYFWUUB+BLt4SAiCi7hJQCkrJISSO5IqnEAkpJl1JLuHSHdCiICIgI
KiWYmIhK2KJggt0F8p6HP97n/M6Znbkz3/1mb3La0NQhmROJRCZ2Zbpc62RJ
JFKoJu80aMF6fo5j6kK2yp9RXp7MCHkV73C1fhit5DRm8zy5zHpxk1yVKlTm
Rm6gEi3pzSyeI6e/70lFuQW9mMlhcpj3oII8nJW8TTGzoTSXezKDQ2Q3u4vy
8jBWcIyrzIbQTH6ID0jWj4vryxk8Szb9nZSTH+U05fST4vPkc1STZ/Gg/BZF
5XtpKn9PTXkuG+X3SZLHxn3JX8ZayNN5QK6rLuagnFXtzvVyc3UdP8V9qDez
gC36bWojVvCpflOcw8R4Rv0OtTGr+Fb/SHwfzGS5fqtaj6UcjfVQizCYJvqm
6hq+k2uoc9ggN4jzeU8uqY6JtZK/iO9WnhbPJR8gi9yNsvH5fEJZ/YRYK/mb
2B/yDJbJb1JYHhT3Lq/nFNfpR8e6yNPYT2Z9V8rIg1nKG1xpNpBb5W5MZV/s
e7MulJYHsYTXKWQ2INZS7soU9iYuvyidKSUOZDGvUdCsPw3lLqTzDP/TyTw5
1ojOTOZpLnKHY0mxZvE8XEsJrqF4vEuxn2OPxl6iSKxFPA/149pM4iku0NH1
Cqn14tpMZA//cbtjBdVb4u+YwG7+JdWxAuoAFvEqBczuoW6cy3ie5B86mOdX
+7OQV8hvdjcp8jpOxvPoR5Eqn6WSPJX75V38TXv9FeqP1Jbns1n+mDLy+LgP
+WuqyBmx3+M51CUckTfGNehHHf3jsV9ZzXn9FrU6s1mrf0ytH/uLE/qH1RKM
pIN+e+wVVnJGv1mtyBTu06eoi3hC3qD+pbZT86nN4jP4Qa6lzmOT3DD+L/CR
XDrWINZL/orK8c7Hs8svk0/uG++2vIbjsSf0I2gvf04FOZ1x8k7+pK0+bzwP
H1Iq7jfWRZ7HS+TV96G2vJp3Y6/ph9NOHhvrxx+0Mcuj9mUuL5LHLI1a8XmM
YQe/09o8t9qHObxAbrPe1IzrMTrWl9+4zTyXWiPOZRTb+JVWjuVUc5CdbGTF
T1MifrOqx/mMjO+TX2jpnEvx1L85
         "]]]}, {}, 
      {RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwV0ttPznEcwPGfjjpsbJXUVls2OeWwZk7JVWzkqitRTncqcoVNbGxsxh+A
HHJJTlfYii2TDZ2odEC4cUg5k5zW63vx2vv7/Tzf3/M8+z5P3vbasl0xURRN
4h5jNstio+i1wRIdtJ+tJ3SRtmm2rtfF2qMz9KAW6B1N1WztJ9/6qN4n3XqV
dpFrvVuv85+fPu+YPiDTa2t0H7dIsE/Rw9xlqv1C3cYFPvHK86V6gNukOJOl
xdRyjX/8cG617uUm8c4l6wK20sBHXjo3XVcSLugqf/lunqTz2cJ5Rhkyz9Qi
dnKFP3wznxzuhs2cY4QX5l9JtJ5HJWf5wHPzZwwyQD99PKWXHrp5wmO66KSD
LyR4j7lUcIZh2s0/E289h03U854282m6ghou8zvcq3lc+P3ZyGne8cg8Q5dT
TSPj4d7MY3UW5ZziLQ/N12kdzSS78/TwP6OKS/wK9+hcie7hBnHOxeghWphi
n68bOMmb8H/xzPHwncjy+lrtJs96vzaRZJ2mfcy0PhJ+b23VNF2qhdqpOboj
3J9e1AnQeWa9
          "]], PolygonBox[CompressedData["
1:eJwV0ltMjnEcwPHnrQsuFLUxW+mgWmtmORSXHVxwI8npvlBXmdMFN9rYmM2h
hHvHLiVRKZVIs7GxsVkRpUIunCOHfP4Xn31/z+99nvfwr8zKXRW1cVEUxejn
mmF1fBRNWX40F5pfmHP1mObrgC7QNbpSn2qG7tcl2qrxGtPnZJvrtIdEc44+
JtW8Tc8zxoDPO64PWei1dXqQDma7TtYj3CPZ9SqtoYkfTHq+VPdxgzj3ROHz
2co53vLAfUlaSDVX+c4H+xLdSwsxz8/YZZm3cJZR+u3maQE7ucI33tv/Y7F5
M42McN9ubjgrdnCZr7yz/0umeRNneBN+n90Ef8hwXUEDr+mzu0svPXRzhy46
uU0H7bRxi5u0Ms5v0r3PRuoZDmdlN8Y0aa7LOc2rcA52ibqC7VziSzhH+18s
Mm/gFC+5bpegy6niIp/DudkX655wT/iHc7Y/7VLNZZxkiGa7tXqAdma5b44e
Dr+dJNfLtJILfApn7Jmj4e/KfK8X6RPSzbvDezLDlPueaZb9IV2q3ZqgKeE7
6yNN0fWapyd0kP9W+2tB
          "]]}]}, {}, {}, {}, {}, {}, {}}, {{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1:eJwl1WWYFlUABeClU7p7CelO6ZC2wG5Zu0BQysICFVCwQBCUEKTtTlDB7law
we7u9zz+ePece7+d+83cmdktLJowdnyxgoKCW/1IjvTjB7mOMxlNV4pTgpKU
ojRlKMsox/wo13MWe9GNcjneZz/JDUxmb7ozznx5tuhzOJbyOdbcz3IjU9iH
HhSZr8Dj+lyOo0LWM/eL3MRU9mWiuXq8ot9Az6xvXJEn9Cs4nunGTXlHX0nF
fJ/xr9kPpnGBcWs+1Pdjkl6fV/Ul9Mq5GO/Gk/qVzNQ7sFM/gbP1ZryrL5QD
uTnnIXvwjb5UDss6uQb5m1wmb5NXyd5M1y+UbVjFR8aL5GA2MCb3TDZgJa8Z
Xyf7s46lxrNlV27hy+yP3JNN7JF9kZVYzlbja2Rf5umzZEd26Sdyjt6c9/RV
uXa9J9/qlbJf+u/y9uwBFxm35WN9bJ4VvSGv6zfSO/tlXJlt+nxOojJjzP0h
78j3sj99ch7mq/BU9omTqZL1zf0p7+RcDqAvVXOsz/6Sd3EeB9KPavk9n/0t
7+Z8DqI/1alBTWpRmzrUpR71aUBDGtGYJlnbev/Ie5jBwQygMGv77F95b54z
DmFgrtl8VZ7Wr+YUmubYvKDcl+eAQxmUazZXjWdyvziVZlkv7zT3Z+85jMFZ
z1x1ntWv5TSaZz1zxXlAv5jDmWzciDf0mxiS9Y1r8FyeLy7VO/GZfnr2W2/B
dn01LfLdxiV4UL8k6+vt+EQ/gil6Y97UF8gBLNPnyG58pS+RQ/O85pxlTVbw
fK5D9mMtC4wvk51ZzefGi+UQNjI+913unveQHcbXy0Gsz7thPE/2Yg3f5fmU
w3NM9kWW5KHcH9mHmbku2Z5P9SOZqjfhLX05c/XufK0PzV7ptXhBX8jlehe+
0Cfk+dNb8r6+hpbZK+NSPKzP4iimGRfytr6CYeSPem1ezLVxBq1yXuZK80ju
G0czPN9nrg4v6YuYSOusb64Mj2ZPOYYRtMmx5svyWM6dcYykLe1oTwc60onO
Od7vl2OzPpsiRuX8zNXl5dwrJuV9MW7FB/pa5udvFN/nWZQjiv3/f6uL8X+C
K768
         "]]},
       Annotation[#, "Charting`Private`Tag$14451#1"]& ], 
      TagBox[
       {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1:eJwV1HeAz2UcwPHfERoSlZYQiZRVSanISENSXdNMaBcSLavFqdAglQaloi3u
nMOd4w539j5UzlHK3nu+Pn+8vJ/v83u+v/F8n1Olc/fkbkmJRCLFPxP4s1gi
MZSaxROJe7SCLtRrtIKerTO0tg7Qy3WlHnTvSf2DF6lsfqneSnnjuZrCBut2
6bd0ph7lvJ6jb1OaUq4z9DXuiPd0z186jNZcyqH40tZNNO5JEzaa261j6RLf
Ob4vE83/rR9wLxU5bO4f9hh/R1eupQyTzK/TD7mPShwx9y+pFLr+iPvjd3LU
3CbSmEw6U8hgKtOYTiZZzCCbmcwih/Xe52OSuYxj5v4jlyLXw3mAKhw39z97
jb/nCa7jHGab36AjeJCqnDC3mX3GP/Ak9SnLHPMb9RMeiufJSXNJ9naS8Us0
ZYu5/TqOp7g+nhtzYx91JA9TjQTF3J+qvWjGVusO6HiepgHnWpOr78SY011P
1de5k4tcz9P3yIv91095JM6A1xbpFfHMjLP1jfh841WaRHHjNL1ae8e+6rLY
K22uF2ie1tXBWkPXxG/TbT7voPGPXOX6mTg3ujjOid6g5+lsraMD47toQcxz
hvE07RPPzHi53sXFxvP1ffLj3OhnPEr1eIZen6lvxh5ymuvJ+jK3sd09h/Qn
nuVGzudM66ZrX1oyL86Pfk6b+G2xH+wwf1h/5jkaUp75caZ0FG25Mj6bneaP
6C88z02xbyyIM6Vf0I6alGCX+YVsMf6S9rF/lGS3+UUsZglLWcZyVrCSVRSw
mjWsjf+T4u+frd7jKzrEM6UUe+Jvm23GX9ORWnGW2Gv+qP7KC9zMhawzv11H
8xi143mxz/wx/Y1u3BJnkELzO3QMneJ5x37H77Xn6foKLdhv3XH9ne40iufN
WdZlaj/uZr11O/UbHo/zR1lrZulbsT72y/UUfZXb43u7ztd3OeD+EzqBHlTy
2hJtHGfBeI4OivNkvFovobRxVuyN9tequkLra6tYowu0ng6J569rtYEW+bxT
S4nN1g==
         "]]},
       Annotation[#, "Charting`Private`Tag$14451#2"]& ]}}], {{{}, {
      GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{0, 0}, {6.414085001079161, -1.28228271801381*^-7}], 
           Offset[{0, 0}, {6.414085001079161, -1.28228271801381*^-7}], 
           Offset[{0., 0.}, {6.476916854150957, -1.28228271801381*^-7}], 
           Offset[{0., 0.}, {6.476916854150957, -1.28228271801381*^-7}], 
           Offset[{0., 0.}, {6.539748707222753, -1.28228271801381*^-7}], 
           Offset[{0, 0}, {6.665976055126499, -5.636481286437229*^-6}], 
           Offset[{5., 1.1102230246251565`*^-15}, {
            6.665976055126499, -5.636481286437229*^-6}], 
           Offset[{10., 2.220446049250313*^-15}, {
            6.665976055126499, -5.636481286437229*^-6}], 
           Offset[{10., 2.220446049250313*^-15}, {
            6.665976055126499, -5.636481286437229*^-6}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{0, 0}, {6.414085001079161, -1.28228271801381*^-7}], 
           Offset[{0, 0}, {6.414085001079161, -1.28228271801381*^-7}], 
           Offset[{0., 0.}, {6.476916854150957, -1.28228271801381*^-7}], 
           Offset[{0., 0.}, {6.476916854150957, -1.28228271801381*^-7}], 
           Offset[{0., 0.}, {6.539748707222753, -1.28228271801381*^-7}], 
           Offset[{0, 0}, {6.665976055126499, -5.636481286437229*^-6}], 
           Offset[{5., 1.1102230246251565`*^-15}, {
            6.665976055126499, -5.636481286437229*^-6}], 
           Offset[{10., 2.220446049250313*^-15}, {
            6.665976055126499, -5.636481286437229*^-6}], 
           Offset[{10., 2.220446049250313*^-15}, {
            6.665976055126499, -5.636481286437229*^-6}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{40., 9.500000000000009}, {
            6.665976055126499, -5.636481286437229*^-6}], 
           Offset[{40., -9.499999999999991}, {
            6.665976055126499, -5.636481286437229*^-6}], 
           Offset[{10.000000000000002`, -9.499999999999998}, {
            6.665976055126499, -5.636481286437229*^-6}], 
           Offset[{9.999999999999998, 9.500000000000002}, {
            6.665976055126499, -5.636481286437229*^-6}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox[
           TagBox[
            RowBox[{"sin", "(", 
             TagBox["x",
              HoldForm], ")"}],
            HoldForm],
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{25., 5.551115123125783*^-15}, \
{6.665976055126499, -5.636481286437229*^-6}], 
         ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}], GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{0, 0}, {6.414085001079161, 0.9999999999999918}], 
           Offset[{0, 0}, {6.414085001079161, 0.9999999999999918}], 
           Offset[{0., 0.}, {6.476916854150957, 0.9999999999999918}], 
           Offset[{0., 0.}, {6.476916854150957, 0.9999999999999918}], 
           Offset[{0., 0.}, {6.539748707222753, 0.9999999999999918}], 
           Offset[{0, 0}, {6.665976055126499, 0.9994617617978893}], 
           Offset[{5., 1.1102230246251565`*^-15}, {6.665976055126499, 
            0.9994617617978893}], 
           Offset[{10., 2.220446049250313*^-15}, {6.665976055126499, 
            0.9994617617978893}], 
           Offset[{10., 2.220446049250313*^-15}, {6.665976055126499, 
            0.9994617617978893}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{0, 0}, {6.414085001079161, 0.9999999999999918}], 
           Offset[{0, 0}, {6.414085001079161, 0.9999999999999918}], 
           Offset[{0., 0.}, {6.476916854150957, 0.9999999999999918}], 
           Offset[{0., 0.}, {6.476916854150957, 0.9999999999999918}], 
           Offset[{0., 0.}, {6.539748707222753, 0.9999999999999918}], 
           Offset[{0, 0}, {6.665976055126499, 0.9994617617978893}], 
           Offset[{5., 1.1102230246251565`*^-15}, {6.665976055126499, 
            0.9994617617978893}], 
           Offset[{10., 2.220446049250313*^-15}, {6.665976055126499, 
            0.9994617617978893}], 
           Offset[{10., 2.220446049250313*^-15}, {6.665976055126499, 
            0.9994617617978893}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{42., 9.500000000000009}, {6.665976055126499, 
            0.9994617617978893}], 
           Offset[{42., -9.499999999999991}, {6.665976055126499, 
            0.9994617617978893}], 
           Offset[{10.000000000000002`, -9.499999999999998}, {
            6.665976055126499, 0.9994617617978893}], 
           Offset[{9.999999999999996, 9.500000000000002}, {6.665976055126499, 
            0.9994617617978893}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox[
           TagBox[
            RowBox[{"cos", "(", 
             TagBox["x",
              HoldForm], ")"}],
            HoldForm],
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{26., 5.773159728050814*^-15}, \
{6.665976055126499, 0.9994617617978893}], 
         ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}]}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->{{All, 60.432294294014184`}, {All, All}},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}, "AxesInFront" -> True},
  PlotRange->
   NCache[{{0, 2 Pi}, {-0.9999998830731719, 0.9999999999999918}}, {{
     0, 6.283185307179586}, {-0.9999998830731719, 0.9999999999999918}}],
  PlotRangeClipping->False,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.08090169943749476]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8096987688661876`*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"2226ec65-97fa-448c-a260-6879c839fb6c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Sin", "[", "x", "]"}], ",", " ", 
     RowBox[{"Cos", "[", "x", "]"}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", "0", ",", " ", 
     RowBox[{"2", "Pi"}]}], "}"}], ",", " ", 
   RowBox[{"PlotLabels", "\[Rule]", "\"\<Expressions\>\""}], ",", " ", 
   RowBox[{"Filling", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"1", " ", "\[Rule]", " ", 
      RowBox[{"{", "2", "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.809698788530631*^9, 3.8096988078369617`*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"edfdba6d-09b9-44ca-acd7-5786af8b87fa"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1:eJxlunk4VO//x283YzdjGclWaZGobC3qvlNRkShR9hRJkiUqSalIkuyVsqQs
EbLLdiMKISFCJCTLzBz7Lr/7ff2++lzX7+efc72uM3POvb2er+fLY+RsLh+3
ZWNhYdnFzsLy35Ud8TT0qfnsnS79f68h4+bZkaEI7BB9c0DKG4HdVUd4tNwa
gW9xyUGeg43A2VP/TLbzd5B/9YNqcXsbuFRgG8S2tgesT5X+cojeDVoGD5OT
bPpB/0D76SpSHwhQnmbJOz0I5LhTWI8IDwCXzdURZQl0MO/2SS11dhDMn72Y
3uU0Ct6KDTY8sRkBNiXGBsF248DvJJr2VmOAs2MtZWX+k+DCnQs/5zKYIHBr
/uVEv2lgpnxZ914YAdjK8jXuec4Cw28RVzbMEUBYQbfh59N5cCzcWDKviwCH
YrVejYYugo/+fLv37SeAOFGnfSv/L6jg7PVaS2GCqE+FrOwXWKCZSI+8mzUd
aErtW5Y9xwob7/ufrjcdBpt7hPpvXmGDpzUm+qXy/4C0ZIp9ris75Jvm/uL8
sx94dVs0b/bjgF3HbTfddfoFXDR36MaEc0KvRp1wFe9OMB97wGYkmAt2DOi9
rFZqAY3OUdZX47mhNN/1ja4tn8BOnTV/u16S4NdWPru/LO9AzcGdyfAFGe5s
tJTOCExHCZnPdvam8sBGqqxmwtVqJLpW0cHyDS802pC1Tvt3M2piJd2RKOaD
7LWxb1Q7OlEuyS2xsYYfhl/fmvsh8hdSFBVysKkSgJuDX50yL+pHRNC0iEqr
IFR+JNy3vuYPWnv/vvJlByFIrjG+07xvGPWadnZo/RGC2w7uW218mI4O/W6e
y3UShv1r9TIPsDPRNVdbezGGMDwRb2OVup5A+nnPj4h5UOAuyYmHl9sJxFx0
8GKfpsAgtj97mxYJ9LLNJ8fJjQojVz3e9uwVgebt91hfX6DCpvqA0Oz3TCS1
FGLm4ikCB/9ESeywYaABnYe1JA5RaG7FUPlycQR9WF8HpB+KwrazlXI27EPI
gZTIIUcWgx4HeY7UWw2g/Lh1ez6EiEHuki0OxXJ9qGG3ZtVxYXHo51pY9eHJ
TzTr8PyEdZA4VM43KvwU9h1VG8Se5BejwaXu759kgxqRzU7NpKRwGnzuYZ4s
9aIcbdv9RndBTgKu2/bov3woPe4o0fE0NAOoofmS648yQNb1Y3Ml5Uyg397m
rqE5DNKFziznOYwBiUijSxWn6cCmLcI/+eoEELq4i9HAzgSzQtpPs+9PAfXU
F+lq2wigcy3/RMTtGaAqwx5++xsBeNxZ2bMezIGKU2zlVksEeNv/ccdgxAIo
mLcVZcQSYOsn7imNhCXgE9mXZVTMBOuBXEJF5TJIvDYjfPMwA1wcv8kSOsAC
vdpYWBodRkDO32SXY3RWeD9U23+D+BA4ep7VolJBCO6PPtfWJzyE2Fy2cbYn
C8ELZxYbQ46PINE4E4dFBWF4nBQol6TOQD2pq7cNpAnD+lhB+u9XTHQ2/Pbp
yG0UKMQHOOVCCRRz+m4fXx4Fni9pd6AtEOiQgwftvSoVZvgKWPr8xOchzorn
Sj4VirCzHtKFBOLL/mMxtUsElr89KV+1monuxAtQ9yAR2FEgevLKVToyyt/s
G6YjCuMazWZ2aA+jI4Wu1w07abDJMYa/JzETfbMK3RAdGgvUD/IbnQyJBaFN
D3VQNtaF8/EirDFDwGjXgHEtfRRknpV/GPgL68cRD8fVxDgo2+FV3xXHAEo+
jxR3kaYAeemrnNMkEzgY5f+KZp8BH4+Edh4uIIBflLmUJNscSNgz7122TABL
7gfs58QXAN1FwymrggCaKvJ6IquXQOqDGaW9HASQFp+Zkt27DKZ6Jy6PZDIA
m8Vqn9okFljY5Ne7ODgCZvndd+xIZoU3SrXDY4qHgI1J6QSTRwjKKthoPXQe
RBQv81WvHwjBa/rB2jb1w8jr5rN4GbIwTLEO0+WspKPwQ9dE9YOEYdMW0lsd
EyZyYp+wNhakwMALeub91gSavi/4RDiSAqmIegcyCfQ82/mIpSgV8maVKCyP
EWi2yNnKJYIKNxoqXTjrQSD2IIqVhqQITMvQ9Zt3YqLGYwYabS9EoA+H4R6O
MTqKvtW5oUFeFBpMOlmW/xhGrddNghfzabB5UMwjwq0Qkf50Jr0aHAOfDwhY
r/6Mz/e53NeqLJPg1wfnreqWTFAR95d9C/c0YNJpV/bZEWDdi/yqwKUZkKNe
7S03QoCgY4mDh4TnwZaXTr85xwkwX87h5CiyCOKmK4Kc3PHnzYajzZT+AsfU
MxeeXWSCcVuuUf5qIdj4pfCq1tcRlF4hur1dTxjKycbfl3zJQIqC5Xre9cJw
Lrumim+IiU7JCxxvPUGBSm558EQhgbQ3zyiTWilQ5fJR4cllAk3Keg1Qjahw
leX0IYsqAr2+p5/r0U6FA3QrEWtWAol8LzbPNsX6Uy2fvOEDA5XOP7JJ/EuD
Hm8i1oe9eYk6tO9VJIQ+BlI+cXUn8JVt+Q0TKTLA/iGxfRp6Q2DDl2S2lrRR
oK4fsH4wfgT03rWzbE0ZBxrxIXt3OTLAoZ2ZHjerJ8FPnbVhG5uZ4IZW/sY1
VdNg6rbgpe+JBDiwJSDlWOksWEo2XBeG87+ANjwo930emJ1RJhS/EkBrKPvq
nbZF0HUvM7trHQFWsdtIN87/BVuUOWYF+xhAP/RiuZ0/CxR1jEsLlqeDKNHO
54p+rPBLge33l3zDoCNmpzdpWhDuCtX7+0RqEEWxjr8mewrBiyNfy8/5DyNl
x8K922aFoEM+l07afTpiiiVy3/EWhn+DVR9sU2KiiV1vz6n/FYZ9blOOAwcI
tCb22yjVjwLlE9x+tfYT6MD3S33vOKnQ89NtaDlLoLrDc2Tne1S407LZTTKI
QN4LSVaneEUg46ZStU4EE3msdzn8+qEI7Lpb8DFVgYEqzqpcHxERhb/Fofwu
+RH0or1G8ngiDT64UrletK0Udd6IOZH2Zgw8znJN0Aujg97ohEhm0QQwyXl4
RXQ7E3SdWqPv/GkKsAbsGczWI4B6QD6fMJoBZZscZQ/8IoBeb7P7zfo5cKWE
0vx1lgAnmm1PKHxbAJ9H+SxePySAgvD1mpqhJZD36GC/YAQTeI4893QrEIIP
/lDpRaEjyCZTvWF4tzD80LiNMejIQH5dzL1ZJcJws5Cu5YVPTNRt/ulknhYF
rg28sMM8iUCuWiUPeD5S4NLd0t++f7FeHrx+y+4AFeYPbflwtplA1yltVu7V
VOi3XZadkCNQ8MHjFi1HRGBSjLtI7ygD3TNlYS7QabDaU2k01SsFUWsu9E7r
TIG9wV43qqkEOGWXHyWhNQPOaUwGtn0iQDW3cvDAwTkwfei6RQbWL87pDdKJ
xguAe6zUUyeLAIOfd1p4yFIgQ9dU8ZUngWqdD+8RTKTAmHN2balTBBoPcsvk
ladCjzwvq9whAq1VGsxxTaTCmyN6pa7mBEoa7Hg/pD0Nnq7NKv5xkwDU9Hxv
kuYsaH+USKNNEKCx+JqZyMl50KAr6bo4SIBmhpH+9DkKvEAOrOD4TKBVItta
OQewfkWntNrgfDyy6H20/CzWp9/fPzrlYr2KkmwzEJKAPftjC/enhKDfIvaz
eaG3wO035Z7x+LpLdKcWHKKDJmvV9W/WDIFgiYDvp4JGwXtdj91Td0ZAfJyl
Sbb/ONYXayMZQwYwFv0gGZs8CYJeFOxuwHX63k4Nvf6EacCg9sU5RBPg1bTs
2IUXs0CZKUxNWCDAuZdRnbcL5kFWSFNxRhsBDh648Whn7iKQ8elbZaJKANr1
J1kb2v+Ci301gj/mGWBSMexXzjUWuE7qzNEd++ngokRQ/Xp3Vti9EDU8rjIM
+sWe1kgNCMKqxcffgyb+IMtKTQdNVyEY0tltrG87jPz7avkKCSG4ytjVsNye
jiT/FrO88BCGn37m1U7RmCiv1d8ucUoYBozo2AupE6ggpUBK1JsCXfVSem1w
fX3mQFfuWKJAlqbIpG/zBMoL3mNF3KBCX7pfrtwzAmlmjf+0ZxeBzd7fWAqT
mKg2xKeJ564IFGimPs3VZqCWkz/lPPlwvimzuZUfGkG3yHd/eUXTIJVrt83i
3TJ04OOtTdsDxoBbM3t8qQcdxBdGP/78bAIMmYXkqUsywbCq6kRI0hQoaHz2
cTsgwF4fja3NsTPgnaezaGwnAVJTHYqfpM4B3TmBYGu8vizmYtoPchdAhd1N
Z65IAmxxhD9vf1oCZJ61GbPJTLA3fQAkvhOCPzI5RTpdR1DxRp0XbirCUHM4
LpN8nIGyKzl31OUKw/TfEff6cpkobvaVyfpdFBiW3crHHU0gkn5cHm8pBar1
PxAUXCLQRNvM58eaVLhnvKMgA/vRc6clcycRFS6nc8Wc3Yb9yeKLrn4tERgV
ujVHgJuJzge8z17fT4Nn71BMfX6nI9mEG/dpG6fAIyD+7RSu92csNEo718yA
ptDzu4+WEWDD16pWlnVzYPJ6dOkyzrcs7+9CnBoLoHPSY6KwEM//vJjVgDgF
UqYzP/I6EcjaS9FBKIYCX0sc+6s2juuT3PiSqhQVpt3wDxfH9VvAXZFnPJoK
rz2w5826QKCcSrol74ZpQHCOXTvqSoDVCRrxtatnQZZW4NvTBAGU/QTjlVTm
AaF6qLmaQYDIB9sM7MwpcPO7Bx8nKwj0TkaEnbsb51vxqPUIzrfYoKVnw2ZU
ePTYofn4EgJ11ra8uMEtAb/qPIue8o5CrroanNb906DDlzWwPoMAv89OnFXr
mQXqHqmxY38JwBu8c7piZh4wH3R/3lJLgMCw8Q+UIAoseubr+hnrxehBIvI+
P/YfSVJUR6wnW8I0hvS7ZwC91Dn28gABGLQ9ymeJOXDLzD8ie4oAkuXDJ7R1
KfBya8wp2UwC/VDvMCc3UKDB3+g/Xni8h7Pnt+/Ro0LdBrWI6DoCXdj79HDd
+Tnwynna/Asej6qtnZBAOgWuNvRbfonrTfTi5LleRbye85dffMf1iCdfw0zb
bBY0zDXmmE8TwHnil8i8xzxgN3Jpi+sjwD2S/hsOJgVuiHpxxRTrs8hFG+H1
Eng9vv05fzXFB82/Uz7XHnoZuETkHGjBV+M4Fsfbn+jg3W1+qQL+IVBV6rn/
ufcoCDsXVt/sOgLYMjqaX14dB9fXbK2z2s8A5ux6zIynk8BDo/7wRAETkNRm
LA5GToNDdBZfv6cEOG7mKHL14SzoSm5TvTZPgMLf40bvkudBTJjXjYoOAnwc
s6SJvsb+6OBWWvdurD+qWV4nqv+CoqRNNsFcTKAznzjW6cwC7VKiTvcZ0oHR
8/MDrxxZoemcL+tlnWEwfFzn8sZurD/EiTS77j+oTL637qSTENzYbecSfWIY
qck0u3mPCEGGgGCk5Gk6ynI5tJTsKgxvhsj2bxZgoifrrp63HBOG5+lsZZeV
CHR3q0KOqCcFak51yl7/QaDK7M2tzDkKbKsqPtqH/b9izk9yxlUq5AcHjl2O
wX6UnybrskyFjpc4+6reMdGVT2TxUm8RmDfaVHvfiIG69NU89pFE4eLcryAT
0xHk/NLqAOUZDdYNfb4oLlSOrl90Dr/iOQZ0f3Ro69vTAVuNBF+h/wTwP5dP
DxNkgrE1JVXxT6bAHdb53P07CFDhNbNPNXgG5IdJscV+J4CpUN7P11Fz4PHB
5FWuiwTePydUkLAA6nl2qpCfEyBdYp2Ded4SqDS5d6wgiwniBAPj0Vsh6BWp
ee2DzQiyP3eMfYeyMNTeGFBnf4CBjuwIUW3PFIaJV76lTrzF/Yt26KluNQo8
uXRDLvEJgZqbhY/yFVKgSO7jvLW435WW03B9vYMKg65Ntibh9Wr3KrHKKaLC
+jZb0aEdBEozqZBi7BWB9ZTZ/Flh7F/XRIoV/6TBtXe/uXUEvkMbwjhMN9Gm
QGXBpnbXRSYYODXzRZM6A0pZ7FNNiwnQqiY8z0+dA/s39FLGsf6QPmwNUN2w
ABpiwrZ/LMX5mcthHUOlQO0/ZwQCzhNoM1sMi3AU1qP61yq6owRydtj2+rAE
Fc50XctZheO7TxtyMp9RoXVjx43VzgQqynLftloc18vyPF4TRwLExc1kb+af
BWKjg3V6WG+6h02rdq+ZB2eybujMYT262iZjKH2KAjdxumzPKyXQjQTfZ9wd
FNhw3iEH6yOqbdOEyyZUaGQgZf24HPtDm8xlIXYJ2BmcUyc7FIOmtWfEylum
AT/JQsQmlQDh1Xvva32ZBYvvFU8a4Xy3aQm5PP5nHmyIDB0orieAicQ5U2oA
BVprLdLO/MH+4rHSnhdkPP5eps/kNIGygmbmMxpmwNaIbMoQzvcXN/2PO3fP
AegV9MpohgCLAu1Gf7UpcPeNz44Gb7G/KdadINdS4NvAO2eE8XivLO5sNzxE
hbdZE8cEGwlEe9Xn2G48B35OTxgY4vVeHm5LFEjB+hVk2as+Q6Dqg6q8Mxup
MKYwUt8Yjycoa8YxSXcWTCw9fFkzSQDZU1t2cNvNA+U99wKssR4eC0KAcxj7
sYd2cUysP1zs4EqRiATcPmET8fhWAJoM+VZvnjYLcnkm+NPx+XWSS3tQxUqF
cuRrR9/MEWhRW+ZZQPEcKDl3Yc1mrB97qpVkeSsokF2j60oHrn/XHD2zJ1Tn
QGr36jtDeLwR04XNgvEU6O6wsYdlkkBP31wNvqA4C3b1l0geGsN6/yzekasX
j6dwUiwfz199OQluHJsFaZZS7Bfx94Uz7T+SmijwkmvC1Wp8v7Bdbz26Ngf2
+lPubML7c+Hn5HX+LArUmXfdwsDj8yu6evi3Az4vx6YMvuL1fn/nB4VjnAJd
qntOJOLxrWn2TQ+WkoDvE91twlJckPxQ6W7pMCvwJLdtYjW+9tv2347LowMX
j4K1auxDwFp44lqxxygoXjaTee8wArbn0SgSl8eB6/TaADdNBrD2DDYpCJ4E
3Vmrz3rmMEHt9rYB96BpMHY4fjMZ+40Ufkri0p1ZEMjxy6BljgAD3LHC1XHz
YOSSqzL8QYD71Y1dd54vggJJd/lw7GeehqAzQ+gvCPI5JG7JxwSjPe+uE44s
0Obdi2Sl03RwyLzF1caeFX7/+WFAznAY0EelK7Z0CELt2A+FNc1/kGurqreN
oxBUz2OPKjoyjPj2mCRZDwnBmJLOL5qGdHRzc9CNDGdhqFMcPlFEYiJ/Xeb5
XYQw3FezlStUgUD2EzbLotcoUIvvucFsB4FOn9LdNDdDgRdtWKItsb4MVG39
GeROhfMwL5/0EvvpIgXovkSFHzJTfCD2R4d6j75/4iUCexuylc+ZMZCNrrWs
PJcovHXYc5v42RF0gVE/9SOSBos5rZWkjMuRSOlgTYTrGEgoZ6vhPUMH2xtN
jmy7PQEs+tuycslMMPmMVTn18RT4+Tk7uAz74XuebbXn/GfAZvtdkVTsl7Mq
zFw2h86BmCYnBwY+rz4Vq7waoxfAV+90llvYb18ejVCuTVsC4J3vUEA+ExiW
dZ+oSxGCWx6I/k7D+r/3TrP6qi3CsOR8k0DgHgYSHW/N+pkhDLe/0/Z3TmYi
10vk04UqFDj0RFRiMBz74cgjT/kKKHBi36JAPK4/2VXGVenqVMjof3SJ1k2g
8CABtfD3VNih3/QkRpNA5pzf9oxpisD9ddLxNuJMZOjEUe3XRYM7v7d1/pTI
RAo8hz9sE5oCUlGORldmmSDZuO3UJd4ZsCVyF68x9nNKg3kPw3nmwIzmWFUX
zgeV3z+09WQWgEcKZVsZ9oM3f9yw9hSmwPUzYjm7zxFIqKpVV/gpzqfdz9oO
Ezi/BQ1nTohT4WkvZqXQGIH2psgEhDyhQuV607MH3AhUuqkwap3gNKhxb1ln
cAHrXUybpjnnLLjbfn9iFx33s9EsJhUS8yB1xkaYA+er/d9Iw/mTFBgQOHvg
QTH2l/al/dzfKTC4Kv3XEs5PKy/zMLIxFea4n1vn+YFAVekymZ0sEnDa4bKe
yOM4VHCgLXasbhoc77bjkntDALpnP63m4yzQl/PeObtEgEfTexR5euaBkLFp
/bUvBND88SKB6o/nw944KzNAoAwV/eBEbqzn8sYaaVj/rgS23e35OAMSfCTs
onoJMKms1D/9Dfejvpr54rjfZqgZnOw4QIGxd453drwhUOCte3t5qikwNOFo
PPZziPzytKK5NhUOfp5PLfmK69PJB3+t9OdAxtYtLffwevenCY0LJFOg0Yt7
pu5Y3y2GT1iybqDCT0zj1AeDBDJ41zbVtn8WjCrlpE7ifvQaT3PNI4t5IEsi
ZrL+YL9oOBvAOUiBjwz3FSri9VnWT5P3o0jAc+uP7BYaDkJ6B25Y9b2eBX4b
WfmV8Pnl+Fj348sy1jOVKYP9uL8ymqtUEM6ZA0en/U/WYr1d8/D8Rd4yCtzb
mVt2DetZo7TsQU/FORDBd05qDo/X8/2EtFAc1lttN0eZCQKZJplIRK2bBbKO
hllGowSoNe/M5+rBenqnbNc3PJ6gzKNN6YOzYPn6sYbt+PvTbi+FyY0UuDPj
Qnoivk8JHM8/6DwH3j81pt/Geqsfv6WK/x2u5+7Xw3Wx3h56b9IkenYW8K7q
/roK623MQVFLjlEKFHZqsuHA6yspM2llJikB11F+rqm65Ynmkz/eGQ2bBSHV
urJU3J+xWQrpS7+aA2sPf/3KwDFTqJ2Vr5gCnfLczkRjvfG+e9H+vuQcSDny
yRafLxDZq6fP/QPX31+3HuD5Ik2xZ1NFbbPA5MX+q0l4fBVzlGRyHQUeb9Bb
q4vvl43u6TxuheunwI9mEfx9h89+kxx0vP8Nmx4k4/Gd4pxu4amkwKSQP5tV
cSxb2CJ3ac8cWDSoozfiz7O0XZDj6qfAGnr4VDB+XrceW8bLuVnQbMW5Nwrf
V2Qq3yC1UKD490P7e/F9mw1J4Tt85sCPSi3pGnyeFe6LL1XJSECNF5duFaSc
QSu8K2/5vz8CrPCuvX4VjI/lxD/eJdWlcrFnnPmPd626HyM4kMn4x7uke/ea
6nPQ//Gu3lpBA7X3Q/94Vyb7kcdein/+8S7LhTz+Crb+f7xLJWv/mvlHPf94
l1vYwHXBdR3/eJf60B1703VN/3iX/oz6mNCHyn+8yzt83taW8fof7+o0U40a
tM1HK7yL0uuUfsXwM1rhXUO7Ygcyer+hFd5V0zDcgsK70ArvOmPSN+62vhet
8K5rmoGXyF6/0Qrvaukv9ji7bxCt8K7RT+sq2r8NoxXexT7XyYz5TUcrvCuy
W5xYsmCiFd51vKxOvxr7yxXepfl8Lcs81scV3tUSdC30PNbHFd51cOsGNGZP
/ONdWr5bRVY7MP/xLjFzm7zHX+j/eNdHXgO+B0XD/3iXwOYvpvusB//xLtWU
61uF7H//411zQRT2u0d6//Gukw89DtfQu/7xrqcVUW1IpfUf70quf9VQerj+
H++Cc8WtwV8K/vGu2u0Ztrx+L8AK7xKgnrxasvkDWOFdj/eqm5J7v4IV3vW8
JFfc81Q7WOFdn5ZD7md694AV3vXmmP1Xs6k+sMK7pN7F9+b3DIAV3iX/wcLu
TeIQWOFdHJqvhgxaRsAK78JuKKLnIQOs8K7gsN36SkNMsMK7SLbK51dlEWCF
d63kwwrvynv8iLiE9eon65r8PybVQEbqT6Uu7gdaY+ty511agNk7Os+DM0yQ
MMUHzM1+gB2P48cnB+kgrrHtc4tWL7A1ztgwxhgG4fsLop0X2SGrTHDC5agh
5MGvK2jLzwlLK06cN2CMIHWn0tZKChfU9DQw2/GOgWz9L5/JlOCG8VUhFKE5
JuIwt8xQWEOCSI/GVCwjkM/HLScEZcjw9OWorv/qXf6NIWfhdTzwiNabX2T0
X33oNYxT4IV+CSH3cmZx/0lZNV20nQ8eXD19bSSNgQ747hGZ0uKHa7U22i21
jKDRoH3+z3QEoOdLw18Qj0/LaSvrw69isOQPMV5TOwzONl8MbD8mDvnHPSW/
lNBBj0V0i3qTOHxvZpwQoMsEolWXvE1P0uAhr21O8+YEWOFX5qbNibdx/V7h
V058W/dK4voSvsfe/5lQJeh+2+gWhPtR/yxe6xjXJnA3znWSO50JeAq2NHLb
dYD53xmdowYM4FcpnTay/RdwmNXkYrk5AmQ9frOF5bND37lDr3zHBtGcu5FL
dQ0HNNgSaX/edgQZnVwIzmzmhFKlDp6e+gy0VaTjjP43Ljj866vUYAYTOdgt
chv2csP5+mWzCy8I1MWVnOzRQ4ISF64wG7CfKrMO4dvUQ4b0FBffHNy/suqX
Htw3wgNPlaSsTlTF/f+qtVv5mbzw/uW1CSZCTPTwwxrd+8t80CvrHquaMR01
6ZqK55IEoJH63CC/0jDyuq8gk5QpBkMtxEwXdg+Dp9wtGyO3isMxU1cdZz06
cDy3Olz3nTgM7S79PkQwADOAazhbjQYrBiZ9+tbj8/Z/PMpAtodvQwsBLFpU
g8fS8oFpg//IPPbvCh87f6vF1oFgcx1bPuxP1z56xGvi0grsFkrLPfixf329
L43VkBPmSAY0O12iI9p9n9XfDblgfS9naxkPE0UtcpwRseSGg+u56NY7CRRj
WGbMYUOCE49FZHjw/OX9speSLMhQ0t2r3hfXw/TIfd/mzvNAUoIfi/NTAr33
47ZcvsALPTMnkjZj/72WR7jY4SofTKff+T2hxUBKseyjqy+Lw7uZLaeOb2QA
IxNp0TWT4tjPA/Amhgk0l1sorO40mHPn9XfbhwRY4U+V7x1rZHA9XuFP+77u
/MyF89PJjNdlnF4ODA7+yK3LIEDv7s1qo65fgXuYyWqHr0ywR6L0qcXFdsAm
fbD26B0G8NxbITWT0gOggEnmy/IRYCfopbYugh1GjLNePhU1iHYpnF4zn8QB
oaxKXqj0COqtlmBuyOGEoW0DP5irsB83Fexdnc0F07YEDpD9mSj6oq7quQpu
aK7Z2Bt2n0C8G2xPKJST4A7ufpF27M8OnLDtUC0lQ8MpxYtbsD9rXk5FIZ95
oIXG3L3yYwSix2yoz/3MC/N62m4b7GWidJsIu8YuPni7o0S2J4yODqQMdGsN
8cM1nr97n7gPo1XhG5RyX4pBoXqee7LjQyBbjnR1UlYcmryvHFQXpoOsP50T
J2PF4buZm6GjpQzQyWiK7ZGnwVTh/NoFEu7//48nHQ9Uum9cSYD9VXF/Y4qy
gXJac99b7A85+r0bgm7UAuO/G98fMSSAl1haT7LLNzA9JS/gsoMJ1E5rW6oo
c8JN0l92mCnRUdJ87HX97Vww7/L7jHPdDHRba9ev3t3ckKiMfWK0ikBfjQXv
imuR4KGJq/W0LwQ6keicbLaXDG83bsxWx3q1/YHoK05tHhhhubyz4y2BHu6Y
ajt2hBc+PSPJ2tvGRHpBoqepJ/mgoLvI3lvXGdjfaey9YSUO41nv1DMm6CCq
o+uKYp84/PzmcfFmDybYaPOyeostDbqIBxutd8f92f/xo63d63q4pwggrT+W
N5GWBA70W/jtwf6wUKYqFqp+BANHlaP4fbFeNbz+dWuGCwrXPy2O+MZEGmfS
OvewkeBURLiTTgb2+wPDSxXLJNg2Owg7sT/TdCrZK8XGA3ntGBlLDQRi27hL
9f5BGkx78DO2T4sAQqt+cyTV0GDd5i8fAn4R4GpftdyBuCLwUHFf2qlGAjjq
uSiM+ZBgxvRXEZY/BJqxnT4+6UWG8UZVJ0dwP6Hw+hI38wEPFCxdeF3nQ6Bj
L0gWLfdocE3r9pj8WAKs8CJtx68jn7DfXOFFBb+OZpXj/DAbNv8t3VkGdoTE
2FPeEyCIpUhGYqIRxBDLPTa9TNB6mOsmifkdHOW3fHc8igGuLFBbF+16gAWX
9Lh63wjgMf/UQL/LDsXI8r5iToPI7F7nPOUJB+wZY73iOj+MUtjerD77mhPe
MWzQvMXCQKSlTWs44rngXpVKt8NuTKTOdK29lMUNv02qfHT0ItCa/A8b72WS
YIov19tE3A/46R0r35VGht0902coDAIVf49ffF/EA29v2S33xJxALL/eSAYU
8sL6+dH1XkZMBLP0Jyfr+CCUaoudyaQjr/a3FQ/a+eFZldpvH54OI/tViWrF
z8TgaH2DytO6IVCmtCZmrYQ45JIv2j83PgJOvila2xkpDr88N96emsAAx2Xe
z09L0eDAibxEwzkmWOE/mQunvvkWESCvpDXXvSITqFXfDNbF9WvctVGr6EIN
eMI9yE21IsCmTs3PX8dawIWPyrd3HmUC4+xqdT1pTmhite6yiAAdOakqJz9Y
wwXNaTQr/08M5PrbSK5WgRsW5K1TnyMTyKFdXUJuOwmGXDsr1/sJx+pfbuYq
kaGYsoZP23//f7uz/IBXjQeOV15z35mHY2G6yLVdvPAi96Xu+4NMZN34JOnP
fj64St3Pay6MgYw/GtqmmIjDrwNH/ETb6WDPi5LXmR3iUNLG94oM9icxYffX
HrCgwU6W961HcX+9wnt636muo+B+mgNYyL8segV+Kz97NTxHgKR0MZFLa6pA
SPrmfZHBBNjjguTOD3DB/WW7FDk/YD/b1+KiM84Nc/lf2oonEuijx+Hm1aMk
qHVQUS8U94Pe55Pk146RYZuKQq1sK4GunZZ9HL2HBvU3KcbJqhFg4nBM7dcy
GrTwjwlb30mA4c6/31clvQcO+x7V/GklAOeXp2XzLiQY5SYaUvmLQALTRhv1
L5Ehx22FMnfcjzpGmzAnrvHAK30elraP8PvrmfnDXjS4y7/pfl0EAVb4zos+
/vZ9uP95uc+BYzbtCVgf9vzoFxxPRnJ5NzaS4F3f20ohuH9kM70xofSFDM+c
kq8s6MX17I2Q8YYMGmz6lW0YWEeAxjoHneqcXBB4NnAhBPf3O1r+0PmPk6Bx
bPS3xm//9X+UZlZ9MnR81eouifXhpYLOxq9TNPj2jdGnM7j/32Hhe0g7LhWw
9g2NUicJ8NQ4cOMFQTIUrkaf3uD93jK8GXg10aB4uI73CazHTTWHw/+EkOAx
afeI4hEC9Xx7cjMqkAwPFHE+HZj8H69x2314PhPn+wqvyc+/5DiK46ZMXxm1
42XgiLFLs3cJAfp72SK2ZDcC7eJg4cxhJlhro0BYZHwHlpsDIhUSGWC0XTNr
+UAPiGxJcGiaGAHmbJckDW+ww16TGNHPJoPIMXP1+dggDihw5ae02uAwCood
zb79ghMO9VPlpSboyEdfo+LqMy7oYpLAn2vPRHcz/CJcU7ih+6fl7SkeBFJa
dqVmviFB7pLY6J+4v9l4uDKn5DUZ5kkfmtTH/c/Wg9KSDdk88I+TQHOzDYF4
2Ea0JjN5oe7UZJSFFRORTTfvvl/JB9dudo1rLsP+ZeyxatpXfnh3D7ehSsow
CrawfY8ixGC4tVlYGu4/ddQytu0WFYdHSsh2WVjP1gekFkWHisOtIfr3Wp8y
AP8OxY1sq/D5H5CVOjaG+9v/4y9jLqxufXkEGH3vIvyr6h0w+FV1xJFJAPtd
c15fe6qBvuRV83JbAtwuuQcHMlsAsy7svLMJE9j1kF99F+WELPeGyBVLI+j4
Vw+QtIoLVtnO1zOLGIiublO+Zw32V8ntJpGs2K9HHemXVyBBaf8qY/FKAnl4
e9v3rifDOtOspf/+nyB268rNIEUeaHaUwz+7kECDN8+rBG7nhZ3k8+Zpo9i/
jn1vMNzNBzd5+wawv2SgH3Xds+UnxCG5sEvg9mc6ELiZpnmlVRwms30VtzNm
AtO38wbHTtNgRFuTl8pZAqzwFpaHVj9+4Pld1Qj7cbXiJfg2U+dDwX5L2gPo
331WCZRadjuui8R6WFFX3tHFBYf+nlH2/+/3igmDmnrD3LDp0ANpg5cEaiqd
LTk8SIKHKwWGEfaHMudWSyQOkiHjdUSEVzuBVFzDipN30mBevrOhsBI+j788
t5wvpsHJOpadhW0EWPf9mapfSgHw/GXaydKB+6/gtw+XL5Bg2i0v1ZluAq3a
y0G9YUuGlHXLlEfYn/NH1f3ycOaB+6sj3RdDcT80cOb31DUa9Dn9LS4Z69UK
X3FxOGBwAPcb97e3uiYUhYHN/gsxnrhesvzMtV+qJsEv33UdD8wS6JXx6EDm
RzJUp6vz+f4mUMo+RkFxCg0m3mF8vldNAJ4azlcqBTkgcmp0Suk39hcRC/mU
IyRoeaUs6V4TgQ5ZlpcoaZNhkYuyTQHO/9CKtQ/txmhwSdTxWPU0AVJPFi2v
TnoDwo+NHS7AfuR1zG5qJDd+n9fRJkO839J3SPHCDTTY6PYk5E4/AWQeWljR
H5Bg88Eydach7BeldOw/3SPD2eV4eG36f7xEZopwM8D5nrjRPJYl/T5wmK//
6oZjscsie03ek2D569ebjk0RyJIpE+avToZpQ4ftI/H7PMZ/GIQM0qBj+ssb
shMECNHe4FSbkwB6CnJev8J6VagUNUjMkODNFHYRbTwftvSEPXLuZHirhNwK
sF4Ob5/dOcArAUeEw21oeD2LDP5GHIl7DlB+WRsH1tdBfZOwV99J8EfhflOE
9Xprg81gy0kyFL+bw7TC9eFdqEPV7nkaLL80cvA/HhEo0LVHU5wMf+SPyPYt
/4+PhJrZedPxfFb4CIc6j+Qijh+JRmmW8ZcB0xtzDkkI+62WxC8aYY2gyPzD
szomExxx0kwmBX8HEcyLv3jfMoDSYUNZVtUeEBhRaCSyOALufUP72K+yQ/G3
nrVReoNoUmdPtG0ABxyRVdrK+3MYsTiF33r8lBM2B08HnqHT0d6ZPaHbIrjg
2+dvWizOMpFCsNDClURueEPxjUKJG4FUX9X6f0ogwYGlpLjRUVzvPnkr3Yoj
ww/yvBVWOHZYMFP4nsEDQ2q2xw/YEig49KHxmzReaJefpVF+jomYac8sDcr4
oKf8xzdq1XQ04OXDKK3nh2+f5p3/lTWM1i0fuFEeJgYntWCa0rshEFDgvqBN
FYccLRXzHD9GwGPPV9y3gsVhxy/RHKtQBnCo/F3KTaPB4Mz2m1oMJljhHZO3
Rsrv5hCAbwdAkTrvwOuiuWVnAudfDH+U+Ytq8OJdqgAv9gep6RtvjIa0AM0b
Z+/cNmcCpodCe4wwJzytJC/zaGoEVcau4s0T44IBT+W2iucxUPJP+5AZKW74
8IHnS5MlJrK80XJ443oSJKtNiK6vIJDXmtau2TVkOJe1s/w/Hmq3pDRzbCMP
HHurpdhXjPdbNUErUokXpgzkFOVMMhHhc72XS4MPjlnFfLyRxECyBgkV9Ybi
UD64gz21kg6uXkrwP9kiDldvC4hbNGCCgh05f4xMsJ7/KPi8ypoAK3wj9Pza
2GwGATJVlHb0VcWByguHK6OwvrW3n7gocLISlJe2T3Y9JYDbxeaQ8HYuuGPK
x784h4kqfV3j9Qe4Yctl27c9MQT6bmOgYt1PgvLXzwJdrG/Ova2h5/vJMNxn
K1mqE+/nX70T6Ro0GKtsttNbgQBdW4a6txXS4Fr1H15T3wgAjc/37lYsAAM9
LR98sN+ZdVYfY7UjwQsPc+LudRFIttfMP+QMGUYePLWfHz/fknbfbIcjD7zZ
MfO2MIJA3a6SXgseNJiOQmi8QQRY4RnXFH3peXg+8wp8Cl4VIcBKpvpZJc5H
rrv83dQqEvx9ZFNYKO4nJltSrN0qyPCZKtf7rgGsd4/MHO4n0yB3ymof148E
WK/TbDC0MweIUKIaXAYIoODhKyWqTYLPfk5kNDUSSJ9NQuWgFhlK68laLmA9
eCgQqrmNoMEWGDZNx3rWb2hs5p+SDDacbv7sjfUuRSvM/y07GVquolqswvst
3uBx4sdnGhR8FO3H20eAjxf/VDJ9SXCLCY/0btwfj5fHdHXdJsOg84XRajP/
4xP7BIWEhHG+B0pU86cX3QUqQ98SY3C8muqYfSmXBPmLSCXe2A+dC71Kit1O
hiNRutWF+H1Oe3XZzAdosO+inJL0OAFqtSpq1Apeg7mOTSRdrDdlTWMWXJMk
mKXgyD6K9Yh0fClLw4UM42rHoruxvvV62428I0vA8fbapUysZ0qHVY/KJT0D
hQPbZi7hmDmeTipsIcFUwf3iiljf1F0LLUYMybBfPdy3HD8vufu7B9csDR6J
/vNbBr8vNEs1+ziVDInkXp3a5f/xiPne16tb8Hwyp8E34fSrINp8y+QPHDt3
rJ/4rECGWZ84w7D+obpVLw+p0Emw5qwpUxE/v0Vsv742pwS0M781+QnXN5Fd
cUUNOREgl2+gYyPef63CC4doR8jwlLYduvTf7y/n+6Jv8ZKhQGdAnA9+Hn9+
Y8WomATcUGch7offV6YxuvVE3EPQ4wNV9uH41JFqKdddZGjRsOuMA/58ToCW
W/sCCV5R7r4Zjp83NvDAX1JAAhYYH+F2x+/zc/CtlpckwzD2b8f/+73xCm8Y
V/eTWcDPS4kXeaS7ZghoDHjktT4d+P/FrjynPl12EIQxO2U9TcIH0P83/n8A
LqZtCw==
    "], {{{}, {}, {}, {}, {}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwtzitPQmEcwOHjlSJuBhMCcyYDm5egTZtzDlC/gWjGqYlkMJgU/QpoInll
MxEIJoPBhJfNC1kpogZ8zkZ4zu99/+d9z85obnM13x0EQRdrnS56NLXMDktM
E57roZc++okwazhDxb1rGvyRdGGFY164Mvvgl4T9Mkc8c2k2qFNscEqTd/Mf
4tZZijxxYRbVSdY54Ys383ndDs90frhlNmKd4ZBHzs0WtMANEecGdI8aQ/YT
mqPEJ6/u7Ostw97P6T1J663wm7T5du5Bx8x3NaVVjWos/Ge905imdVwPtM6Z
u//OvzDK
          "]], PolygonBox[CompressedData["
1:eJwl1DVslWEUBuBb3Aak6AAUKBRooRAguDtMJLgzYRVIkAF3SyA4BA9BQpAJ
p8hAgrt7AglSXBb0OWF4+r7n6/3l/nJTRuX0yS6QSCSS6OlPi4KJRHW9r/5H
HmYm/WlHCv387688wiwG0J7R1stwQV/JWGrEtkn/D3BUzGYgHRhjrSwX9VWM
o2bsz1oSx/Q5DKJj7M9aOS7pqxlPrdiftQIc1+cymEnmqtzVt9Ip9m9O5rK+
hoV6Jq/1LKbpqTzRd5EaxzYX5IQ+L/avp/NSH8JkvRr39LWyHdv0pbIJ+fom
2YXOcc6yPDu4Et9DtmEva82LZCN28ca8UXZiP9nm6bI2O3lqXi87sI/d5uWy
OXv4ZN4iu8U2cV1kIU7G/ZGtmB/fS2bwSh/KFL069/XtLNOb8l7vEtdKr8BV
fR2L9ca81XOYodfhmb6HOnGtzIU5pS9gGFPNKTzQd9CVbHNFrsV3I5e0OC9r
RciL+8ZwusXxrFXiur6BCdSN/Vsryum4poygO/ViW+vFOBPnzkh6UJ90MmhA
QzJpFNv7fHHO6ksYFe9LnJ+1ytyIe8XEeF/MaTzX97Ii3is+x7Mou3Mwrpn5
hWzmnXvoJUyTy2SmvCyryN6yibwta8gZMl3myVKyirxPbX2BPE+y3lZep6qe
Kw/xhx+Ot1heoKL/dZVTOUoRc0k5h3OUNjeUI9nOR57bvpeczilK+kxl2YYc
DvKb7/HMyykcobDPlZANGME2PvAs7p9sTfwQHeAX3+J6ywyGs5X3PI3nQ7Yi
i/385Gvc07g2DGML+Tyx/iWeBb0+Q9nMOx5bf8TDeAbjeY/3OH4zuMNtbnEz
7m88Y/Fc0tJ3+QeKVp3e
          "]]}]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwl1HmQznUcB/BnXcM6dt1HS85yzDDj2CuMZBop1zoS/ZNbGk0slcVgMIYo
JGnVMGxyRohQOXbZKGaoTOWPROSIjCu312f88dr3+/v5Pb/n9/y+z2+fBoPf
zBlTIpFIJLHIn4ySicR2uYNv2MkudvMt3/E9e9jLPvbzpzdZSA71uWd2jkJO
WS+iDw24b/YP1/QChtGGFIrM/5If0peGPDA7z3X9c4bTllQOmJ+Wi+lHIx6a
JbmPLfo4nuWC2Q25mhG0ozIHzc/Ij+hP49gMSjh/q8ylMxe97qb8gpGkU8Vr
CuWM6JS13ikn0pVa1ofkHIqd/7dcwsukOXZENqGSvkdOjevrv8okSurbZAs5
PvZVHou9ks/JGrJYtpKz5dPyt7g3ecn1bulraG49StaVR2VrmSGryiLZUs6M
zyJPxJxy+i6ZF9+Zfly+QG39sJzLD65xVn7MAJ6K79DxvXJa7CGlrL+WE+jC
v875X67ldTKpRrLX7ZaT6MaheH7kUl6Je4v94LL5bbmO0WRRncPxTMlPGEjT
uDZXzO/I9bxBduwbP8YzJfMZRDNK85/5T1zQl/Fq7B9luGp+hGyfNYsnPSr1
qEsaT1CH2tSiJjWoTjWq0pH+TGEb9+nrPavIDvRjMlu5Rx/HKsv28TomsYW7
5DiWKkexgGJSzUbwTJxLHl9xh97mKXIkH3CQFLPhcU/6Z/wS92OdS45+mhb6
dCbqm7lNL+tK8goZ+nwK9JM01vPic+jnaKXP4v24j6THvzMH9BXxHgwjy3qj
7EI+F61XyzbM4VPrtbIji/nZeqVMYxy9rdfLziyN3xDrAtmcabxrnS0XsElf
Hs+h7CkryufjGlzW0+U8Vumd5BL+0BvFHsR+6Wdpqc+Me9eLqKgPJVNfxvF4
JqzH0ks/RTN9Ku/oX3KLHtYV4n74nYbxeWNf9HkUUsF6SPw+6/kci2fN+i16
6m/H/nGT7mbl5VDeYz/lzQaTHtdjAhu4wUvmyXIIc9lHstlrtIv3Y3zsL9d5
0bycbBvnkss6rtHNsbIy0//HI40FwYg=
         "]]]}, {}, {}}, {{}, {}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1:eJwV1GWAFVUABeCVLunuJaRLukvSBBUsVFZsBUHSLlABBQtEQQlBOuxCBVvs
7k7s7vjOj2/Pufe9uW/mzswWFk0aPXGPgoKCbf4kR/jzo1zPmexLZ4pRnBKU
pBSl6WGyjBzpuJ/kBqayH10omzV89rPcyDT2pyvjzZdjpz6P4yiXY839Ijcx
nQPoRpH58jyiz2cC5bOeuV/lZmZwIJPN1eUl/Ua6Z33jCjyqX8HxzDJuwlv6
Kirk94x/k1uYyQXGrfhQP4gpej1e1pdmD3IuxnvymH4ls/X2fKafwFl6U97W
F8sB3JLzkN34Vl8mh2adXIP8XS6XW+VVshez9Atla1bzkfESOYiNjMp9k/VZ
xSvG18l+rGeZ8VzZmVv5Kvsj92EzPbMvsiIreNz4GtmHBfoc2YHP9RM5W2/G
O/rqXLvene/0itkv/Y88X9kDLjJuw8f66DwregNe1W+iV/bLuBJP6As5iUqM
MvenvC2/y8H0znmYr8yT2SdOpnLWN/eXvJ1zOIQ+VMmxPvtb3sG5HEpfquZ7
PvtH3sl5jKEf1ahODWpSi9rUoS71qE8DGtKInt6Pxlnfmv/KuzifsfSnMOv7
7D95d541DmNArtt8FZ7Sr+YUmuTYvKjck2eBwxmY6zZXladzzziVplkv7zb3
Zv85gkFZz1w1dunXchrNsp65YtynX8yRTDNuyGv6zQzO+sbVeSbPGJfqHflC
Pz17rjfnXX0NzfPbxsW5X78k6+tt+UQ/iul6I17XF8n+LNfnyS58rS+VQ/LM
5pxlDVbybK5D9mUdi4wvk51Yw5fGN8jBbGJi7r3cK+8i7xlfLweyIe+H8QLZ
g7V8n2dUDssx2RdZggdyf2RvZue6ZDs+1ccxQ2/MG/oK5utd+UYfkr3Sa/Kc
vpjL9b3ZrU/KM6i34H19LS2yV8Yl2a7P4WhmGhfypr6SoeSfey2ez7VxBi1z
XuZK8WDuG8cwLL9nrjYv6EuYTKusb640D2VPOZbhtM6x5svwcM6d8YygDW1p
R3s60JFOOd73y7JDn0sRI3N+5urwYu4VU/K+GLfkA30dC/N/ih/yLMrhbMme
Gf8PbVW/NQ==
         "]]},
       Annotation[#, "Charting`Private`Tag$15259#1"]& ], 
      TagBox[
       {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1:eJwV1HeAj3UcwPHfGZlldaVESEV1mSFpKO0lSYMGaciMjEiyQqKMdlQapEKO
i7vD2XtvCUdl7729Pn+87v19Pr/nd7/n9zzfuzJN29RvnZRIJPr7MZ6/cyQS
A6mQM5F4XEvoEq2sJfRSna4p2l2v0zV6wnsv6J+8zbXmK/Rukq3naV+2Oe+g
jqQplSji9Vnai4LkcTxF3+XB+J3es0kH8QTXcDIu2nkTrNtxD9vNDumPvBrX
HNfLBPN/9BOepCSnzP7lsPVPNKMKl5Fqvlk/pR6lOG32HxPZ4ngwT8X35IzZ
/0wijRqu6y+dzBTSySCTqUxjOlnMYCaz2Op3DaE+pTlrtoPZZDseytOU4ZzZ
To5Y/8xrVKUQc8y36TAaUJbzZrs4av0Lr1ONwsw1366f8Uw8Uy6YJfkeqdbt
qcNus2M6ije4LZ4d8+Je6uc0pBwJcnj/RH2He9njvOM6mjepTlHnzNbesSav
43TtwkMUd7xQP2J+PAP9gmdjH3htqV4fz806Sz+Iz7deq0nktJ6kN2uHuK+6
Mu6V3qdX6HytqP30Rt0Q3033+rwT1r9yk+PmsXd0WewVraHFdI7eqn3iWnRd
zMlnnaFd45lZr9KHucp6kQ5gQewd/ZLnuCGeoddnaI+4h+RynKYdqcs+7zmp
Y3iLmlxOfudl6ns8wsLYP/oVz8d3i/vBfvNT+hstuJ1kFsWe0q95gfLx2Rww
P62/05Jacd9YHHtKv6ERFcjNQfMl7Lb+lsZx/7iEQ+ZLqRX3UZezgpWsYjVr
WMs61rOBjfG/Kf4PsMfvGc6L8VzJw+H4G2ev9Qhe4pbYTxwxP6N/0Io7uJLN
5vv0O14mJZ4ZR83P6lhaUzv2IVvM9+v3vBLPPO55fOf4e9dO3M8x553TcbTh
znjmFHDeVO3Go2x13gH9gSaxBynsnJnaM86Pe+Z4snbmgbhuxwu0P8e9/7yO
py2lvLZc74r9YD1XP4w9Zb1er6ag9bS4N/q+ltXVWk0fi3N0sVbSj2MP6Eat
rtk+7yLe+85P
         "]]},
       Annotation[#, "Charting`Private`Tag$15259#2"]& ]}}], {{{}, {
      GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{0, 0}, {6.414085001079161, -1.28228271801381*^-7}], 
           Offset[{0, 0}, {6.414085001079161, -1.28228271801381*^-7}], 
           Offset[{0., 0.}, {6.476916854150957, -1.28228271801381*^-7}], 
           Offset[{0., 0.}, {6.476916854150957, -1.28228271801381*^-7}], 
           Offset[{0., 0.}, {6.539748707222753, -1.28228271801381*^-7}], 
           Offset[{0, 0}, {6.665976055126499, -5.636481286437229*^-6}], 
           Offset[{5., 1.1102230246251565`*^-15}, {
            6.665976055126499, -5.636481286437229*^-6}], 
           Offset[{10., 2.220446049250313*^-15}, {
            6.665976055126499, -5.636481286437229*^-6}], 
           Offset[{10., 2.220446049250313*^-15}, {
            6.665976055126499, -5.636481286437229*^-6}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{0, 0}, {6.414085001079161, -1.28228271801381*^-7}], 
           Offset[{0, 0}, {6.414085001079161, -1.28228271801381*^-7}], 
           Offset[{0., 0.}, {6.476916854150957, -1.28228271801381*^-7}], 
           Offset[{0., 0.}, {6.476916854150957, -1.28228271801381*^-7}], 
           Offset[{0., 0.}, {6.539748707222753, -1.28228271801381*^-7}], 
           Offset[{0, 0}, {6.665976055126499, -5.636481286437229*^-6}], 
           Offset[{5., 1.1102230246251565`*^-15}, {
            6.665976055126499, -5.636481286437229*^-6}], 
           Offset[{10., 2.220446049250313*^-15}, {
            6.665976055126499, -5.636481286437229*^-6}], 
           Offset[{10., 2.220446049250313*^-15}, {
            6.665976055126499, -5.636481286437229*^-6}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{40., 9.500000000000009}, {
            6.665976055126499, -5.636481286437229*^-6}], 
           Offset[{40., -9.499999999999991}, {
            6.665976055126499, -5.636481286437229*^-6}], 
           Offset[{10.000000000000002`, -9.499999999999998}, {
            6.665976055126499, -5.636481286437229*^-6}], 
           Offset[{9.999999999999998, 9.500000000000002}, {
            6.665976055126499, -5.636481286437229*^-6}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox[
           TagBox[
            RowBox[{"sin", "(", 
             TagBox["x",
              HoldForm], ")"}],
            HoldForm],
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{25., 5.551115123125783*^-15}, \
{6.665976055126499, -5.636481286437229*^-6}], 
         ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}], GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{0, 0}, {6.414085001079161, 0.9999999999999918}], 
           Offset[{0, 0}, {6.414085001079161, 0.9999999999999918}], 
           Offset[{0., 0.}, {6.476916854150957, 0.9999999999999918}], 
           Offset[{0., 0.}, {6.476916854150957, 0.9999999999999918}], 
           Offset[{0., 0.}, {6.539748707222753, 0.9999999999999918}], 
           Offset[{0, 0}, {6.665976055126499, 0.9994617617978893}], 
           Offset[{5., 1.1102230246251565`*^-15}, {6.665976055126499, 
            0.9994617617978893}], 
           Offset[{10., 2.220446049250313*^-15}, {6.665976055126499, 
            0.9994617617978893}], 
           Offset[{10., 2.220446049250313*^-15}, {6.665976055126499, 
            0.9994617617978893}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{0, 0}, {6.414085001079161, 0.9999999999999918}], 
           Offset[{0, 0}, {6.414085001079161, 0.9999999999999918}], 
           Offset[{0., 0.}, {6.476916854150957, 0.9999999999999918}], 
           Offset[{0., 0.}, {6.476916854150957, 0.9999999999999918}], 
           Offset[{0., 0.}, {6.539748707222753, 0.9999999999999918}], 
           Offset[{0, 0}, {6.665976055126499, 0.9994617617978893}], 
           Offset[{5., 1.1102230246251565`*^-15}, {6.665976055126499, 
            0.9994617617978893}], 
           Offset[{10., 2.220446049250313*^-15}, {6.665976055126499, 
            0.9994617617978893}], 
           Offset[{10., 2.220446049250313*^-15}, {6.665976055126499, 
            0.9994617617978893}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{42., 9.500000000000009}, {6.665976055126499, 
            0.9994617617978893}], 
           Offset[{42., -9.499999999999991}, {6.665976055126499, 
            0.9994617617978893}], 
           Offset[{10.000000000000002`, -9.499999999999998}, {
            6.665976055126499, 0.9994617617978893}], 
           Offset[{9.999999999999996, 9.500000000000002}, {6.665976055126499, 
            0.9994617617978893}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox[
           TagBox[
            RowBox[{"cos", "(", 
             TagBox["x",
              HoldForm], ")"}],
            HoldForm],
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{26., 5.773159728050814*^-15}, \
{6.665976055126499, 0.9994617617978893}], 
         ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}]}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->{{All, 60.432294294014184`}, {All, All}},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}, "AxesInFront" -> True},
  PlotRange->
   NCache[{{0, 2 Pi}, {-0.9999998830731719, 0.9999999999999918}}, {{
     0, 6.283185307179586}, {-0.9999998830731719, 0.9999999999999918}}],
  PlotRangeClipping->False,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.08090169943749476]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.809698810435527*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"5ec9693d-0995-4996-9efb-229f29f6b1ab"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Sin", "[", "x", "]"}], ",", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", "x"}], "]"}], ",", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"3", "x"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", " ", "0", ",", " ", 
      RowBox[{"2", "Pi"}]}], "}"}], ",", " ", 
    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", " ", 
    RowBox[{"Filling", "\[Rule]", "Axis"}]}], "]"}], "  "}]], "Input",
 CellChangeTimes->{{3.8096988440995226`*^9, 3.809698853088491*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"b3807065-e1f2-4de5-91ac-320da3ecb4d2"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
Vdg7Nbw/ZS2I+nedexSUsezuoOB+/heLVs3JdSL0Dii2wfsDJCavvp2jYRSM
W/k9vI3/PuG+xjKCGAmvJ3bh2/HnY/Vsf/D7mwIQyW5KWcPHS0h0quUaGgO2
SeKP8/DvP+zj3dL2F+9Hi7i2f/iPH16Zj7s+T4Svn3vNWeHvQ6+2uPldHAPn
aCfWduPXK+oyjxAyWOC28mfqpxcx9MY06FPhKwH4J11BbtsyBlwVzE8mjRDh
4Y8Xqmzw/aVTzFwVh7FA1pIj5UR8Pcrnt7g/OyUAP8b/9S3Df34wLnhRgYME
428ej4rCP6fneTU1FWpzk50Yed76TYK5/+oiGHnenIwL6yGyLYw87/2N/geO
nB5m5HlfCKvKZuB+ip7ndY9XDFPD9Yye59VW7N4gq/i/PK+k4tbN3nifQM/z
ln5frD+xq5OR52U3zxIdHE5j5Hk/Op57J+bYiOh53sm/O6fJDYOInuc1tjK/
WgcpiJ7nvWkun3IX1zt6ntd1c6va5hoaI8+7xyryu3DQGCPPq92WFGrG3MvI
89bYDp/iflLKyPOeF+NtH1arZZxf82ROv86LZ4Bxfo2DLLtwsBiZcX5N0t7G
uNRIjHF+Ta3H01Ppohjj/Jq6IgLhicY44/waEzO+40M8fYzza1K2GcTf7/vJ
OL8mvao/IKXmB+P8GrcvNUrdd/sY59fEL1cc8lgfY5xfo2GTy+GO+2t6nnds
yLi65jHGOL9GOJ5NT+8ymXF+TYa4Q6TN737G+TUy8e9/fNlUxzi/xi6T39nd
toiR573aLmlmLtPDyPMqVxMnIuJGGXnepGfrJWKfaIw8r4s7C9P1AVwv/y/P
6yB59WFrNQXQ87zXzi0F7ZcZAvQ87xvpRzzXhv8Bep53WNyZI/p1CiPP69wZ
F5lX18HI88rzS/UUWo4w8ryfX6QqenH/L89bqLKx67/8Pj3POyQduHU2msrI
89o6Jc2w/z+NnXk4Vd3/sMmR8ZQkxxAZisiQNChqrUYaeRoMGZKkHhGVIRGl
SJIQipQKlYqQCqWVlMzzPM8cZ9ghKYrf7vq2tue/9+2/czmcYZ+z91pX931/
7vVTPO9k/7+aAaiJ4nkZRTWZ5PeB4nldEmylT177Ajp4ld4MmBWCOh+znFNG
XRTf+6FtM1LRHqL43uv6JgeVxQmK7zXTVjTySyUovnfziakzNc9YFN/bn3Wg
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
/3/vTtXRif/8/v/r/v8HvBnbpw==
      "], {{{
         EdgeForm[], 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwl08lvTWEYB+Bza2i7NNXc9qJatLQNCRGpqmpZSkrNdGW8RWJYmOcpIYYa
IoZGqo2InXlcmtkYFoYECULCP4DnjcWT9/e+937f+c4596abmqdnspIkSfGJ
SnJzkiSbfnJ/BjCQfAoopMGCP+pVNjOTKtLM8Nlf9RpbaGQii8278VA+zFIG
xdrU/wNcV7Yyi2qWmHXnkXyEZQyO/cxS3JC3MZtJsZ9ZDx7LR1nOkNjPLIub
8nbmsEafzyv5LDWxv74nT+Rj7JbL+SqvYINcxDu5jaK4tr4Tt+Qdsb9cymd5
LmvlAl7LLWoV5+T96mh+yKfVWibHmdVetPI07kOdQAct+j1qBW18059Sa7hM
Rr9RHcoF3utPqNVc4qL+oDqWdn7pz6h1sSaei9qZ2/F+1PHsjPtSy/giz2Od
XMgb+TwH5DH8lGvjWcl5PJOPs1eu5LvczCa5mA9yO8XxrPRduCPvYj7r9Wne
yq1MIaPvzfO4N1ZSEucy68rdeG8soC6uZ9aHF/JJVjEs9jfL5l48UxZSz/BY
a57D/Tg7i5jKCEopYySjKKci1vt+Lg/kfTQxLc5n1peX8a5YHf8XfQkf5Q4O
yeP4Hb9FtZ4r/ANZoGR6
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwt08lLVWEYB+DTpObcnGWLho0FtbC0rCRCAtNSb8M+tWlTlDZaUUEtKiuR
kLAiKRGax3+geRmZm2xTQS6CgiYboeeFFg+/3/ud+917znc5U+u3prYMTZJk
CM//Z0ZGkqRToE9kAuMZx1jGUM5aDnCfv6y2ebRczBr2c48/rHJtlFwUn2Mf
d/lNyrV8uZk2npFvbSMLYy8t3OEXddbz5CZO85Q8axso0y/QxxRzMyn9HbP0
w+zVb/OTWnOu/ESpfpJu/TUz9Ja4D32AOfpRTsVzyHae6F3xHaxngfmGrKCT
D+YeWcwxzpuvyHLO8NJ8SRbSRJ35mlzKWd6au+VMDrHHXCbbuKVflD9kjcyR
y+I3+KiXyFYu60tkB/369DiDOC/9PbP1I/Hs+mNy9Ebm6+foZbJ5O7X6G4r0
g+zWbzLISnN2PA+vmBb3G+eit/KIbHMDpXonL5hk3kaNvivOj++ssJYlGznB
Q7Ks1VMSv8dOrvONauuZsoHjPCDT2jrmxfexI86Xr1RZHynnxl6aucoXlrvm
FUjSSWMEwxlGvC/FsZ+m+D/5TKU9/wADg108
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwV0LlPVFEAhfHLkjBTsQoFNsaIgpAoINhoYUxQkICIUNgAJiY2gBsk0EGH
mmilYmGjhQEcwVrZ1UZB/QdABTUqIi4JS8HvFV/O+c69783k7WrraGhPDiEk
IYGUWAjJeG54EZESwh4MuVSHdHy3L9iq8IZfwkGM28dtBRjm9cjAD/ui7QTe
8ssoxYR9wrYXI/w0MrHOW7CsD+Cnex/5SczxKyjDpH3Stg9PeAOysMFb8UW/
jhX3PvFqzPOryE8NoY/HUM7TeLv+Vz+iP9Tv6oX6LT0XU94zJQuRcHbA2R39
jJ6t9+jNqdFHDOGYfCwvyGznm3pbdJd/5YflA35e3uC75QA/JzOibyUT8qL8
5Xc/6zWo5+/cL5f3+TV9p96vx3FcH5KH7DG9Q/+nH9Uf6ff0Iv22nodp756W
RXjqrBE5znt5EnL4VvQ/8U2/iVXPLPFTeM+7UIG45zpt//VBzLg3w/djlJ/F
Dvy2L9tq8YF3oxKz9llbMcZ4E3KxZn8ZYS/BM1sz8vDH/gqvsQ3mEFnW
            "]], 
           PolygonBox[CompressedData["
1:eJwV0stTDVAAx/Fz62YsRMNCkwWhaMHCorceopWmGeNtxpDSDaNNtCuvsmGB
LCxCbZppphVb5LVHIr37A3p4rCJ8zuI7v+/vd86tU3NzG1oPXU4LISQwjDmy
anUISYzyL/iKD+khFOGFy2eRixX7vO0wxvUOVGDM/tFWjJd6A7bir33BdgQT
eicq8c3+yVaCV/o5bIuPSobQbJvn9/DPvUX9KCb1a6hCpntttmX+GOPujeil
GNYbsdGdDj2J7XpCT/EFXsr7+H2ex+/w9Qj6kjyGKV7orJdf55t5Nz8h18ha
OSRTstr5Wnkl/q3yd3ynHNAb5RN9l+zRT8sceVA+kxflhPd/5mWo11+7v0c+
0s/IJj1bduoZqOGDMs+exlv4Ii/j/fwBz+d3+QYk9O/yOKb5DWxxflvPxD59
nX6V/+FPMelNo3o53ujn489EunsXbEu8J/5+/Ij/F8zwm6jBVPwu2fbird6M
HfHz+Gk7iVl+C/sxHb93tgq801PYiSRmnM1izFkl3ttaUIAM/LKdwhzvwgFk
eWe7bYX3Ybf+UN+EOv5cXpL/AZIuYJg=
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwV0btLlmEAhvEnPwdRl4ZEK7XATcksjdTEqSECz4OWWoklNBTp4nHLSaio
JajAIZwaIiot3dXK8lTmX5CnMY+V+XuGi/u+7ud5v8/v9WTb3bo7SSGEQ3iJ
REoIyVg0LOAvTrhwHRM4lwjhG+btf5Bru4ZxlNi/Ys5ewQewjHrbBvbsObwV
H1Fsm8Gs/QXfRRdPTw7hgt6Pn6izrWPXvUd8A7f4f2TrCTmADM+18A84y7/E
v9Uzb+RlZ1nyCQr05+6M6JX6jt4gO3maLOcd8hW/KNNkoxyUObLP+Y34GbxE
LvFaWcvXsOM7b/PX+iV5WDbLIZknH7o/rJfq6/pNfR/H9STZjyPOmvlTvUgf
08/on+M79vmZ8jHynT1zto17PJWX6an6/fh+eC//gRq+im3PP+BraOf/cEy/
ilEU8U/xf+NeKe/Bd1TbVrBlP8qv4D1O26bj+7af591YRJXtFzbtWbwJ71Bo
m4q/xf47/hZbI97ilH0yfr99GgfQyFcr
            "]], 
           PolygonBox[CompressedData["
1:eJwV0rtPVEEYhvEBYVkQJRApNKIsmkBAwcSCxkJURFEsKCiMQEJCo1wspYMG
oZEKTSgsvABSEMU7YCve/gERIeEiaqdGoRJ+Uzx53+ebOWdzZjbV1t3YlR5C
SMMUHiuZyRDSMavPYBo/sdvGS5jA4R0hvMFr82P8Oj7hrNkSfpjv4g14hENm
s3hlXsW78RG1Zov4bj7I19DKN5GrX8Q4SvgMXtpXKIdQlhHCHWt/0MkTvFLP
0vuwj8ePG9GP6x/0M/pXrHvPpKwzz5OX5aAskQP2tcm7vFqu8kbZwjewk7fz
cb1GbvEm2cML5IX4DfI2r5Jj8dxkik/jhd9+IuvN9shmeUuWxmfsva+f0H/r
HXqmflRP6L3Yyzv5e5zmC/gW70cOIGX9prUVNPN/yNH/44aeb71eH0VxvEM8
9/ww/4VrPMOeI/H38Q6nzL5gzb5+vowr/C+y9fN4iIPxjvHMvor4Lsyhxmwe
q+ZJfg4PcCDeKZ6al/OreIuTZp+xYp7F6+K5oCieH6biGWIZifi/wz3sj9+C
bT4cWLs=
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwV0DtP02EYhvG3BqQITvoBkIPABh4GUeEDIGKqfoEClsXiZBF1qQqjCQtt
URMnraepTk7FQgIDIanFQxwMKJMODBoMFfx1uHLf9/W8/6E9Fp+IJQ+EECKY
RbUhhF3crAuhQZ45GEKmPoRWlLln6OHjfJEbRJVLIcr38VmuDR+4GHef27Sv
4znXy41wC/YF/OMm0cif5XNcOyrcZe4B991OIs+d4Ea59/YQ0nbBPoI994Sd
1XfcCvqWntbn9GW9C8u13ylveX9IP6evynnvnsqy3aGn9Lz+VUblO/lLbst1
316R03ZF/vD+jfxm/5QT9kNZtDdkiyzJP/K3fOH7k3LMXpOl2v8jv9gX9Xv6
W/0o9r0dt3P639oNGXvF7saUe5N9Xn/kdhwfuavcDLdl38BL7hR3jVu0hxFw
m2/m+/nHdic+ca9wmk/wS9wlRHCHP8wP8E/sLnzmXuMu/gN+eFMF
            "]], 
           PolygonBox[CompressedData["
1:eJwV0TtMk1EAhuGj8YICIwIyyayJXHQSgUlRXFjk4sQKtlyUQXdAaAcGJkEH
EhGEhEUFCYkJCVvLJSE4mBjLLaiJiQ44aONzhjff973n/Gn/9lJnsiVxMoRw
AuPInw3hHwZPhVAib50J4dXpEK7iK/cWN/gEn+HuowBD/AX+Nj9tVyHHvUMd
n+SzXCvOYZgv5Zv413Y1drk2bpT7Zj/Ce+4m18Ot220YtBftUpy3u+xJ/W88
w3M7Y1/GM8+X2Xf0GWdT+rZeoz/R5/RCrOg/5Z777XpK35Hf3VuQOfuxPqav
xnuyUq7JP/I4fifP1stee0tuuD8rP8f3ke3xd5JL9hdZJj/KX/K3LHTeLV/Y
n+L/EN9fHtlD+oSe1a9gxGeV23f1WWe1eGrP20XYd95hp/UfzgawxDVwfdym
3YEiPORecvn4v2DUvYtcM/fGvoYD7gMa+f74ftwDFCPFV/D3+Dn7Og65ZaTx
HyZiVbs=
            "]], 
           PolygonBox[CompressedData["
1:eJwV0DtLlnEcxvF/ptWWQweDHKK0bMlXYKUGlrkEmqfBQ2WTYjnl6QVoBaVZ
WTqUDeFQouYBHTpoWmBNYZogCCIOaj4FCVafe/hyXdf3d988hyMVNZeq40II
O/ASXfH6nhD+7Q7hgX5U5u8KoT8hhAysce/QgWNuBW4D/Gmsc++Rw9/iZ7lK
7MNDPoW/zA/aZ7DBlXH3uA27Hh+481w9992+gv2o5Z5xcWi1H3kulSu039hn
0WS/svfip3u5fT/qbg1osyfsFEy4X7Ab9Dm3Xn1Bv6q36GP6ojws38qYPOB2
Q38efTe5Uw7LVbkmb7t3yS/2sjwlP8lt+Uc+9pnHZZE9I4c83yO/2Ssy026W
r+0FmSjH5brc9G6F3hZ1z/XpS3qj3q5P6qmY9Fyu3ajPu11Dqz1uJ+OgfdPu
0eNxx+70zgmuOPo9dhZiXCXXzsWi/xYfuYtcE/fDrkISnvBpfAk/YmfjFzeF
pzjpVuo2yp/Db24aeXxz9Fu56ziEOu4Fl4C7drf9VU/HZ/2v3JL/AdG5Y90=

            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwV0D1ME2EAxvEXaCEyKJ/ujKLgJiKLgLhbtTg72YoYcMEF/IAEmIybSoJW
GcDEoiAsJCQmxI92MTEM1ArGQRggwUESwYTfDf88z/N/7y5313D9dqK3NIRQ
gsc4qAjhP0ZiIcxjA6fjIUzhYnkIdc6GuQo7iTxu8W38HL+OZu4Vuvha/iFX
bl9FDj38Of4df8fewjh3jfvBVeqvcdducvYSF+wa+4Hzk3oeT6P3dLapL+j7
+oSe1uP6rr6sH5eLGNGv8AV9Wv+if5U37Vb51rP/yj17RTbIX/KDfCT7Xb8t
f9pZuWmvyjG7Wxbd/0fu2EvyiCzKGTkgT7n+m57RM3qnXq3fd1+jnsOT6P86
+62/1//pz/SUHtPro2/FsH3Z/oy0fdae9Zy+6F6Mcknue/S/7Bfo4Kq4e1yZ
ncAnpPgWPssXonfhnqOdP8YPcaX2JXzEDf4M/4ZfwwluEuf5o/wgdwiNn1FQ

            "]], 
           PolygonBox[CompressedData["
1:eJwV0LtPk3EchfEfBnUSFScuIigzK4q4IMomUBwt1f4BxUFtIbrbmnCViZiI
YSO0FBaC9YKRkLg4oFUHExITo9RWE11IjPjp8OSc83zfN83btvhIJHEghFCD
Ofw7HMI+ZmtDeIUKLhwMYRVXD4Vw2u0hd8KO4yNG+T5+gx+zf2GKi3Flrtte
wRDXxs1wD+wa+wlucvV2k15Axr5hf0DKvmy/9E67vokZe9TtJybtYfuHe52e
wz37vFtRX9DzekRv1ac991d/o3fIr/KtfCQznqvIXXtNBvlJzssRedz9j/xt
b8hGuSOfyrS87l6Sn+1FWbS3ZdK+JF/47T19Sz8jX2NaT3nui57XK/qEHtVL
nj+iZ3HX7nJbxqB9yp5yT9v7eMwluGN6g76O+3bMfo87dq/93DtJu4xx7lr1
e7lzdg4DXAs3yR21h/EOt/mL/DP+O85yWfTzJ/mJ6v9vR6vfjFt8D1/gv6GT
W8IVvpkf5/4DNCVZWA==
            "]], 
           PolygonBox[CompressedData["
1:eJwV0btPU3EchvEflRZXGRFBJgYUAnjhLwBkQGT3RpBEkIsIrrYwQ0ABHUws
qNWFBTbDLXEhQUAbBwmDSkLi4OBSC3aQzxke3vd9vuckzaGqa7BzIBZCKMJL
9Bf7czqEQkkIo3oGWVTFQ3iOpkQICbcR7i2+4Dw/h6tucbdHXAFt3Abu8nX8
G+6BfYBx7gb3mau0Z3GFK+aGuZSdxwuuh/vHlerLSNnX3Pb0d/q6fkev1V97
Lqd/1CvlBib1Ps981xf1n/pXOWZ3yF3v/JG/7Q+yRO7L9/KxrPD8L5m103LG
3paX7VPyofePot9ob8pqeSg35ZxMev4w+u363+g76vf0Y++d0ZeQtFvdvukZ
fU2/rV/UFzxXoa9jwu51+4GUfd3ecU9E3wKj9jm3Z7hkx+wh9yd2Lvo/cd3c
Eddir+IWd4Gb5+5H3wlJrp3b5srtp2jkirhBLo9mbgU3+Ro+zX3CWW4aDXzg
B7hX2EIZP4V6t/84AerHVww=
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1GWAFVUABeCV7u5eQrokpUPSBLtlVSxCUMouUAEFC0RBCUG67O4EsRPs
Tuyu7/z49px735v7Zu7MbGHRxNET9igoKNjsT3KEPz/KtZzFvnShGMUpQUlK
UZoyjHTMT3IdZ7MfXSmb4332s1zPFPanG2PMl+NxfQ4nUi7HmvtFbmAqB9Cd
IvPleUKfy0mUz3rmfpUbmcaBTDJXj1f0m+mR9Y0r8KR+FSczw7gp7+grqJDf
M/5NbmI6Fxm35kP9ICbr9XlVX0zPnItxRZ7Sr2am3oHP9LGcozdjp75QDuC2
nIfsznf6Ejk06+Qa5O9yqdwsr5G9mKFfLNuwko+MF8lBrGdU7plswApeM75B
9mMtS4xnyy7cztfZH7kPG9k7+yIrsYynja+TfZinz5Id+Vw/hXP15uzSV+ba
9R7s1itlv/Q/5JbsAZcYt+VjfXSeFb0hr+u30Cv7ZVyZZ/T5nEplRpn7U27N
73IwvXMe5qvwbPaJ06iS9c39Je/gPA6hD1VzrM/+lndyPofSl2r5ns/+kXdx
AYfRj+rUoCa1qE0d6uY98BLUk/VpQEMa0ZgmWd+a/8q7uZDD6U9h1vfZf/Ke
PGscwYBct/mqPKdfy+k0zbF5Sbk3zwJHMjDXba4az+eecQbNsl7ea+7L/nMU
g7Keueps069nHM2znrli3K9fytFMMW7EG/qtDM76xjXYnmeMy/VOfKGPz57r
LXhXX0WL/LZxcR7QL8v6ejs+0Y9hqt6YN/UFsj9L9TmyK9/oi+WQPLM5Z1mT
5byQ65B9WcMC4ytkZ1bxpfFNcjAbmJB7L/fMu8h7xjfKgazL+2E8T/ZkNd/n
GZXDckz2RZbgwdwf2ZuZuS7Znk/1Y5mmN+EtfRlz9W58qw/JXum12KEv5Ep9
L77SJ+YZ1Fvyvr6altkr45I8pM/iOKYbF/K2vpyh5B97bV7MtXEmrXJe5krx
cO4bxzMsv2euDi/pi5hE66xvrjSPZE85geG0ybHmy/Bozp0xjKAt7WhPBzrS
ic453vfL8pg+myJG5vzM1eXl3Csm530xbsUH+hrm5/8UP+RZlMPZlD0z/h8x
6b7M
           "]]}, Annotation[#, "Charting`Private`Tag$16067#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1nfcjlUcx/Gb5xGRUUSKZGWmklHISPaWVGREZZOWKLNoyCgjO7vSMrM3
oQjZO6vskdFCvX+v/vi8vuOc+7qv+7rOOc+Tu1WXhp1TJBKJFSkTiZnMvKRE
Igcmy1VxE47oZ2E2vjOWE1P01ZAaR/V7dBXxvdwehTFHP193N6bK1ZEGx/R7
dZWwTu6AIpirX6DLhWlyDdyMK/KzOMIPwHHz9smPYb3cEUWRnOxauov8CMwz
b6F8D6bLNXGrOW/IN/i0uMo3w1H+XeQ2/p6cAb/6/H5aGRuMdUJ2433km3Cf
nEruyP/Ol+On8CP5AvzguDbNQmvSWfQ711xEc6Ou7jNz76cj5Ra0lnwb7S43
pv/Klejn8gs0nfwH3xwN5WNyaTpBbhX3Lueh78tNaEZajX5Df/PdB+jj+MG8
h/Rj+M78nXxfPjWKxXuXO/GX+E9QUB4i3475rrOY5sHnxmrjFvwZvwHH+fdx
wryDchX8KHeJ34oF+iW6vPhCroP0OKk/pKuKjfJLeAAL9Ut1+TBDrosMOBXP
Mu4lroeUacyjywJz8+NL8+ohI07rf4nngU1yVzyI5frlunvxlVwfmXBGf1hX
HT/JL6M4VuhX6Arga7lBrCv8JbeMdcN/gLPmHZFrYLP8SjxzrNSv1BXEN3LD
eOf4W34u3hM/EOfMOxprB1vkV3GX99BPToMSsf/kzvxl/lF+Kj+KL8QP5bNi
leusooXwbTxTY5/wT/CZ+R78UzQRe4p+QV+kmY3/E+sq5son5Ifpp3Jr+qGc
l34gN6WZ4lnRb2k7et73HuNrob681fwSdKz8Gp+Df5u/OdYk/yUtGWcE34W/
wpfnp/Gj40zhP+KzYbVrr6aFMdNYI2Qx/qacAlnka3GfOMkPwgWfOS7Xxs/y
6ygVZ4zPvaS7yo/BGvPWyEUwS34St+Oi/lddHWyTu8Xew1r9Wl1RzJYbIyt+
138fxFmBObqnkA2X9OuwHknW7Qb6Q3Sx/zDXnKdxBy7rf4y5+vsxT/dMnEVx
Nup/i7ME2+U34h1ho36D7oE4c+QmscfjvNOf0NXDDrk7HsGm+H7dg7G/5aax
1nBdfh6n+MFx9ph3Mt4ndso9kNPze0dOizJxrspd+T/4sSgifyzfEfsofgst
jgWx/4yN4p+NZ8y/xadEDvlGnHk4HfdobCI/hM/HD4zP0Ftjf9GZtD390/VP
8Q0CeZf5Jem42FuxPuS7aX/56ThP43yiX9E2tKzxdPRluVFcT65Ap8vj+KL8
MD57rGt+duxt37mRPoSF5jSL92+sp5yEnPK/sadwhh8aZ4XPnJYbYrf8FsrF
Oepzr+j+4sdji3mbYq9jkdw87j/OCv2Z2JfYI/eM/Y+t+p9iH2Gx3AK5Yh/r
f8ZmfSks0bXEPbFP9NuwHcnW4g66E7uwxdzSWGrec8gda0J/Np4P9sq9Yp9i
t36r7mEsk1shT7xH/Tndk9gn945nij1xT7pHsFxuHecJEp5BG91Z/qN4duad
lxtjv9wHFZHevFd1f/MTsDd+R6zBpP//n3k+9po5veRk5JNTyG35c3wZfhL/
MZ8/zjP+NiTirIgzEQfijDA2nu8bz5IfwD9Db6FV6de0La1kPAN9LX4r/Sfu
M/7Gxx6Kc1O+jw6Xm9M74yyic2gHui/eAV829qe80vzidLTckr4Q5wHtLadC
ZX4Gza9Pybfjz/Nl+cn8MP5efhCfOc7FOMNi3eMg3y/ev/F35fR4TM4ov85f
4ydiv3vaIZfDKvnFuCaSzGuvu8APj++P8y6eCw7xb6MyDsRa0j2K1XIbFIjP
xxmoa4Jf+HfwOA7GutOVxxq5LQoiGYfi7zd2G6uAtbp2KIRUcU7qmuIw3x9V
kMl9dtNd5yehmDxCvgt1+Lm0Iz3suv8BltdjAA==
           "]]}, Annotation[#, "Charting`Private`Tag$16067#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1nf8jWUcxvFjK8kuZWWH7MhWKHtkS9miFMlWoiIZZc/svWUXUVYpyq6s
rEQTFRGN9/eP63Vd1+d7P7/jnOe570fuDj0ad0+SSCQmJEskXkyeSPyXMpEo
SWNTJBL3015sNnWnRKpEopTZODwb7cPmUBH8Gfwj7An6C+tBSfDS+HgsO32J
NcCGYKf152gu9hDWBtuq16QbWCdsMnZNH0wvYUmxh7EJeg7qoy/WU9JX5g31
1+UzZs/TO/rHek6aZ15UbytvM1skfyvXkofIa+UMdNO6zvoU+brZOvmCPESe
LO+RL/CCfA//m9/gPV2XjJfRv+QTrZ/DD+mXeE69L1+in+Cp+Gb+C7/C97u+
EX9DP8LPWr+Sn9a7ye/Kn8i5aKd8jc93TTG5nfyxNYvlY3Jt+XV5nZyR/rbu
WX2q/FfM6GUsOVYWm6TnogPYk9ib2Dn9BVqAFcfaY5/odegW1otS4I/gk7EH
6CC2kHpTSrNyZlPw3HQIW0R96JZZX56Kl7dmqnkeOowtphJ4B3w7VpduY/0o
NV4Bn4blpSNYY2wodl5/kZZgJbGO2A69Hv2D9ac78Ir4dCwfHcWaYMOw7/Xu
tBQrhXWK31mvT2/o6/VM9K95F31a3Hez9fIP8hvyFPlz+UH6XL7FB1h/p1wp
nlH+Xjzz/LCeX+4nL5VP8tR8C/+VX+Vfu7Ypf0s/Gs+h9av4Gf0X3kMfw7fH
/eIP8F38euwbvsz1pXln/QDfFb8PP643kN+UN8iZ6T9ru+rTYw/EjKbqX+iF
aKB5Gr2yPMOsAH2DNcOGYz/EHqXl2MPYs9huvSEl6BX8LrwKPlMvSN9iK6gM
3gX/FGtESehVPC1eFZ+lP0jHsJU0iG6bvcbv5o9aM9u8EB3HVlFZvCv+GfYk
JY1zBE+HP4bP0QvTCWw1PYI/F3saa0zJ4lzA0+PV8Ll6ETqJNcfexi7qPel9
rBz2fNx3vQkN1TfqWSh5nHVx72Mvyhvki/JQeZq8Vy5Mr/s7GfTqcV6ZzZOP
yA/J/eN+yqf4HXHW8t/47/yU61rwEfrX/JL1q+MM0X/lL+tj+Y7YJzx33Bv+
V5xxfI3ry/Nu+sG457EP+Am9qTxM3iTfE+eMfJWniDNWniHfkjfG58rD5Ony
PrlI7At/O6NeI84rs6I0QF+u30nfmbfUR8o/mvWitVgF7AVsr96MUsYziWfC
H8cX6MXoNLaOKuIv4vuw5pQq7gGeGX8CX6gXpzPYehpG/8Te4ll4TWsWmZeg
s9gGqoR3j/Mca0GpaTh+D14LX6yXpHPYRqocezL2OdaS7qC38Xvx2vgSvRSd
x1pho7Cf9N60CauCvYTt11vRW/oH+r3xW+nd9Jny7ZjRe/qX8XzQCNdn1evI
S83my0fl0vJAeYWchrbKl+O8s/4pebT8Df85nmN+Tu8jj5N3xjqeJ/YmvxHv
j/g3ubZqvPP0Q/yA9cv4yfg+/Kn4nfiH+mmeNd4d/Hf+B08T7xY+S/+W/xPf
n/+oD5dnyF/JRWmkz7pPrysvM3s4zhJ9pX4XXTBvrb8TZ6JZX/oQezSe+3ie
9dZ0V7wfsNlxhsd9oVHW3Y/Vw5brZegHbDM9hveK74c9TWlpNJ4Nr4+v0MvS
RWwLvUP/mr3Ls/MG1qw0f4QuYR9RNbw3fhh7hu6O8xvPgTfEV+nl6EdsK1XH
++BHsDaULvYxnhNvhK/Wy9NP2NPx2bHf451C27AaWN94d+ht4zvrm/X7KL3e
XZ8TZ788Iu65a3JhT2Lv6xXiHNZX6WnpZ/Nn9DHyb2Zr5PNyf3l8vF/kvHHm
yjfjrLD+cblffOd4n8X7Ic6r+Fu8XXwu36Kf4ffz7fwP/ifPYN6Dz9WP8QT/
gP8Unx9nhvlMvj/eP7wY/4Lf5uN99gNyY3mNdQvi8+WK8iB5tXx3PDPWtdHH
ypfjbKIJ+m49Xzy35k/o/WOfmLWnkfpHejbKqL+kz5OT0Ki43jW5sSb6Wr0S
/Yq1xcZhV2JP0nasJjYg9oHegTLRRDwP3hRfp1em37AdNCn+j242meflzaxZ
b16FLmM7aQrlM2tutgGvSlewXVQLHxi/J9aRMtNUPD/eAt+oP0pXsXbYeOxq
7DnajdXGXsGO650oC/XE5mNJaXS806wrgLXUN+mP0Wv6+3q6eGeZt9cnRI5n
LL6z/qmeP84a8zr6q/IJsxXyd3Ln2LPyVvksz8538D/j3WT2srwg/m08Gf8w
zrW4r3E+mM+Ks0q/yIvHuyXOHn6TT/eZBXmrOH/jjLN+If8m3ku8mj6Yr4l3
Fk/Pt/Ercaa5toM8MXK8v+Tv5UHyJPkzuUDsC+vq6oPkk2bPxpmib9NzxDmv
99IXysnp3TjjXfNgnKnxffTq9CfWEZsU+yR+W9qD1cNew07pXShrnKV4Ibw1
vlmvQdewz2kmFTZ72mwL/jhdx76g+vjg+K5YV7ov3lPYIiwFjdFn6wflErRP
/pf/Hee66/8H41z9pw==
           "]]}, Annotation[#, "Charting`Private`Tag$16067#3"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotRange -> 
     NCache[{{0, 2 Pi}, {-0.9999998592131705, 0.9999998782112116}}, {{
        0, 6.283185307179586}, {-0.9999998592131705, 0.9999998782112116}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       TagBox[
        FrameBox[
         StyleBox["1", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["2", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["3", Smaller, StripOnInput -> False]], "Placeholder"]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.809698854426444*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"404a9183-2b41-4bbf-b8bc-15a14900136c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Notice that MM routines begin with capital letters. Therefore, it is best if \
your variables and routines do not start with a capital letter.\
\>", "Subtitle",
 CellChangeTimes->{{3.80970086306769*^9, 
  3.8097009124224606`*^9}},ExpressionUUID->"d8801bbb-90b6-4dd1-a9e8-\
e1bc699e97bd"],

Cell[TextData[{
 StyleBox["Manipulating:",
  FontWeight->"Bold"],
 "\nThis next section we will take a look at the \
\[OpenCurlyDoubleQuote]Manipulate Function\[CloseCurlyDoubleQuote] Notice \
that it takes in a function and (a) variable(s) with a range.\nFormat is as \
follows :\nManipulate(Function name)[(open bracket) Plot[Sin[x * c(The \
variable that allows manipulation)], {x, 0, 2Pi}](What your manipulating), \
{c, 0, 2Pi}(The manipulator handle range)] You can also add  multiple handles \
and adding addition al variables to the formula and ranges for those \
variables and you can see maniplator names and default values. You do this \
when you define the variable. Here is and example {{c,  1, \
\[OpenCurlyDoubleQuote]My Multiplier\[CloseCurlyDoubleQuote]}, 0, 2Pi} notice \
it is very similar to {c, 0, 2Pi} but we define the \[OpenCurlyDoubleQuote]c\
\[CloseCurlyDoubleQuote] input {c, 1, 2Pi} instead of just \
\[OpenCurlyDoubleQuote]c\[CloseCurlyDoubleQuote]. Here is and example of this \
below followed by another couple of fun interactive plots.\n"
}], "Subtitle",
 CellChangeTimes->{{3.809700981930321*^9, 3.809701047582196*^9}, {
   3.80970176841964*^9, 3.8097022325243497`*^9}, 3.809702465682311*^9, {
   3.809704983573471*^9, 
   3.8097049909184895`*^9}},ExpressionUUID->"a3d2bdf0-16b5-4804-9de4-\
4bc70e32d78e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"x", "*", "c"}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", "0", ",", " ", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", " ", 
     RowBox[{"Filling", "\[Rule]", "Bottom"}]}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"c", ",", " ", "1", ",", " ", "\"\<My Multiplier\>\""}], "}"}], 
     ",", " ", "0", ",", " ", 
     RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8097022379298253`*^9, 3.8097023054686966`*^9}, {
  3.809702369271559*^9, 3.809702399077948*^9}, {3.8097024393594303`*^9, 
  3.80970244295042*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"eb4c0ebb-4584-499e-b77a-fdf565b7eb64"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`c$$ = 6.283185307179586, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`c$$], 1, "My Multiplier"}, 0, 2 Pi}}, 
    Typeset`size$$ = {360., {104., 109.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`c$$ = 1}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[
        Sin[$CellContext`x $CellContext`c$$], {$CellContext`x, 0, 2 Pi}, 
        Filling -> Bottom], 
      "Specifications" :> {{{$CellContext`c$$, 1, "My Multiplier"}, 0, 2 Pi}},
       "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{411., {151., 157.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.8097024022037115`*^9, 3.809702444397953*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"ffb62a07-9971-4b3f-9f0d-e56786c39285"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"c", "*", "x"}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}]}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"c", ",", " ", "0", ",", " ", 
     RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8097010632311554`*^9, 3.8097011918939133`*^9}, {
  3.8097012354098263`*^9, 3.809701240365782*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"0c258070-7451-48ed-a12d-214e43f6c681"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`c$$ = 3.8453094079939065`, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`c$$], 0, 2 Pi}}, Typeset`size$$ = {
    360., {104., 109.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`c$$ = 0}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[
        Sin[$CellContext`c$$ $CellContext`x], {$CellContext`x, 0, 2 Pi}], 
      "Specifications" :> {{$CellContext`c$$, 0, 2 Pi}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{411., {151., 157.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.809701193949895*^9, 3.8097012422732754`*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"f1affb8b-bc50-4247-aed5-9f125d817d07"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"x", "*", "c"}], "]"}], ",", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", "x", "*", "c"}], "]"}], ",", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"3", "x", "*", "c"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", "0", ",", " ", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", " ", 
     RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", " ", 
     RowBox[{"Filling", "\[Rule]", "Axis"}]}], "]"}], "  ", ",", " ", 
   RowBox[{"{", 
    RowBox[{"c", ",", " ", "0", ",", " ", 
     RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8097013351846204`*^9, 3.809701352782591*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"57876610-85e3-44b4-a893-f2f4ea4dcdf7"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`c$$ = 1.2566370614359172`, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`c$$], 0, 2 Pi}}, Typeset`size$$ = {
    417., {104., 109.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`c$$ = 0}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[{
         Sin[$CellContext`x $CellContext`c$$], 
         Sin[2 $CellContext`x $CellContext`c$$], 
         Sin[3 $CellContext`x $CellContext`c$$]}, {$CellContext`x, 0, 2 Pi}, 
        PlotLegends -> Automatic, Filling -> Axis], 
      "Specifications" :> {{$CellContext`c$$, 0, 2 Pi}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{468., {151., 157.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.809701357800841*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"437cb73f-4bd1-4b0b-8593-508e6e630ffe"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
The \[OpenCurlyDoubleQuote]Manipulate\[CloseCurlyDoubleQuote] function needs  \
Dynamic Updating Enabled. This setting is in the Evaluation menu. The default \
is enabled, but if MM gets hung-up, it might ask you if you want to disable \
it or wait. I recommend disable and then enable. This is good for security.\
\>", "Subtitle",
 CellChangeTimes->{{3.809701403950483*^9, 3.809701450038593*^9}, {
  3.809701653700987*^9, 
  3.809701722667842*^9}},ExpressionUUID->"f0380076-e215-4000-98df-\
5f51f517ae8b"],

Cell["\<\
Keep in mind that MM is very picky about notation; case matters, the type of \
bracket (square, curly, or round), etc. Variables are colored differently \
than pre-defined functions.\
\>", "Subtitle",
 CellChangeTimes->{{3.80970249589901*^9, 
  3.8097025657791786`*^9}},ExpressionUUID->"ed0f72cf-3377-4ffd-8a4c-\
09e6408f2356"],

Cell["\<\
Also Remember that the Help pages are notebooks too. This means that you can \
copy the commands from the Help pages directly into your notebook and they \
will work.\
\>", "Subtitle",
 CellChangeTimes->{{3.809702572330104*^9, 
  3.8097026596829853`*^9}},ExpressionUUID->"e722aef4-5d95-4b58-ba4e-\
fc9a3fa41a32"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Sqrt", "[", "81", "]"}], " ", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"is", " ", "not", " ", "the", " ", "same", " ", "as"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sqrt", "[", "81", "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "MM", "  ", "does", " ", "not", " ", "know", " ", "what", " ", "this", " ",
     "is", " ", "and", " ", "will", " ", "simply", " ", "output", " ", "this",
     " ", "as", " ", "text"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"variable1", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"variable2", " ", "=", " ", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"variable3", " ", "=", " ", 
    RowBox[{"variable1", " ", "+", " ", "variable2"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "See", " ", "how", " ", "confusing", " ", "the", " ", "output", " ", 
    "gets", " ", "when", " ", "there", " ", 
    RowBox[{"isn", "'"}], "t", " ", "any", " ", "text", " ", "with", " ", 
    "the", " ", 
    RowBox[{"ouput", ".", " ", "Try"}], " ", "the", " ", "following"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{
  "\"\<variable3 = variable1 + variable2 = \>\"", ",", " ", "variable3"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{" "}]}], "Input",
 CellChangeTimes->{{3.809702680201951*^9, 3.809702930874457*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"187d3441-8af8-48a4-95ab-97b36b0decfa"],

Cell[BoxData["9"], "Output",
 CellChangeTimes->{
  3.809702878899403*^9, {3.8097029135282393`*^9, 3.80970293795334*^9}},
 CellLabel->"Out[39]=",ExpressionUUID->"6ccc7011-7ee1-45d4-b46b-6e5f678ca727"],

Cell[BoxData[
 RowBox[{"sqrt", "[", "81", "]"}]], "Output",
 CellChangeTimes->{
  3.809702878899403*^9, {3.8097029135282393`*^9, 3.8097029379574947`*^9}},
 CellLabel->"Out[40]=",ExpressionUUID->"3e8e9ff4-4e43-414c-b423-33d82360dc09"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"variable3 = variable1 + variable2 = \"\>", "\[InvisibleSpace]",
    "3"}],
  SequenceForm["variable3 = variable1 + variable2 = ", 3],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8097028789190254`*^9, {3.809702913534916*^9, 3.809702937960494*^9}},
 CellLabel->
  "During evaluation of \
In[39]:=",ExpressionUUID->"2d8a9925-a812-428f-9383-c3b48ac89c5e"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.809702988868229*^9, 
  3.8097029905703387`*^9}},ExpressionUUID->"014c4db6-27ee-4f21-9b80-\
9cc40ce1cc61"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Create a new cell by moving the mouse until the cursor becomes a horizontal \
bar and then click. \
\>", "Subtitle",
 CellChangeTimes->{{3.809702996721325*^9, 3.8097030296582575`*^9}, 
   3.809703074322171*^9, {3.8097034079455175`*^9, 3.80970341021005*^9}, 
   3.8097035002153482`*^9},ExpressionUUID->"920ed2ab-1111-41f2-93f7-\
97dad367888a"],

Cell["\<\
Merge cells by selecting their brackets and use Cell -> Merge Cells. Try \
merging this cell with the previous one. The shortcut for this is (Shift + \
Ctrl + M)\
\>", "Subtitle",
 CellChangeTimes->{{3.8097034161874633`*^9, 3.8097034568333282`*^9}, {
  3.809703513209115*^9, 
  3.8097035425532527`*^9}},ExpressionUUID->"fe427ce2-8a03-4e02-93ce-\
c32f5b20651b"],

Cell["\<\
You can learn more about the basics of working with notebooks in the Document \
 Center (Help -> Wolfram Documentation) and then selecting \
\[OpenCurlyDoubleQuote]Working in Notebooks.\[CloseCurlyDoubleQuote]\
\>", "Subtitle",
 CellChangeTimes->{{3.8097036767319975`*^9, 3.809703754343851*^9}, {
  3.809703829992708*^9, 
  3.809703846984669*^9}},ExpressionUUID->"246a4760-e555-41bd-acbb-\
8b25913043e1"],

Cell[TextData[{
 StyleBox["3D Plotting/Manipulating:",
  FontWeight->"Bold"],
 "\nNotice that the surface below looks very faceted as you move the slider, \
but when you leave the slider in one place for several seconds, the surface \
becomes smoother. Rotate the object by putting the cursor in the window with \
the surface, left-mouse click, and move the mouse.\nZoom: Ctrl and Left-Mouse \
Click\nTranslate: Shift and Left-Mouse Click"
}], "Subtitle",
 CellChangeTimes->{{3.8097038544526553`*^9, 3.8097038863135996`*^9}, {
   3.80970421206398*^9, 3.809704277447855*^9}, {3.809704401767612*^9, 
   3.809704515063389*^9}, 3.8097049397748194`*^9, {3.8097050039913054`*^9, 
   3.809705007086424*^9}},ExpressionUUID->"aaff3c07-65c7-4ed4-a32b-\
871d7e471fa4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot3D", "[", 
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"c", " ", "*", " ", 
       RowBox[{"(", 
        RowBox[{"x", "+", "y"}], ")"}]}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", 
       RowBox[{"-", "3"}], ",", " ", "3"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"y", ",", " ", 
       RowBox[{"-", "2"}], ",", " ", "3"}], "}"}], ",", " ", 
     RowBox[{"Filling", "\[Rule]", "Bottom"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"c", ",", " ", "1", ",", " ", "\"\<Multiplier\>\""}], "}"}], 
     ",", " ", "1", ",", " ", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8097045256013656`*^9, 3.8097046562641187`*^9}, {
  3.809704686499053*^9, 3.8097046906190443`*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"b0323257-387f-48bc-a66c-851210d6d8a1"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`c$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`c$$], 1, "Multiplier"}, 1, 5}}, Typeset`size$$ = {
    360., {168., 172.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`c$$ = 1}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot3D[
        Sin[$CellContext`c$$ ($CellContext`x + $CellContext`y)], \
{$CellContext`x, -3, 3}, {$CellContext`y, -2, 3}, Filling -> Bottom], 
      "Specifications" :> {{{$CellContext`c$$, 1, "Multiplier"}, 1, 5}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{411., {214., 220.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.8097046599015055`*^9, 3.8097046921370244`*^9},
 CellLabel->"Out[46]=",ExpressionUUID->"64798b0b-ae48-4cc8-9c0c-48376f150788"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["Functions:",
  FontWeight->"Bold"],
 "\nThings to notice in the function definitions below, input parameters are \
defined with a trailing underscore as so \[OpenCurlyDoubleQuote]x_\
\[CloseCurlyDoubleQuote], but when referenced in the formula don\
\[CloseCurlyQuote]t include the underscore. Also, instead of an \
\[OpenCurlyDoubleQuote]=\[CloseCurlyDoubleQuote] sign we use the walrus \
\[OpenCurlyDoubleQuote]:=\[CloseCurlyDoubleQuote] and there is the  \
\[OpenCurlyDoubleQuote]//N\[CloseCurlyDoubleQuote] which forces a numerical \
output instead of a possible intermediate representation. "
}], "Subtitle",
 CellChangeTimes->{{3.8097049318625765`*^9, 3.8097049357185707`*^9}, {
  3.809705025284687*^9, 3.809705107542183*^9}, {3.8097051689421177`*^9, 
  3.809705258733832*^9}, {3.8097053771815386`*^9, 
  3.809705423325637*^9}},ExpressionUUID->"ae32e27e-120d-4314-a1f9-\
5e41dd3d7895"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Notice", " ", "the", " ", "difference", " ", "between", " ", "the", " ", 
    "output", " ", "of", " ", "these", " ", "to", " ", "variables"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"f", "[", "x_", "]"}], " ", ":=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"x", "^", "2"}], " ", "-", " ", 
         RowBox[{"Cos", "[", "x", "]"}]}], "]"}], " ", "+", " ", 
       RowBox[{"x", "^", "2"}]}], " ", "//", "N"}]}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"f2", "[", "x_", "]"}], " ", ":=", " ", 
     RowBox[{
      RowBox[{"Sin", "[", 
       RowBox[{
        RowBox[{"x", "^", "2"}], " ", "-", " ", 
        RowBox[{"Cos", "[", "x", "]"}]}], "]"}], " ", "+", " ", 
      RowBox[{"x", "^", "2"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"g", "[", "x_", "]"}], " ", ":=", " ", 
     RowBox[{"3", "x"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{"\"\<This is with \\\"\\\\\\\\N\\\" = \>\"", ",", " ", 
     RowBox[{"f", "[", "2", "]"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{"\"\<This is without it = \>\"", ",", " ", 
     RowBox[{"f2", "[", "2", "]"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8097052317249966`*^9, 3.809705236796986*^9}, {
  3.8097052670060315`*^9, 3.809705371718734*^9}, {3.8097054303016253`*^9, 
  3.8097056109422865`*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"282b29e3-f878-46e3-b66e-c9c572ba7aa1"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"This is with \\\"\\\\\\\\N\\\" = \"\>", "\[InvisibleSpace]", 
   "3.0435597364343923`"}],
  SequenceForm["This is with \"\\\\N\" = ", 3.0435597364343923`],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8097055676307216`*^9, 3.8097055771577044`*^9}, 
   3.8097056132347555`*^9},
 CellLabel->
  "During evaluation of \
In[55]:=",ExpressionUUID->"096dff8a-cbe8-44d3-92b9-9aa008d3935b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"This is without it = \"\>", "\[InvisibleSpace]", 
   RowBox[{"4", "+", 
    RowBox[{"Sin", "[", 
     RowBox[{"4", "-", 
      RowBox[{"Cos", "[", "2", "]"}]}], "]"}]}]}],
  SequenceForm["This is without it = ", 4 + Sin[4 - Cos[2]]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8097055676307216`*^9, 3.8097055771577044`*^9}, 
   3.809705613239788*^9},
 CellLabel->
  "During evaluation of \
In[55]:=",ExpressionUUID->"39bc3e36-a97a-4086-8059-96eca8a827f9"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
You can also reference other cells variable meaning that variables declared \
in the same notebook are global.\
\>", "Subtitle",
 CellChangeTimes->{{3.8097056306932535`*^9, 
  3.8097056718051796`*^9}},ExpressionUUID->"7e94606e-0d02-4204-a03e-\
4a3bb29145f6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "[", "x", "]"}], ",", " ", 
     RowBox[{"g", "[", "x", "]"}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", "0", ",", " ", "10"}], "}"}], ",", " ", 
   RowBox[{"Filling", "\[Rule]", "Bottom"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8097056789101615`*^9, 3.8097057849127398`*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"ecf25727-9c76-41e1-92fd-f70e2d0fb7c0"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1: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
iLh0VEiiZA+Nn+unJVpNMns8lWk4cq/11bKD1njG8aQ3lp0O9potISyDNujf
HBjU5kvHis0KI/aadkhKnUjVbKIj3ZSjC9l2sFKI6K7exIDlJSfXp2P2qJHX
l/PlYqKm4ZHrjvOOGGsItFUNYIJvq+4qjU4niNk0qLa7TxGnfQ/y5+dS8WL7
z5fx3+eJzDRtn+vk/pH4UleYc56Cy3Tf14fIXDd0dvCbW/UK1H6fPfhMWQmy
Bhfl5Vz4UHqJfsTjlTpCqNat/Er8uHThqcP59Rrozm0UWpYsiDBKbuR4jw7o
y4d3GvGJ4E9g/4ZXr/Ww9OgtqUclokhal6S85rchpJXv1IlaiKPPuMIk6KUx
dssuSPdISKDmG8uy2vUmEF9Is5iKIvvonzSf1tuWyM665BS2TQpTe4vkebWt
MF920J8mRPotd4aK4i5r8KpGy9wjc0KbUvvuIVJ/5gbf91Ir6Dh4z2T5zcN2
KKgZMd2xmoFT0R5//RrtYRFchAPDDJxc2LKgSvrBCRXzL3jGRHq4fJysijNo
m/exJXLNEFqcfxiycVQ4qZ5bvlxljpDUeltYpEPBF+/b6UcK2TGuX3Ttch8N
7y3VDP/upGLC4lCawEo6/LkNXxevFwTt6fUHczU60HB4pFWWL4z8quF5vidk
H1O2COMSE4PZkyEr22FDBFDMPX4+FEcKfzobD5kvWqcsvY6FSeDNmy+v1G1N
Qf2d4P3iryRSOuQtXv62REVTo/stExoSNvYd2E32rVfyGnc7HtCg/vu5x48C
Gxz9/jfvAJ2O5Te0OAJFbJHzjV9m8Awde45KXnPbbYehJMHTDGcGPG6/f/yH
zHeabZ/4fdYwoWrr6s1a4Ah/gwCZnReYONCmPzgq4Ixcm136If+Y0Dt7QsNh
6VY8a6BZONG8iY8BS5pUBvoqx5IfyHVceE1886lbExPfU9nH13fBbEcLsZ69
wkvX7HslS+ZE+bfon0SGpneveWt+5Xf3r9Tq173E7Jqh65V7fhKvdOKUTxoN
EUoJU9qxDlNEmeaqB1YHRokDPzewK7ItA2fqj/1+XycIJe+To9e7KJDs2sw+
oTpDuHg5BCdEUPE2hf9YvuMcEXpiY5k+6ccqVRxTZ91YwFM0viIolAPWKo/8
5EeXQCqeopPwZiUiep/eCA5bBtMnvlpG+0WhqN1hl67Chstdf6ozKTRk6qkG
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
2xLL/jcvPjP3mRMx5PP6F31kr5AzShgvVm2aJ/dv0Snt35xb8R8va6L99TPp
6KxN//Gypps0k4aaOon/eFk1BneyPmaOEv/xssQ6yro9FeaI/3hZfL7bcygG
y/AfL+vius2PrRyo+I+X9TlZpWqYl3uRlxWVFfp+qejKRV6WYOLP8wnX+Bd5
WWfsTTd9mhBc5GX5b7ix/XW4yCIvy2BwJvjAT7FFXtYpHZsdYlqrFnlZGwqu
lpys/L+8rH1Tw6dekfn/P17WlDxvu6IDY5GXpZ2bl3H58v/lZQ3xmXk41kgv
8rI6L3g4+lNkFnlZJoOBpr801izysvp2UgNKQmUXeVmG0sJLz9asXeRl8b6T
iS0clFvkZYmeu2etoaGwyMtKlN/Ay79HcZGX9UJMT300TmmRl6UhUXNJ+Yvy
Ii+La1nm4R3hKou8LIkwKZ2tMusWeVnU1a6lti/XLfKyFHRF7wW6rV/kZR1s
56s1Y1Fd5GX1j15wME1WXeRlGSq/SDFVVFvkZZWPbpydrFdb5GX5KKxv+bhL
fZGXpf3Xq3Erh8YiL0tfWsSSO1NjkZe1+lRUUI2m5iIvS3bXhsrVLZqLvCyv
p3sjSvy0FnlZTzMavYYFNyzyssayFyaVH25Y5GV5rs7lSLHUXuRl/ZVL0Lg/
pL3IyyrNmv0xfm7jIi/L2ZCJjZI6i7ws0f1ny5TI/vcfL4uf07fI0kl3kZd1
bX/5+MKC7iIvy0i6r2246RPxH1+oeWNCw+1c3UW+UHuF1cGxphriPx7LRGao
fnCY7iLPorzxtlfDZ91FnsXKv8Lx0033if/u/z/zZXx6p6/u4v3pZtRVEk+q
dBfvG5a/oZLf26e7eN/wUeucpmXNmcR/97NaDBV+bt6hu3i/5UpG8+S6Ut3F
++BGyv+cc/+uu3jfjNfZIx8Pj+su3jdDCL73FGmOJ/67n0PlRKxBgqvu4v0G
YwUPdvUX6i5+H7jJ+PWEyDfdxe8bmQjYEcpDuovnVU/NXNlZPqO7eF614brI
MT2yl/53vi/T4ETw0FbdxfNRe45kpZkW6C6eJzDheaR4tFl38f8V5S16Ry8M
6C723dGqyBThKd1FPeNRu6vgNqeL/5f/9996/v9+/j/wImw3
    "], {{{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwl2GW4lUUXBuCjHBrplJDu7gbpkAYRlBBbEEQJKenuNAiRbulOQQXswgAU
DFBCDEBUlO9efD/mWk+tvd+cmb3z9ejTtvedCQkJdxhbk/2/JkmekFBe3YK3
TExISK9OEdqUJCHh+aQJCU8IZcAr4zf4+2Tb4S/g1fk5+KfgRfBhuLj+n/hr
ZB+WXYXXhP/j96H3wOfI34/Xlx+PX8N34JfxCnhG/DM9M/TPw7PBX/HL62+B
d+TnwC/xB+Jv4ePxefpz43vkhukpx9+Mt4DTqZPpz6gb5Z+Tf1w+Ge8onJ5X
l1eJ9ydtr95i6kVeW95AejU4u56T8EL4Tfg8b7Vcd/l6+KW4XvxPadNp5fj3
49nlL+Jz+btpQ/ll8fvUtL53Eq2X+oZsX9nH5KbjSfnv4On4dfCK/Ou0PXpf
w4vCF/ht+B3xAfyqeDb9I/Cv8QX4IbwYfk5ulZ5u+lfiNeB/+fFgPIzPlu+A
3ys/Dr+Kb49jx8vj6fFP9EzTn1X9kldW7328Drxs+AXeEXgcPEffLv4Q2TL0
ifAG3rO8R3lp8Qr4Nf7u+EzaQeNH+kpaV9oz8CyZ9nrq8v6At8X3wOngj+Wm
ymVRv6CXkW/ueNrzsuI/8wbgh/Gx+Gx9ufCdcoP1lOZvwpvDd6kT6D3V9fJ9
5B+Rn4Yn8t/G7+LXxsvzr9J26V+EF4F/5reOe47351fBs+gfjn+Fz8cP4EXx
H+RW6Omiv7p6k9eLNlOuHVxH7nd4a5xDXCv4I7kp8qXl2uFZeD/hs/g7aIP4
pfAeeBq8nMwftJ20wupP8q3o/eiV4cxyX8KvwvvhIo7re/5y2Yf0rMCrwf/w
e9K74zPk2+K15cfiv+Fb4jjwcvhd+Id6JsfzjmeGT/BL6W+Gt+Vnxs/z++Nv
4mPwmfpz4ttjftFTkr8RbwanUcfTn1bXyfeWf1g+Ce8tODWvFq8s73faDr2F
1PO8lrzn6ZXgTHq+gF+B98Hf8ZbJPShfK97nuG78D2iTaCX5bfBM8ufwGfxt
MR/wS+BN1dS+dxxtrdwzct1l7qQfgVPRa/LL8H6jbdezEC8In+O34HfAn+NX
xDPqfRE/gb+M78UL42fllurprH85XhX+m/80vRs+Xb4NXlN+DP4rvjmOGS+L
p8bf1zNR/xw8E/w5v4T+pnhrfkb8R/4heDQ8Xe/dvK0yA+SL85qoqWhjY46X
6yXXTS4lXhr/lb8t5jW8L16Bn4G/xzhDW8LvxH8KnsZvza/BuwJviu+HU8Hv
yU2Qy6h+Ri8u38T3tuJlwH/g9cMP4qPwafpy4Fvk+uspxn8DbwynVMfQn1JX
y/eU7yo/NdZA/mE8Bb8GXop/hbZV/wK8APwjvzm/Pf4sv3ysF/qH4Z/jL+G7
8UL4t3Kv63lA/zK8CvwX/0l6V3yqfCu8uvwv8MY4l7h+8Luy42PdkW2Jp+d9
j0/lb453ll8U74Inx0vK/ELbQmuG98HLxVoRc67xDW0xvyO/snoj1nPaFLmW
cDWZy/Ab8T1wGceXAj8uO07PbDwD/Cm/qL7GsZby0+Hf8Z/HD+Aj8Sn6s+Ob
4l3TU4S/AW8Ep1BH059UV8k/Lf+Q/BQ8gf8mnoxfHS/Bv0zbzJqP54d/4DeN
+Q7vzS+Lp9U/FP8Mn4fvxAvip+Ve03O//krqn7HO0ybLtYCrxhoNb4hziOsI
H5MbK18k1jE8Le8sPpm/kfYcv3DMJ0ZBY73vaUhLro6KdUrPU3oelE+KF8cv
8TfF+xJ7DrxMrBsxR8d+ibaI34FfUb0e6z1tktx9cBWZi/D6OA64tO9Jhh+V
HRNzfazD8Cf8wvoaxdrFvws/w38O34+PwCfpzxb7ingf9RTgr8MbwMnUkfQn
1BXyT8p3lp+M38IP4Yn8angx/KKejfpfxfPB3/Mb89vivfil8TT6h+Cf4nPx
7XgB/KTcQj3t9VdQr8X6T5so1xyuLHcBXhfnENcRfkdudFz3WDfwNLxvYw/B
30B7lp8/3nMjdczLxtf0BfR2tEfgCfqa6avE+xleG58BJ8Jvy42SS6d+TC8Y
cyE9NfwNfR88HJ4gnzX2A/GOyebjrcXrw0nVEfTH1eXyT8h3kp+E/4cfxJPw
q8ZeDb+gZ4P+V/C88Hf8RrHG4D35pWLN0D8Y/wSfg2/F88f+QW6+nrb6l8b+
A77K70HvEuujfFO8ovzo2Ifja+Jc8FJ4EvwtPSP1p1U/4hWIeZWeCj5N3wu/
CI/Xs47XWy4vfXisk7zHeQ/E+oYXwX/mr+c3jLUZL8lPyd8S+wraq/w2cc/x
09Enc4Q2gnbKGEdbG+8I7R78xVjnZB7zOR15/8IH4DvoheGf5NbJ3aOepTeI
eZ1eIuZw+Y/h2fBmOJ9z/oL/imxrPUvwcvAfsXegPxTrtnwTvLz8KPw8vho/
hZeM9QE/rGe4/pmxt4E/5OfX3zDWF35K/CS/b/z2wIfhY/VnwdfEvl5PHv4a
vB6cqA6jP6YukX9U/n75ifhNfD+ewK+CF8LP61lLyqOe4dWPuZReHE6u7yN4
FrwJPsF7Wa6VfHd4LK8xr1z8brn9g898y38RzBdzB56C/zU+hr869r783HG8
RrKYA43P6S/RW9LKxntm3KIdog2j5Y3r4bOS+6yv8N3wUHi03Kp4NuRy0YfG
+sh7hNeB9w+8D74V8zd8Tm61XG71W3o9+dauwxO8YnhSuQ/hmfAbcN5YA2Tm
ybeIY1N/jz0J7cFY92Ub4WVkz8Gr4vjg//gHZYfqSaN+QL+H1iDmRrlk+Je8
XfAQeJSezLyV8bzJ5+TdqyahDaE9qi6W7SHbXvZveC/8X8x/8I+yq6In5gq8
aMytvA/gGfAG+FPeXLn75LrCo3kNeaXjXYp3gXaAPySeBbg+Pyn/C3wkf0U8
F/y747dd3GraeuMT+hx6c1qp2P8aN2n7aYNpJ4wRtOWxFtBy4INjHfX5D/v8
dvHdMQfhP/BX8OvG84sX4d/Jex+eDq+Ld5A3W66ZXBn1N3oX2iiZBnDJ+H0H
r4RPxDPA2yc3KOZx9X16blo9mUT4c/pOeDA8XH5ZXEO57PRBsZbyuvPaxnnF
e49/z1/Oz6V+w6sT94heOOYSmffgafDaeH94s+Saxu8q9dfYn9BGytSPPbLM
D/CKOJa4t7y9ci/E58P38pLwPov5i780rg0/G94mzi+eU5nvaMto8cfLmniO
5WbSmpCK458Zf9H20AbSPjWG0ZbEsdOyxrxv3DJWx7NDn0FvHHvGeH6MG7Td
tAG0nHBd33unY/sk3j3+67RH+FnwF2JN5nfjt47zMu7Bz/KX8GtHFi8UzzH+
LjwVXhX3mzddrlE8U+qV2P/QRsjUi/2izPfw8vhu+E/eLrn+8qnU9+h30+rI
3AF/TN8BD4KHyC/m9ZDLTB8YazqvK69VXCMjD36G/3qcp3qaVyt66AXhf+nH
4Snwyrjf8XtDriG9Mzycdy+vCO87eFkcA3ydt1Oun1wOuDYvgfdRvBP812gP
8zPhA2I95nfht4xrb+TGv+Uv5teMLF6AfxNfwX+XNpXfAC8cz55xjbaD9jzt
w3imaYto3WkZ8deMf4zl9OOxf6fXj32e8UHcR/pCejd6BrxFXG8jl+/+hraI
ViM+D8/vWP6O3yb8Y7Ev5tfDO8Ev8uvyC8WzaVylbef35WeHa/FvxfuJb4df
kB0ot4DXlZ4+5gX1zvjvI9Z+mYdk7ot7Bu+Br8OV+Tnx07IL9byM3w2f4lfX
1wrvxs+H/xXXAz+GT8aXxjOKH439sp57+a/jJeFfYm9C7xzrq3yd2NPJn4WX
wh/Af/C3yT6rL6X6Lj1bzKV6asr9F88m71l8Gz6QP0BfJnx+7LP46eL9w+vA
d6j94j1RX5F/UL65/AT8Br4bv4ZXinPET+lZEM+WepJXLa4dPS98g34UngQv
0fNO7I/l6tI7wkN5tWPPxjsDL4Hfh3/nbZXrI5cVrsH7N84N789/NfY6eFq8
WdxXI4fMSdp8WtU4L/wen/dnXE/+27F35tfB88f7Y/xG20LrHe+W0Y/2Sqyz
tLvid4Fx3VhMf4s+nl4bf8Y4ZjxPfznuDz1N7IGNa/F804/Qx9Frxb4k3hPj
V9pmWi9aFri6Y7yJH41nn/8SrROeOj479j38zs6hadxnIzv+Nf9lfpW4Bnge
/lX8HXgivEjucOyT5GrSS6iXYz8Wnx1ru1wtPK/cyPh9j7+OH8dL4FfkNunp
qXdG/H6Gj/Mzx/qFV5P/h/YOv0/8l4IP4PfVnxGfJ/cAP1XMt4mx4XJusdeS
6yTXJN5leBf8O5wN/kruJdHKce3x3Lw/8IX8N2lj+DVijxzvuPELbSPtadrb
8WzT5tI60lLitdRbcUyxj/J5D8CNYy6Ed8K/wRUdV1b8S9l5el7Cs8Nf8yvp
a4l35ueK44w5CX8bn4AviPkaPxR7Gj3V4xnBi8OXYh8Y1wAfLF8TzyP/DbwY
Pgpf5r8h+5S+THBV3t/4W/gWuL9cH7k5vPvpKeIcYy/F68hrFM9S7MfxL/hz
+RXj/uI54/zw+fyDsUfhV4v9Z7x/xiXaBtqTtCNGb9psWgdacnyO8Ws8+/QD
sWegV8WfMA7Hs0+fRW+fePvWJlQxHjfeNHrxZvLaJd5eYhIqG48Zh4yevBm8
tom3/yJJmG1ciXeGvj/WWWKl2H/Eu2pcpK2nPUo7aDxNm05rk3h7y5/QEL8S
e1jkBG0W7ZeYe2n7Yj2kVYy1NN5d4wJtHe0R2gHjKdq02Isn3v5pktAgnquY
F33e57SZtApxH/G7nczleEb4e2Nd4VfA28OD+DVi7eedhl+Dj8A/89bK9ZBL
rh6jZ4y9VfyHJvcXbX9cf3wz3o//pL4M8Z9arBn8/wFoo1HN
         "]]]}, {}, 
      {RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwNxlk2gmEAgOHPf8E6rKhzWoIFZHMUkTENlHlMkoQQGVKU6Ll4zvtOz8zG
E1EIYYIYc5N+KoSIOx/0R//55Js/Xvmgz4gnXninxy8PPNLmjS+GNLmlwQ11
rqlxRZVLKlxwzhmnnHDMEYccsM8eu5QpscM2RQrkybFFlk02WGeNVVbIsMwS
aRZZIEWSee5p8UyHLgPGD4REdw==
         "]]]}, {}, {}, {}, {}, {}, {}}, {{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1:eJwl2WWgVUUfxeFLd3d3SUooKiWIgSiKgnQaCEiHCEh3dyhlABZi0CWSYotF
SKc0CEgo7/N//TDO+q215t5z7tl79hws1K5rwy6JEhISPkuekBBzg6QJCRMS
JyRkwh0YvZIlJHyaJCGhC94ovyG/Fz+IM+t9JU/Bayf7wHyat9W6Bfw/9HLT
D9D96GdllfRe11tPz5Kdw7nlTeSVeFPwL/Is+Lz8IYOd8BRvIvEy3oTbGx/y
/uRt4+UxKvMG8TbwZuPzeKrxKy+rn3eBV9cgE57mTdLriL/Azxsf8c7wtvPy
GlV4g3kbeXPwBTzNYCU09J/J/E78zfgF4x7DW0l4RjZF1ln2JX7RuNfwJ0t4
VjZV9opsC37JqGoM4W/iz+VfxNONFEYj/jR+fEhbcQdjGe8sbwcvn3Efbyjv
C94b+BLO44U09UYr82bg3+TZ8EX5w8Zz8hm4mzylvLF8Ot1V1lv2mWwb/ya/
Kp0l/vb4Y3yO3qm3UO+ALD9djX6NbuJNNpKfxXfpLsT3WzeM3szPj9/UHy3f
rv8qvizPi5vhJ3EVvb04pzWz8Ez573T2eD/4kvWr5dfwI3QTeibd3bo7dHXd
VNY8Z57B66azHXc0lvPOx3XLKxDXJm8470vePHwF5/Mzmvt598Q1ivfIc+DL
8jWy6/SjdFN6Ft0j8X8fbg291GQT80xeZl53vT56n+t1xTvkt+T34do4q94u
ecq4nnAn+Sf0BX5pvMv6RfKD+kNwQVwd98dNcWO9c7i0NdWsHWHewpuvN4a/
Q+8vfn66BX1v3Bt4r15OfEXvMaOZfDbuKU8jbxp/e7qHbCe+je+XZ4vrGn+K
L9JfywvFa+KN5G3lLcBX8RwjrdGMP5vfk/8VfsWoYYzib+Mv5F/Dc410RnP+
HH4v/i7cJfYn3iXeN7zCRk3eaN523iJ8HRfwHlp6jVXjPsD75Lni/cvrGel5
LXhz5b3x1/gf/IBO9rj28ef4Mv2t/C0/75CsCF2DHkA/J6ulN0ZvB/2WbKxs
p+xvfkG6FX2fbB+dS+9N/n5zbn4Vn9lVa9bK/saj8eO4OZ6D2+Ne1iYy17Tm
PXMG61vSb/Cz4D76ffVXxP2Lv5H/G58/roNzxOciT8XrJlthvsL7zrq3+Yf1
isbfkB5IN7Omifw8LqO7CD9o3Vh6J78Aflt/nPwr/X74hrwQbo0bxD2utx/n
js8az5P/QeeJ+whfs36d/AauT7eg59K9rUssr6Wb0ZpW8ffi9dV5VWelzrf8
O/zqdE5Zd7wS/0V/r1fMqKX7etwTvNrycfKv6HdkN3FheRv5A3Fv4APyvPi6
/AkjE681b578Vfwd7mHUMcbzd/Hf5d/CC4zMRhv+fH4//ve4p7GKd5X3A694
PL94E3hf8xbj27iI19LW764W1z4+KM8X14/8SaOl/A3cJz5veVv5Avo12Q8J
/z1kashzxT0CV8uv0T/K35EdkZWgH6QHxecrq6s3Ue8beolsvGyX7B9+Ubod
XV32B50nrgH+IXN+/g39BkYr2Zu4r15WebvY3+n+sn6yVbIf+YnomvHsj/uV
Tq3Xm7/GfJ33k/67/KM6Jena9GC6uewCXVbvYf1J5m95S3Um8L/W+ZdfjG5P
14j7Dx/WK4Bv6j1ltJbPi2eLPFucFeL90ANkP+HE8lryPLw+eK38b3q3vJTx
CG8y7zvee/gOftvIHucE/lv8gfzduK+xjneD9zPvLuNR3hTe97z341AVn4vp
CK+g33sLP23kiHMD72291/HPOInX9qBO3rgO8Xr5TfoX+WLZMVlpug49hG4h
u0iX03sszjvmH3gf6Ezkf6OTKK5F+nm6puwAnVfvXf2j5kL82zoNjTay+XGP
6+WMs4v8HXqQ7DXZatkvcQaia9P5Yq+k0+j1428w3+L9qr+Ef1ynTNwH9FC6
pewSXV6vXpynzD/yPtSZxP9WJzFdgn6BrhX3jd4xvcJxvcqeMdrKF+DX5Lni
HBXvhx4s+xW/Zmzk3eb9xitrPB7nKt5PvI/iHBivkZc7zlX8xfwhvN/iFvPz
68TZJq5vvEn+D/27vFycI+XD5K149eUz5LvpZbLJsu9kSemS9ItxXo7rWO+4
XpG4jmXrZTfjXEy3oxfSz9sL++smiT049k9rXjYviXuON1S3v+4a3d/j2EE/
RD8kKxB7PE6rP0D2hflf3h5rlvJP6JWP8x89PO43a1rLL+MKuk9YM9P8M6+g
7GPdKbLvdZPFvUG/RD8lq61zEOeLZ5R1J8xFZXf0NvBv0Y3o9vQieoB+3jiD
6S2lh8kGyNbK9sRZl65LF4x7C2/WuxPnQL0KsS/yZvF+4S3HyY3346xmdIrX
wB/O24tT+lkP+1mF4r7CX8aBHe+T3x33t3wEbiNvIJot/5X+RDZV9oMsRdzL
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
         "]]},
       Annotation[#, "Charting`Private`Tag$81950#1"]& ], 
      TagBox[
       {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1:eJwNxVk6AmAAAMDfS87RgXrpCA6Qy0VKVEhaKIqSfS07EaJiHuab6Nx8PDET
QoiRjITwwwcvPNDnlgUWSbFEmgzLZFlhlRx5CqyxzgZFNimxRZkKVWpss0Od
Brvs0aTFPge06XBIlyOOOeGUM8654JIrrvllyCuP3NFjzCdvPHHPhC8GPDPl
m3f+GBFmQ7jxP93BRGI=
         "]]},
       Annotation[#, "Charting`Private`Tag$81950#2"]& ]}}], {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}, "AxesInFront" -> True},
  PlotRange->{{0, 10}, {-0.8414709848078211, 100.3032470905971}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8097057430814424`*^9, 3.8097057859918833`*^9}},
 CellLabel->"Out[63]=",ExpressionUUID->"285187fe-e4ea-4ddf-bd06-2a96d56750f7"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["Subroutines:",
  FontWeight->"Bold"],
 "\nNot only all variable in a notebook are global but if you have other \
notebooks open with the same named variable you will be able to access those \
variable too. This is not defined behavior and may cause errors, so I bring \
it up so you can prevent possible issues.\nIf you do want to specify a local \
variable, you will need to use the the command \[OpenCurlyDoubleQuote]Module\
\[CloseCurlyDoubleQuote] as we will see in the next section."
}], "Subtitle",
 CellChangeTimes->{{3.809705832534882*^9, 3.809705969068651*^9}, {
  3.8097063600427136`*^9, 
  3.8097063725239053`*^9}},ExpressionUUID->"83b339ca-2619-40b4-85b2-\
d2109ec0fb09"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Defining", " ", "my", " ", "function", " ", "here"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"mySubRoutine", "[", 
      RowBox[{"x_", ",", " ", "y_"}], "]"}], " ", ":=", " ", 
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Print", "[", 
        RowBox[{
        "\"\<mySubRoutine: input x = \>\"", ",", " ", "x", ",", " ", 
         "\"\<, y = \>\"", ",", " ", "y"}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"a", " ", "=", " ", 
        RowBox[{"x", " ", "+", " ", "y"}]}], ";", " ", 
       RowBox[{"(*", "  ", 
        RowBox[{
        "\"\<Although \>\"", "a", "\"\< and \>\"", "b", 
         "\"\< are in my fuction they are not local \>"}], "*)"}], 
       "\[IndentingNewLine]", " ", 
       RowBox[{"b", " ", "=", " ", 
        RowBox[{"x", " ", "*", " ", "y"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "a", "]"}], ";"}], "\[IndentingNewLine]", 
      ")"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"a", " ", "=", " ", "0"}], ";", " ", 
    RowBox[{"b", " ", "=", " ", "0"}], ";", " ", 
    RowBox[{"x", " ", "=", " ", "2"}], ";", " ", 
    RowBox[{"y", " ", "=", " ", "3"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"functionResult", " ", "=", " ", 
     RowBox[{"mySubRoutine", "[", 
      RowBox[{"x", ",", " ", "y"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<The result of running my function with 2 and 3 is \>\"", ",", " ", 
      "functionResult", ",", " ", "\"\< a = \>\"", ",", " ", "a", ",", " ", 
      "\"\< and b = \>\"", ",", " ", "b"}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<See I can still access a = \>\"", ",", " ", "a", ",", " ", 
      "\"\< and b = \>\"", ",", " ", "b", ",", " ", 
      "\"\< even outside my function.\>\""}], "]"}], ";"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.809706099937411*^9, 3.809706125429365*^9}, {
  3.8097061653802595`*^9, 3.809706202924223*^9}, {3.8097062368051605`*^9, 
  3.809706312853015*^9}, {3.80970642421882*^9, 3.8097068081240816`*^9}, {
  3.8097068432790127`*^9, 3.8097068574289875`*^9}, {3.8097069898667297`*^9, 
  3.8097070035007095`*^9}, {3.809707263018217*^9, 3.809707277579769*^9}},
 CellLabel->
  "In[134]:=",ExpressionUUID->"3bd9d701-0757-4738-8da7-e38d81571aa9"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"mySubRoutine: input x = \"\>", "\[InvisibleSpace]", "2", 
   "\[InvisibleSpace]", "\<\", y = \"\>", "\[InvisibleSpace]", "3"}],
  SequenceForm["mySubRoutine: input x = ", 2, ", y = ", 3],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8097067175357065`*^9, 3.809706742209365*^9}, 
   3.809706809722061*^9, 3.809706859551443*^9, {3.809707005820385*^9, 
   3.809707011454731*^9}, {3.809707101700505*^9, 3.8097071137844825`*^9}, {
   3.80970718448015*^9, 3.8097071922279882`*^9}, 3.8097072817341695`*^9},
 CellLabel->
  "During evaluation of \
In[134]:=",ExpressionUUID->"dd3869c8-8f00-4d48-b75b-9f87a610312a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"The result of running my function with 2 and 3 is \"\>", 
   "\[InvisibleSpace]", "5", "\[InvisibleSpace]", "\<\" a = \"\>", 
   "\[InvisibleSpace]", "5", "\[InvisibleSpace]", "\<\" and b = \"\>", 
   "\[InvisibleSpace]", "6"}],
  SequenceForm[
  "The result of running my function with 2 and 3 is ", 5, " a = ", 5, 
   " and b = ", 6],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8097067175357065`*^9, 3.809706742209365*^9}, 
   3.809706809722061*^9, 3.809706859551443*^9, {3.809707005820385*^9, 
   3.809707011454731*^9}, {3.809707101700505*^9, 3.8097071137844825`*^9}, {
   3.80970718448015*^9, 3.8097071922279882`*^9}, 3.8097072817381673`*^9},
 CellLabel->
  "During evaluation of \
In[134]:=",ExpressionUUID->"20af6782-e2af-4753-befd-53d9f35273d9"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"See I can still access a = \"\>", "\[InvisibleSpace]", "5", 
   "\[InvisibleSpace]", "\<\" and b = \"\>", "\[InvisibleSpace]", "6", 
   "\[InvisibleSpace]", "\<\" even outside my function.\"\>"}],
  SequenceForm[
  "See I can still access a = ", 5, " and b = ", 6, 
   " even outside my function."],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8097067175357065`*^9, 3.809706742209365*^9}, 
   3.809706809722061*^9, 3.809706859551443*^9, {3.809707005820385*^9, 
   3.809707011454731*^9}, {3.809707101700505*^9, 3.8097071137844825`*^9}, {
   3.80970718448015*^9, 3.8097071922279882`*^9}, 3.809707281742165*^9},
 CellLabel->
  "During evaluation of \
In[134]:=",ExpressionUUID->"f5619d9b-99ee-490c-96e0-cdfa55a63272"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Experiment with functions by:
* Removing the return statement;\
\>", "Subtitle",
 CellChangeTimes->{{3.8097073211394424`*^9, 
  3.8097073504900293`*^9}},ExpressionUUID->"d1a72b1f-daad-45d2-96ab-\
9d7c47075043"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"testFunction1", "[", "x_", "]"}], " ", ":=", " ", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"i", " ", "=", " ", 
      RowBox[{"x", " ", "+", " ", "2"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"j", " ", "=", " ", 
      RowBox[{"x", " ", "+", " ", "4"}]}], ";"}], "\[IndentingNewLine]", 
    ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"testFunction2", "[", "x_", "]"}], " ", ":=", " ", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"i", " ", "=", " ", 
      RowBox[{"x", " ", "+", " ", "2"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"j", " ", "=", " ", 
      RowBox[{"x", " ", "+", " ", "4"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"i", " ", "+", " ", "j"}], "]"}], ";"}], "\[IndentingNewLine]", 
    ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"myAnswer", " ", "=", " ", 
    RowBox[{"testFunction1", "[", "1", "]"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"We", " ", "expect", " ", "to", " ", "get", " ", "1"}], " ", "+", 
    " ", "2"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myNextAnswer", " ", "=", " ", 
   RowBox[{"testFunction2", "[", "1", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{
    "\"\<What happens when we don't have a return statement? myAnswer = \>\"",
      ",", " ", "myAnswer"}], "]"}], ";"}], "  "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{
    "\"\<What happens when we do have a return statement? myAnswer = \>\"", 
     ",", " ", "myNextAnswer"}], "]"}], ";"}], "  "}]}], "Input",
 CellChangeTimes->{{3.809707353876049*^9, 3.8097074737068233`*^9}, {
  3.8097075107577543`*^9, 3.809707646034503*^9}, {3.8097076782624316`*^9, 
  3.8097076801362267`*^9}},
 CellLabel->
  "In[150]:=",ExpressionUUID->"909d7e0c-9172-48fc-9011-d3899af39e0f"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"What happens when we don't have a return statement? myAnswer = \
\"\>", "\[InvisibleSpace]", "Null"}],
  SequenceForm[
  "What happens when we don't have a return statement? myAnswer = ", Null],
  Editable->False]], "Print",
 CellChangeTimes->{3.8097074783329973`*^9, 3.8097075622988157`*^9, 
  3.809707648847516*^9, 3.809707681569557*^9},
 CellLabel->
  "During evaluation of \
In[150]:=",ExpressionUUID->"22504081-c839-4f5d-963d-0c371f7474d8"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"What happens when we do have a return statement? myAnswer = \"\
\>", "\[InvisibleSpace]", "8"}],
  SequenceForm[
  "What happens when we do have a return statement? myAnswer = ", 8],
  Editable->False]], "Print",
 CellChangeTimes->{3.8097074783329973`*^9, 3.8097075622988157`*^9, 
  3.809707648847516*^9, 3.809707681572733*^9},
 CellLabel->
  "During evaluation of \
In[150]:=",ExpressionUUID->"19961858-fd02-4c32-9917-49e67992befd"],

Cell[BoxData[""], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.8097074783329973`*^9, 3.8097075622988157`*^9, {3.8097076488516617`*^9, 
   3.8097076728183155`*^9}, {3.809707704401396*^9, 
   3.809707707937388*^9}},ExpressionUUID->"e6fcf13a-c496-4b81-85b7-\
0fb3261b5dc7"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["* Remove the semicolon(;) in the declaration of variables.", "Subtitle",
 CellChangeTimes->{{3.809707723722453*^9, 
  3.809707791297221*^9}},ExpressionUUID->"03b768a2-dd78-43e2-bb10-\
f88ccdf48efe"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"testFunction3", "[", "x_", "]"}], " ", ":=", " ", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"i", " ", "=", " ", 
      RowBox[{"x", " ", "+", " ", "2"}]}], ";", 
     RowBox[{"(*", " ", 
      RowBox[{"the", " ", "indentation", " ", "changes", " ", "too"}], "*)"}],
      "\[IndentingNewLine]", 
     RowBox[{"j", " ", "=", " ", 
      RowBox[{"x", " ", "+", " ", "4"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"i", " ", "+", " ", "j"}], "]"}], ";"}], "\[IndentingNewLine]", 
    ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myNextNextAnswer", " ", "=", " ", 
   RowBox[{"testFunction3", "[", "1", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{
    "\"\<What happens when we remove the semicolon from the declaration? \
myAnswer = \>\"", ",", " ", "myNextNextAnswer"}], "]"}], ";"}], 
  " "}]}], "Input",
 CellChangeTimes->{{3.809707804106207*^9, 3.8097079109479713`*^9}, {
  3.8097099497974415`*^9, 3.809709954052031*^9}, {3.809710011844115*^9, 
  3.80971004573186*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"8b3fc9b3-02ec-47b4-9c6d-ad1f6b41b758"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"What happens when we remove the semicolon from the \
declaration? myAnswer = \"\>", "\[InvisibleSpace]", "8"}],
  SequenceForm[
  "What happens when we remove the semicolon from the declaration? myAnswer = \
", 8],
  Editable->False]], "Print",
 CellChangeTimes->{{3.809710089668892*^9, 3.809710089839835*^9}},
 CellLabel->
  "During evaluation of \
In[4]:=",ExpressionUUID->"5bdb60a3-a5b5-43c2-83c0-118c892ba063"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["Module:",
  FontWeight->"Bold"],
 "\nAs stated before all variables are global, if you do want a global \
variable then you need to use the \[OpenCurlyDoubleQuote]Module\
\[CloseCurlyDoubleQuote] command. Example below:"
}], "Subtitle",
 CellChangeTimes->{{3.8097079845687475`*^9, 3.80970804328876*^9}, {
  3.8097093302463455`*^9, 
  3.8097093423732862`*^9}},ExpressionUUID->"8703d862-2c7a-4c8b-a5e4-\
672877b1da87"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ff", "[", "x1_", "]"}], " ", ":=", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"localY", " ", "=", " ", "x1"}], "}"}], ",", " ", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"While", "[", " ", 
        RowBox[{
         RowBox[{"localY", " ", ">", " ", "0"}], ",", " ", 
         RowBox[{"localY", " ", "=", " ", 
          RowBox[{"Log", "[", "localY", "]"}]}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "localY", "]"}], ";"}]}], "\[IndentingNewLine]",
      "]"}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numHolder", " ", "=", " ", 
   RowBox[{
    RowBox[{"ff", "[", "10", "]"}], "//", "N"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", "numHolder", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", "localY", "]"}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.809709348854306*^9, 3.8097093625032835`*^9}, {
  3.809709420396973*^9, 3.8097095981568336`*^9}, {3.8097096598146915`*^9, 
  3.8097096930927296`*^9}, {3.809709736244401*^9, 3.80970974278821*^9}, {
  3.8097097772387753`*^9, 3.8097098358523273`*^9}, {3.8097098731797967`*^9, 
  3.809709935678587*^9}, {3.809710110659834*^9, 3.8097102429655743`*^9}, {
  3.8097102902244825`*^9, 3.809710308789447*^9}, {3.809710346008371*^9, 
  3.8097103680123267`*^9}},ExpressionUUID->"319f2b95-cc91-4650-b94c-\
0a45eb3cd545"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"-", "0.18148297420509205`"}]], "Print",
 CellChangeTimes->{{3.8097102217585826`*^9, 3.809710243766878*^9}, 
   3.809710315911659*^9, 3.809710359915829*^9},
 CellLabel->
  "During evaluation of \
In[26]:=",ExpressionUUID->"12940dbc-018f-4635-b0e1-449d191eacd8"],

Cell[BoxData["localY"], "Print",
 CellChangeTimes->{{3.8097102217585826`*^9, 3.809710243766878*^9}, 
   3.809710315911659*^9, 3.8097103599197273`*^9},
 CellLabel->
  "During evaluation of \
In[26]:=",ExpressionUUID->"ce1e8e35-1408-43aa-aca5-8bd730df2520"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Notice that when we try to print localY that we don\[CloseCurlyQuote]t get \
the value of the variable defined in the function but instead we get \
\[OpenCurlyDoubleQuote]localY\[CloseCurlyDoubleQuote] which is what MM the \
name of the variable since MM doesn\[CloseCurlyQuote]t understand what it is.\
\>", "Subtitle",
 CellChangeTimes->{{3.809710379420307*^9, 3.809710443460182*^9}, {
  3.8097105832759066`*^9, 3.8097106037398744`*^9}, {3.80971066447575*^9, 
  3.809710723723631*^9}},ExpressionUUID->"a3573a80-d27d-45b6-97be-\
92b43319cc94"],

Cell[TextData[{
 StyleBox["Lists and Tables:",
  FontWeight->"Bold"],
 "\nWe will use lists and tables a lot in this class. Sometimes we will refer \
to them as arrays."
}], "Subtitle",
 CellChangeTimes->{{3.8097107331552744`*^9, 
  3.8097108070275993`*^9}},ExpressionUUID->"f1c868e0-0835-47aa-9e80-\
eeba730dcf25"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "This", " ", "is", " ", "an", " ", "example", " ", "of", " ", "a", " ", 
     "list"}], ",", " ", 
    RowBox[{
    "they", " ", "can", " ", "be", " ", "printed", " ", "in", " ", "matrix", 
     " ", "form"}]}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.8097109309422283`*^9, 
  3.8097109544031925`*^9}},ExpressionUUID->"ca9a666d-035b-444f-8ed6-\
392758f41c15"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ttt", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"2", ",", " ", "3", ",", " ", "2", ",", " ", "6"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", " ", "[", 
   RowBox[{
   "\"\<ttt = \>\"", ",", " ", "ttt", ",", 
    "\"\< and ttt in Matrix form = \>\"", ",", " ", 
    RowBox[{"MatrixForm", "[", "ttt", "]"}]}], " ", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.8097108109414682`*^9, 
  3.809710904643636*^9}},ExpressionUUID->"3035fdc1-e545-4dd6-a3bd-\
1a5aa93fea0b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"ttt = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "2", ",", "6"}], "}"}], 
   "\[InvisibleSpace]", "\<\" and ttt in matrix form = \"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {"2"},
        {"3"},
        {"2"},
        {"6"}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["ttt = ", {2, 3, 2, 6}, " and ttt in matrix form = ", 
   MatrixForm[{2, 3, 2, 6}]],
  Editable->False]], "Print",
 CellChangeTimes->{3.8097108997232914`*^9},
 CellLabel->
  "During evaluation of \
In[30]:=",ExpressionUUID->"1ba2bb09-c780-4172-aca6-549ddafcec08"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "These", " ", "are", " ", "examplex", " ", "of", " ", "a", " ", "tablex"}],
    " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "input", " ", "running", " ", "from", " ", "min", " ", "to", " ", "given", 
    " ", "max"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"i", "^", "2"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "10"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "input", " ", "running", " ", "from", " ", "specified", " ", "min", " ", 
     "to", " ", "max"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"i", "^", "2"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "2", ",", " ", "10"}], "}"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "input", " ", "running", " ", "from", " ", "specified", " ", "min", " ", 
     "to", " ", "max", " ", "in", " ", "specified", " ", "steps"}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"sss", " ", "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"i", "^", "2"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"i", ",", "2", ",", " ", "10", ",", " ", "2"}], "}"}]}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.8097111105804615`*^9, 3.80971112201735*^9}, {
  3.809711355218416*^9, 3.809711499615138*^9}, {3.8097116305738897`*^9, 
  3.8097116323068857`*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"7f21a60a-4a14-4907-96e7-aa7fac794b00"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "4", ",", "9", ",", "16", ",", "25", ",", "36", ",", "49", ",", 
   "64", ",", "81", ",", "100"}], "}"}]], "Output",
 CellChangeTimes->{3.809711469642062*^9, 3.809711500249343*^9, 
  3.8097116342188673`*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"d91a04bd-e0a6-4353-ac40-e8b786d91013"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "4", ",", "9", ",", "16", ",", "25", ",", "36", ",", "49", ",", "64", ",", 
   "81", ",", "100"}], "}"}]], "Output",
 CellChangeTimes->{3.809711469642062*^9, 3.809711500249343*^9, 
  3.809711634222973*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"ec073424-79b0-48cd-b208-092c85c646a5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "16", ",", "36", ",", "64", ",", "100"}], "}"}]], "Output",
 CellChangeTimes->{3.809711469642062*^9, 3.809711500249343*^9, 
  3.8097116342259717`*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"4c4e208d-b812-42b3-bff1-9405718b7dfc"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["We can use matrix from on these list too. ", "Subtitle",
 CellChangeTimes->{{3.8097116055883164`*^9, 
  3.8097116201299076`*^9}},ExpressionUUID->"4e4c48d8-e9ff-4221-adf8-\
c0cd107432b6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"MatrixForm", "[", "sss", "]"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.809711639043869*^9, 3.8097116542028446`*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"fbf0b8d4-348a-4e52-acc8-70a86fcdcb29"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {"4"},
      {"16"},
      {"36"},
      {"64"},
      {"100"}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Print",
 CellChangeTimes->{3.809711654809414*^9},
 CellLabel->
  "During evaluation of \
In[44]:=",ExpressionUUID->"87f7935e-1b55-497c-b31c-4931a268d4e1"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["We can plot them too with ListPlot.", "Subtitle",
 CellChangeTimes->{{3.8097116730250607`*^9, 
  3.809711685945664*^9}},ExpressionUUID->"07161c86-c0eb-4d62-bde3-\
8f40278ec7bb"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ListPlot", "[", "sss", "]"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "This", " ", "is", " ", "a", " ", "list", " ", "of", " ", "lists", " ", 
    "otherwise", " ", "known", " ", "as", " ", "a", " ", "2", "D", " ", 
    "array"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ThreeDList", " ", "=", " ", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "\[IndentingNewLine]", 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot3D", "[", 
  RowBox[{"ThreeDList", ",", " ", 
   RowBox[{"Mesh", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8097116965577526`*^9, 3.809711720401721*^9}, {
  3.80971175250465*^9, 3.809711808218551*^9}, {3.8097118565174537`*^9, 
  3.80971194128308*^9}, {3.8097120084488564`*^9, 
  3.8097120394880915`*^9}},ExpressionUUID->"054c4f15-6d70-4fd5-9237-\
861d76103f1e"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`], 
    AbsoluteThickness[1.6], 
    PointBox[{{1., 4.}, {2., 16.}, {3., 36.}, {4., 64.}, {5., 
     100.}}]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 5.}, {0, 100.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.80971172155999*^9, 3.8097118101775236`*^9, {3.8097118658884115`*^9, 
   3.8097118760912437`*^9}, 3.809711942656269*^9},
 CellLabel->"Out[56]=",ExpressionUUID->"e574ffbc-98ab-4faa-abc5-3e66f382d88d"],

Cell[BoxData[
 Graphics3DBox[{
   GraphicsComplex3DBox[{{0., 0., 1.}, {1., 0., 0.}, {0., 1., 0.}}, {
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[GrayLevel[0.2]], 
      Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[Polygon3DBox[{{1, 2, 3}}]],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}},
    VertexNormals->{{0.5773502691896258, 0.5773502691896258, 
     0.5773502691896258}, {0.5773502691896258, 0.5773502691896258, 
     0.5773502691896258}, {0.5773502691896258, 0.5773502691896258, 
     0.5773502691896258}}], {}, {{}, {}}},
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{339.1760264255519, 257.7883727154204},
  ImageSizeRaw->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "RotationControl" -> 
    "Globe"},
  PlotRange->{Full, Full, All},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{0.5164957251777611, -3.062267502219912, 1.343781943144377},
  ViewVertical->{-0.06604783057346991, 0.3915930283598287, 
   0.9177649940025588}]], "Output",
 CellChangeTimes->{
  3.80971172155999*^9, 3.8097118101775236`*^9, {3.8097118658884115`*^9, 
   3.8097118760912437`*^9}, 3.8097119427344904`*^9},
 CellLabel->"Out[58]=",ExpressionUUID->"c7fe71d0-02cc-4669-8f3d-c978d9b705df"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
By default, ListPlot plots over the integers
Look up ListPlot in Help and modify the style of this plot.
* Add list ttt to the plot
* Join the points with a line
* Change the color and point size (using PlotStyle)\
\>", "Subtitle",
 CellChangeTimes->{{3.809712076672153*^9, 3.809712176961851*^9}, {
  3.809712716783675*^9, 
  3.8097127171518073`*^9}},ExpressionUUID->"c01426ad-b866-46fd-82b0-\
5787ad54045a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ttt", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"i", "^", "2"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "10"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", "ttt", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"plot1", " ", "=", " ", 
  RowBox[{"ListPlot", "[", 
   RowBox[{"ttt", ",", " ", 
    RowBox[{"PlotStyle", "\[Rule]", " ", 
     RowBox[{"{", "Orange", "}"}]}], ",", " ", 
    RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"plot2", " ", "=", " ", 
  RowBox[{"ListPlot", "[", 
   RowBox[{"ttt", ",", " ", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Blue", ",", " ", 
       RowBox[{"PointSize", "[", "Large", "]"}]}], "}"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"plot1", ",", " ", "plot2"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8097121884888277`*^9, 3.809712269196544*^9}, {
  3.8097123341775503`*^9, 3.809712368017481*^9}, {3.8097124213776894`*^9, 
  3.809712463001301*^9}, {3.8097125515399947`*^9, 3.809712700737842*^9}},
 CellLabel->
  "In[100]:=",ExpressionUUID->"386aab8f-a40b-4aae-8734-9bf8ac0152bb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "4", ",", "9", ",", "16", ",", "25", ",", "36", ",", "49", ",", 
   "64", ",", "81", ",", "100"}], "}"}]], "Print",
 CellChangeTimes->{{3.8097122266330976`*^9, 3.8097122485536666`*^9}, {
   3.809712347519528*^9, 3.8097123527667227`*^9}, {3.809712427674865*^9, 
   3.80971246472989*^9}, 3.8097125564350996`*^9, {3.8097126499765625`*^9, 
   3.80971270159521*^9}},
 CellLabel->
  "During evaluation of \
In[100]:=",ExpressionUUID->"fd777c83-3c0b-43c5-b72a-f765036fa353"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[1, 0.5, 0], PointSize[0.012833333333333334`], AbsoluteThickness[
     1.6], LineBox[{{1., 1.}, {2., 4.}, {3., 9.}, {4., 16.}, {5., 25.}, {6., 
      36.}, {7., 49.}, {8., 64.}, {9., 81.}, {10., 100.}}]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 10.}, {0, 100.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.8097122486026497`*^9, {3.809712347578511*^9, 3.809712352818564*^9}, {
   3.8097124277365656`*^9, 3.8097124647948756`*^9}, 3.8097125564930487`*^9, {
   3.809712650032689*^9, 3.809712701679038*^9}},
 CellLabel->
  "Out[102]=",ExpressionUUID->"280154e6-e329-478e-8708-5a246c555650"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0, 0, 1], PointSize[Large], AbsoluteThickness[1.6], 
    PointBox[{{1., 1.}, {2., 4.}, {3., 9.}, {4., 16.}, {5., 25.}, {6., 36.}, {
     7., 49.}, {8., 64.}, {9., 81.}, {10., 100.}}]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 10.}, {0, 100.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.8097122486026497`*^9, {3.809712347578511*^9, 3.809712352818564*^9}, {
   3.8097124277365656`*^9, 3.8097124647948756`*^9}, 3.8097125564930487`*^9, {
   3.809712650032689*^9, 3.8097127017590055`*^9}},
 CellLabel->
  "Out[103]=",ExpressionUUID->"cdbdabb2-65fa-4d7b-8a46-28d6f0fd6e02"],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, {}, 
     {RGBColor[1, 0.5, 0], PointSize[0.012833333333333334`], 
      AbsoluteThickness[1.6], 
      LineBox[{{1., 1.}, {2., 4.}, {3., 9.}, {4., 16.}, {5., 25.}, {6., 
       36.}, {7., 49.}, {8., 64.}, {9., 81.}, {10., 100.}}]}}, {{}, {}}}, {{}, 
    {RGBColor[0, 0, 1], PointSize[Large], AbsoluteThickness[1.6], 
     PointBox[{{1., 1.}, {2., 4.}, {3., 9.}, {4., 16.}, {5., 25.}, {6., 
      36.}, {7., 49.}, {8., 64.}, {9., 81.}, {10., 100.}}]}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 10.}, {0, 100.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.8097122486026497`*^9, {3.809712347578511*^9, 3.809712352818564*^9}, {
   3.8097124277365656`*^9, 3.8097124647948756`*^9}, 3.8097125564930487`*^9, {
   3.809712650032689*^9, 3.809712701766005*^9}},
 CellLabel->
  "Out[104]=",ExpressionUUID->"77c7d9d3-1792-4355-a436-4a847135f1b2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["Points and Vectors:",
  FontWeight->"Bold"],
 "\nWe will be working a lot with both of these in this class."
}], "Subtitle",
 CellChangeTimes->{{3.809712848183553*^9, 
  3.809712878087241*^9}},ExpressionUUID->"6dd8a661-96a7-4b2c-b4f5-\
ea7ad412eb19"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "we", " ", "are", " ", "crating", " ", "a", " ", "list", " ", "of", " ", 
   "3", "D", " ", "points", " ", "with", " ", "the", " ", "Table", " ", 
   "function"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.8097129455240183`*^9, 
  3.8097129919032593`*^9}},ExpressionUUID->"47682bba-ffa3-40f0-8350-\
dc77a438951b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"points3D", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", " ", 
       RowBox[{"i", " ", "+", " ", "2"}], ",", " ", 
       RowBox[{"-", "i"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "1", ",", " ", "5"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{
   "\"\<points3D =\>\"", " ", ",", "points3D", ",", " ", 
    "\"\< and in matrix form \>\"", ",", " ", 
    RowBox[{"MatrixForm", "[", "points3D", "]"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.809712897207456*^9, 3.809712942080369*^9}, {
   3.809713003111248*^9, 3.8097131125601273`*^9}, 3.8097131555235023`*^9, {
   3.8097131927262726`*^9, 
   3.8097132108718386`*^9}},ExpressionUUID->"1bd3d476-31b9-4e4a-9a1e-\
36931c3d45ff"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"points3D =\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "3", ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "4", ",", 
       RowBox[{"-", "2"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "5", ",", 
       RowBox[{"-", "3"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "6", ",", 
       RowBox[{"-", "4"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "7", ",", 
       RowBox[{"-", "5"}]}], "}"}]}], "}"}], 
   "\[InvisibleSpace]", "\<\" and in matrix form \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", "3", 
        RowBox[{"-", "1"}]},
       {"2", "4", 
        RowBox[{"-", "2"}]},
       {"3", "5", 
        RowBox[{"-", "3"}]},
       {"4", "6", 
        RowBox[{"-", "4"}]},
       {"5", "7", 
        RowBox[{"-", "5"}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm[
  "points3D =", {{1, 3, -1}, {2, 4, -2}, {3, 5, -3}, {4, 6, -4}, {5, 7, -5}}, 
   " and in matrix form ", 
   MatrixForm[{{1, 3, -1}, {2, 4, -2}, {3, 5, -3}, {4, 6, -4}, {5, 7, -5}}]],
  Editable->False]], "Print",
 CellChangeTimes->{3.809713114012619*^9, 3.8097131577287416`*^9},
 CellLabel->
  "During evaluation of \
In[107]:=",ExpressionUUID->"56251b4a-36ca-4d9b-a48e-5b4e1e18b0ed"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
This is how you access an individual point from the a list of lists:\
\>", "Subtitle",
 CellChangeTimes->{{3.809713216575819*^9, 
  3.8097132524866266`*^9}},ExpressionUUID->"defdc06e-6483-4937-a20f-\
49655e95ecec"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"points3D", "[", 
    RowBox[{"[", "1", "]"}], "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"points3D", "[", 
    RowBox[{"[", "2", "]"}], "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"points3D", "[", 
    RowBox[{"[", "3", "]"}], "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"points3D", "[", 
    RowBox[{"[", "3", "]"}], "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"points3D", "[", 
    RowBox[{"[", "5", "]"}], "]"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.8097132568237457`*^9, 3.809713325646618*^9}},
 CellLabel->
  "In[111]:=",ExpressionUUID->"5604f0fd-85ce-4e44-992c-3f3c2c2cd3dd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "3", ",", 
   RowBox[{"-", "1"}]}], "}"}]], "Print",
 CellChangeTimes->{{3.8097132817464104`*^9, 3.809713326294245*^9}},
 CellLabel->
  "During evaluation of \
In[111]:=",ExpressionUUID->"7efe80d3-9922-4f3e-a63b-ec056aa8377b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "4", ",", 
   RowBox[{"-", "2"}]}], "}"}]], "Print",
 CellChangeTimes->{{3.8097132817464104`*^9, 3.8097133262981267`*^9}},
 CellLabel->
  "During evaluation of \
In[111]:=",ExpressionUUID->"6b46d48f-bb37-4771-87c5-6e6998bf5a72"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "5", ",", 
   RowBox[{"-", "3"}]}], "}"}]], "Print",
 CellChangeTimes->{{3.8097132817464104`*^9, 3.8097133263011227`*^9}},
 CellLabel->
  "During evaluation of \
In[111]:=",ExpressionUUID->"ac403213-b404-42cd-91a3-f947bf45331e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "5", ",", 
   RowBox[{"-", "3"}]}], "}"}]], "Print",
 CellChangeTimes->{{3.8097132817464104`*^9, 3.8097133263041234`*^9}},
 CellLabel->
  "During evaluation of \
In[111]:=",ExpressionUUID->"bb14954a-775f-4944-a062-01eddc373418"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"5", ",", "7", ",", 
   RowBox[{"-", "5"}]}], "}"}]], "Print",
 CellChangeTimes->{{3.8097132817464104`*^9, 3.8097133263061237`*^9}},
 CellLabel->
  "During evaluation of \
In[111]:=",ExpressionUUID->"74a3e4c0-508e-4ba2-bc46-2b88d0ad8d12"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
This is how you access an individual element of the points from the a list of \
lists :\
\>", "Subtitle",
 CellChangeTimes->{{3.8097134191154337`*^9, 3.809713421664321*^9}, {
  3.8097136480779963`*^9, 
  3.8097136541659875`*^9}},ExpressionUUID->"f65fd2d5-f433-4095-b238-\
d190d5ddfaee"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"points3D", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"points3D", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "2"}], "]"}], "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"points3D", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "3"}], "]"}], "]"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.809713688312918*^9, 3.809713730385577*^9}, {
  3.8097137624467793`*^9, 3.8097137667977734`*^9}},
 CellLabel->
  "In[117]:=",ExpressionUUID->"e0498d64-9a07-41a6-a72c-ac7db4357ea2"],

Cell[CellGroupData[{

Cell[BoxData["1"], "Print",
 CellChangeTimes->{3.8097137134864073`*^9, 3.809713767263194*^9},
 CellLabel->
  "During evaluation of \
In[117]:=",ExpressionUUID->"8e9f1c82-722c-4ba0-9cae-09c6480056d8"],

Cell[BoxData["3"], "Print",
 CellChangeTimes->{3.8097137134864073`*^9, 3.8097137672664185`*^9},
 CellLabel->
  "During evaluation of \
In[117]:=",ExpressionUUID->"b59797f5-1726-4018-a4ff-6a30d7121410"],

Cell[BoxData[
 RowBox[{"-", "1"}]], "Print",
 CellChangeTimes->{3.8097137134864073`*^9, 3.809713767270419*^9},
 CellLabel->
  "During evaluation of \
In[117]:=",ExpressionUUID->"fabbc5f7-7553-4317-9b3d-9c79abc9ac77"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ccc", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "j", ",", " ", "4"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "1", ",", " ", "3"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"j", ",", " ", "3", ",", " ", "4"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{
   "\"\<ccc = \>\"", ",", " ", "ccc", ",", " ", 
    "\"\< and ccc in matrix form = \>\"", ",", " ", 
    RowBox[{"MatrixForm", "[", "ccc", "]"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.8097139383202996`*^9, 3.80971402926966*^9}},
 CellLabel->
  "In[122]:=",ExpressionUUID->"68d14c08-5f14-4a79-9c1e-f3ef02e588ff"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"ccc = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "3", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "4", ",", "4"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "3", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "4", ",", "4"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "3", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "4", ",", "4"}], "}"}]}], "}"}]}], "}"}], 
   "\[InvisibleSpace]", "\<\" and ccc in matrix form = \"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"(", "\[NoBreak]", 
         TagBox[GridBox[{
            {"1"},
            {"3"},
            {"4"}
           },
           GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.5599999999999999]}, 
               Offset[0.27999999999999997`]}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}}],
          Column], "\[NoBreak]", ")"}], 
        RowBox[{"(", "\[NoBreak]", 
         TagBox[GridBox[{
            {"1"},
            {"4"},
            {"4"}
           },
           GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.5599999999999999]}, 
               Offset[0.27999999999999997`]}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}}],
          Column], "\[NoBreak]", ")"}]},
       {
        RowBox[{"(", "\[NoBreak]", 
         TagBox[GridBox[{
            {"2"},
            {"3"},
            {"4"}
           },
           GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.5599999999999999]}, 
               Offset[0.27999999999999997`]}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}}],
          Column], "\[NoBreak]", ")"}], 
        RowBox[{"(", "\[NoBreak]", 
         TagBox[GridBox[{
            {"2"},
            {"4"},
            {"4"}
           },
           GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.5599999999999999]}, 
               Offset[0.27999999999999997`]}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}}],
          Column], "\[NoBreak]", ")"}]},
       {
        RowBox[{"(", "\[NoBreak]", 
         TagBox[GridBox[{
            {"3"},
            {"3"},
            {"4"}
           },
           GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.5599999999999999]}, 
               Offset[0.27999999999999997`]}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}}],
          Column], "\[NoBreak]", ")"}], 
        RowBox[{"(", "\[NoBreak]", 
         TagBox[GridBox[{
            {"3"},
            {"4"},
            {"4"}
           },
           GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.5599999999999999]}, 
               Offset[0.27999999999999997`]}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}}],
          Column], "\[NoBreak]", ")"}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm[
  "ccc = ", {{{1, 3, 4}, {1, 4, 4}}, {{2, 3, 4}, {2, 4, 4}}, {{3, 3, 4}, {3, 
   4, 4}}}, " and ccc in matrix form = ", 
   MatrixForm[{{{1, 3, 4}, {1, 4, 4}}, {{2, 3, 4}, {2, 4, 4}}, {{3, 3, 4}, {3,
     4, 4}}}]],
  Editable->False]], "Print",
 CellChangeTimes->{3.8097140383552513`*^9},
 CellLabel->
  "During evaluation of \
In[122]:=",ExpressionUUID->"3b0642b2-2dd3-431e-b925-f6c952846a2f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Notice that arrays in MM start at 1 and not 0 like most languages. Also \
notice that ccc is not a list of lists, instead it is a list of lists of \
lists, also known as a 3D array.\
\>", "Subtitle",
 CellChangeTimes->{{3.809714071981205*^9, 3.809714092821166*^9}, {
  3.809714143189039*^9, 
  3.8097142021089287`*^9}},ExpressionUUID->"61b020be-1def-4480-826f-\
43fd1f27530b"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "Accessing", " ", "a", " ", "list", " ", "in", " ", "3", "D", " ", 
   "array"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.809714218136923*^9, 3.809714235388898*^9}, 
   3.8097143695804977`*^9},ExpressionUUID->"b4781935-14df-4f7c-98c7-\
297dd97a56a2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"ccc", "[", 
    RowBox[{"[", "1", "]"}], "]"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.809714238750891*^9, 3.8097142499888735`*^9}},
 CellLabel->
  "In[124]:=",ExpressionUUID->"2f2c62f0-9ef1-456b-9e78-0a27cc1bbbdb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4", ",", "4"}], "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.8097142517261715`*^9},
 CellLabel->
  "During evaluation of \
In[124]:=",ExpressionUUID->"6ba830f0-f094-4012-a90b-2f510d0bf5fe"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Accessing", " ", "a", " ", "list", " ", "of", " ", "lists", " ", "in", 
    " ", "a", " ", "3", "D", " ", "array"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"ccc", "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], ";"}]}]], "Input",
 CellChangeTimes->{{3.809714255920233*^9, 3.809714355940674*^9}},
 CellLabel->
  "In[127]:=",ExpressionUUID->"6c9d074d-d744-4ac0-a454-8706a3e97e4b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "3", ",", "4"}], "}"}]], "Print",
 CellChangeTimes->{{3.8097143405892324`*^9, 3.8097143567328343`*^9}},
 CellLabel->
  "During evaluation of \
In[127]:=",ExpressionUUID->"312b3f8a-db9f-4598-8b04-39d7eaec63f8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Accessing", " ", "a", " ", "single", " ", "element", " ", "in", " ", "a", 
    " ", "3", "D", " ", "array"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"ccc", "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}], "]"}], 
   ";"}]}]], "Input",
 CellChangeTimes->{{3.8097143620976562`*^9, 3.809714458100485*^9}},
 CellLabel->
  "In[129]:=",ExpressionUUID->"f2568e36-3694-4c9f-8776-04b378b4c078"],

Cell[BoxData["3"], "Print",
 CellChangeTimes->{{3.8097144540247507`*^9, 3.80971445850747*^9}},
 CellLabel->
  "During evaluation of \
In[129]:=",ExpressionUUID->"2b56dbb1-fd95-4e24-8710-e5aadda4958e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["Curves:",
  FontWeight->"Bold"],
 "\nLet us move on to curves, something that you will become very familiar \
with in this class."
}], "Subtitle",
 CellChangeTimes->{{3.809714488907892*^9, 
  3.80971454470845*^9}},ExpressionUUID->"89231327-69c5-466d-b1b6-\
79d607572c3a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Parametric", " ", 
    RowBox[{"curve", ":", " ", "Circle"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"myCurve", "[", "t_", "]"}], " ", ":=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cos", "[", "t", "]"}], ",", " ", 
       RowBox[{"Sin", "[", "t", "]"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cos", "[", "t", "]"}], ",", " ", 
       RowBox[{"Sin", "[", "t", "]"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", " ", 
       RowBox[{"2", "Pi"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Sin", "[", "t", "]"}], ",", " ", 
       RowBox[{"Cos", "[", "t", "]"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", " ", 
       RowBox[{"2", "Pi"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"t", " ", "*", " ", 
        RowBox[{"Cos", "[", "t", "]"}]}], ",", " ", 
       RowBox[{"t", " ", "*", " ", 
        RowBox[{"Sin", "[", "t", "]"}]}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", 
       RowBox[{"4", "Pi"}]}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8097145492913103`*^9, 3.8097148086854353`*^9}, {
  3.809714863079734*^9, 3.8097150257964287`*^9}},
 CellLabel->
  "In[150]:=",ExpressionUUID->"5d27ab9a-f9ec-46d1-bb00-fbb8885da48a"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
+j/+kmeR
       "]]},
     Annotation[#, "Charting`Private`Tag$34460#1"]& ]}, {}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "ScalingFunctions" -> 
    None},
  PlotRange->{{-0.9999998831351729, 1.}, {-0.9999998592812047, 
   0.9999998782744886}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.809714668080553*^9, 3.809714719238964*^9}, 
   3.809714812574442*^9, 3.8097148875184917`*^9, 3.809714942664572*^9, 
   3.8097150270887904`*^9},
 CellLabel->
  "Out[151]=",ExpressionUUID->"c51c46e0-dcae-4d06-9610-1f8bd81baf19"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
YmeR
       "]]},
     Annotation[#, "Charting`Private`Tag$34486#1"]& ]}, {}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "ScalingFunctions" -> 
    None},
  PlotRange->{{-0.9999998592812047, 0.9999998782744886}, {-0.9999998831351729,
    1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.809714668080553*^9, 3.809714719238964*^9}, 
   3.809714812574442*^9, 3.8097148875184917`*^9, 3.809714942664572*^9, 
   3.809715027147356*^9},
 CellLabel->
  "Out[152]=",ExpressionUUID->"43562025-5122-40dd-ac32-07c5f3060d82"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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

       "]]},
     Annotation[#, "Charting`Private`Tag$34512#1"]& ]}, {}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "ScalingFunctions" -> 
    None},
  PlotRange->{{-9.477290178714487, 
   12.566370614359172`}, {-11.040702484683054`, 7.916727358313017}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.809714668080553*^9, 3.809714719238964*^9}, 
   3.809714812574442*^9, 3.8097148875184917`*^9, 3.809714942664572*^9, 
   3.8097150272343583`*^9},
 CellLabel->
  "Out[153]=",ExpressionUUID->"15258e61-0e59-4ab4-8e28-6f2b0af5ae53"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["Loops :",
  FontWeight->"Bold"],
 "\nIn MM we have Do, form, and While loops which we saw when we worked with \
the \[OpenCurlyDoubleQuote]Module\[CloseCurlyDoubleQuote] command. Table also \
acts as a loop and saves the value in the table.\n"
}], "Subtitle",
 CellChangeTimes->{{3.8097150514623785`*^9, 
  3.809715136114787*^9}},ExpressionUUID->"cb0e90c8-40da-44be-9eed-\
28a81cffa58c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"i", " ", "=", " ", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Do", "[", 
    RowBox[{
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"j", " ", "=", " ", 
        RowBox[{"i", "*", "3"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{
        "\"\<i = \>\"", ",", " ", "i", ",", " ", "\"\<, j = \>\"", ",", " ", 
         "j"}], "]"}], ";"}], ")"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "0", ",", " ", "3"}], "}"}]}], 
    "\[IndentingNewLine]", "]"}], ";"}], " "}]}], "Input",
 CellChangeTimes->{{3.809715146643199*^9, 3.809715240884577*^9}, 
   3.809735533973711*^9},
 CellLabel->"In[43]:=",ExpressionUUID->"dc45718c-e2e3-4685-a33c-a7d06e417895"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"i = \"\>", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "\<\", j = \"\>", "\[InvisibleSpace]", "0"}],
  SequenceForm["i = ", 0, ", j = ", 0],
  Editable->False]], "Print",
 CellChangeTimes->{3.809715247734164*^9, 3.809735534878862*^9},
 CellLabel->
  "During evaluation of \
In[43]:=",ExpressionUUID->"8e2701c7-25fd-418e-970f-0314c2ffe1c9"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"i = \"\>", "\[InvisibleSpace]", "1", 
   "\[InvisibleSpace]", "\<\", j = \"\>", "\[InvisibleSpace]", "3"}],
  SequenceForm["i = ", 1, ", j = ", 3],
  Editable->False]], "Print",
 CellChangeTimes->{3.809715247734164*^9, 3.809735534887455*^9},
 CellLabel->
  "During evaluation of \
In[43]:=",ExpressionUUID->"945b1051-7367-4a9a-9af6-a91c5a1df0df"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"i = \"\>", "\[InvisibleSpace]", "2", 
   "\[InvisibleSpace]", "\<\", j = \"\>", "\[InvisibleSpace]", "6"}],
  SequenceForm["i = ", 2, ", j = ", 6],
  Editable->False]], "Print",
 CellChangeTimes->{3.809715247734164*^9, 3.809735534892455*^9},
 CellLabel->
  "During evaluation of \
In[43]:=",ExpressionUUID->"edd68bc6-1240-494d-993d-5e6d5ab630ff"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"i = \"\>", "\[InvisibleSpace]", "3", 
   "\[InvisibleSpace]", "\<\", j = \"\>", "\[InvisibleSpace]", "9"}],
  SequenceForm["i = ", 3, ", j = ", 9],
  Editable->False]], "Print",
 CellChangeTimes->{3.809715247734164*^9, 3.809735534894455*^9},
 CellLabel->
  "During evaluation of \
In[43]:=",ExpressionUUID->"1c187e15-01e0-4913-8d2d-1b50c4616479"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"bb", " ", "holds", " ", "some", " ", 
    RowBox[{"(", 
     RowBox[{"x", ",", "y"}], ")"}], " ", "points"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"bb", " ", "=", " ", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "0"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "2"}], ",", " ", "0"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "2"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"2", ",", " ", "0.0"}], "}"}]}], "\[IndentingNewLine]", 
      "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "calcualte", " ", "the", " ", "centroid", " ", "of", " ", "these", " ", 
     "four", " ", "points"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"center", " ", "=", " ", 
     RowBox[{
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{"bb", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"i", ",", " ", "1", ",", " ", "4"}], "}"}]}], "]"}], "/", 
      " ", "4"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "find", " ", "the", " ", "distance", " ", "of", " ", "each", " ", "point",
      " ", "to", " ", "the", " ", "center"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"myDistanceTable", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Norm", "[", 
        RowBox[{
         RowBox[{"bb", "[", 
          RowBox[{"[", "i", "]"}], "]"}], " ", "-", " ", "center"}], "]"}], 
       ",", " ", 
       RowBox[{"{", 
        RowBox[{"i", ",", " ", "1", ",", " ", "4"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Distance from bb_i to center = \>\"", ",", " ", 
      RowBox[{"MatrixForm", "[", "myDistanceTable", "]"}]}], "]"}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.809715272332959*^9, 3.8097154777875576`*^9}, {
  3.809715511631487*^9, 3.809715699048121*^9}},
 CellLabel->
  "In[166]:=",ExpressionUUID->"32911530-8aa3-40fe-85f8-c68be74c0372"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Distance from bb_i to center = \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {"0.5`"},
        {"2.0615528128088303`"},
        {"1.5`"},
        {"2.0615528128088303`"}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["Distance from bb_i to center = ", 
   MatrixForm[{0.5, 2.0615528128088303`, 1.5, 2.0615528128088303`}]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.809715686456319*^9, 3.809715700086759*^9}},
 CellLabel->
  "During evaluation of \
In[166]:=",ExpressionUUID->"ec808561-cd6d-4945-896e-3c0f0de67300"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Graphics Entities/Objects:
MM has functions such as Graphics and PrametricPlot that return graphics \
objects. These are displayed by omitting a semicolon after the function or in \
the \[OpenCurlyDoubleQuote]Show\[CloseCurlyDoubleQuote] function. Both \
methods are demonstrated below.
*** Important to know that you can NOT compute with graphics objects!***\
\>", "Subtitle",
 CellChangeTimes->{{3.8097157305300617`*^9, 3.809715879705773*^9}, {
  3.809715918497699*^9, 
  3.8097160068673353`*^9}},ExpressionUUID->"5145cabb-2af6-4556-9933-\
e5be95475351"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"myPoints", " ", "=", " ", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"PointSize", "[", "Large", "]"}], ",", " ", 
      RowBox[{"Point", "[", "bb", "]"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myPolygon", " ", "=", " ", 
   RowBox[{"Graphics", "[", 
    RowBox[{"Line", "[", "bb", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"{", 
   RowBox[{"myPoints", ",", " ", "myPolygon"}], "}"}], 
  "]"}], "\[IndentingNewLine]", "myPolygon", "\[IndentingNewLine]", \
"myPoints"}], "Input",
 CellChangeTimes->{{3.8097160174292097`*^9, 3.809716075314396*^9}, {
  3.809716122723152*^9, 3.8097161380022774`*^9}, {3.8097163589208565`*^9, 
  3.8097164762356014`*^9}, {3.8097165810444345`*^9, 3.8097166342483263`*^9}},
 CellLabel->
  "In[190]:=",ExpressionUUID->"a45d3fc6-c13f-4e00-a79e-fba628958d83"],

Cell[BoxData[
 GraphicsBox[{
   {PointSize[Large], PointBox[{{0, 0}, {-2, 0}, {0, 2}, {2, 0.}}]}, 
   LineBox[{{0, 0}, {-2, 0}, {0, 2}, {2, 0.}}]}]], "Output",
 CellChangeTimes->{{3.8097164621624312`*^9, 3.809716476806159*^9}, {
  3.809716582165377*^9, 3.809716635459004*^9}},
 CellLabel->
  "Out[192]=",ExpressionUUID->"8e032674-fcbe-4d3a-b624-fec22f7342ae"],

Cell[BoxData[
 GraphicsBox[LineBox[{{0, 0}, {-2, 0}, {0, 2}, {2, 0.}}]]], "Output",
 CellChangeTimes->{{3.8097164621624312`*^9, 3.809716476806159*^9}, {
  3.809716582165377*^9, 3.809716635463002*^9}},
 CellLabel->
  "Out[193]=",ExpressionUUID->"4ef30300-0dcb-4515-8bce-4a6a8bdbc6ac"],

Cell[BoxData[
 GraphicsBox[
  {PointSize[Large], PointBox[{{0, 0}, {-2, 0}, {0, 2}, {2, 0.}}]}]], "Output",
 CellChangeTimes->{{3.8097164621624312`*^9, 3.809716476806159*^9}, {
  3.809716582165377*^9, 3.8097166354660015`*^9}},
 CellLabel->
  "Out[194]=",ExpressionUUID->"b71ead34-5ce7-4d81-b0ee-523df1ed66e2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["Global Variables:",
  FontWeight->"Bold"],
 "\nAs discussed before, by default all the variables are global.\nIf you \
want to specify a local variable in a routine, you will need to use the \
\[OpenCurlyDoubleQuote]Module\[CloseCurlyDoubleQuote] command.\nTo clear or \
remove global variables, at the start of your program add the command \
\[OpenCurlyDoubleQuote]Clear[\[OpenCurlyDoubleQuote]Global\[CloseCurlyQuote]*\
\[CloseCurlyDoubleQuote]];\[CloseCurlyDoubleQuote] or \
\[OpenCurlyDoubleQuote]Remove[\[OpenCurlyDoubleQuote]Global\[CloseCurlyQuote]*\
\[CloseCurlyDoubleQuote]];\[CloseCurlyDoubleQuote], respectively.\n(When you \
run the next three cells with Evaluate all cells, notice that \
\[OpenCurlyDoubleQuote]check globals\[CloseCurlyDoubleQuote] will turn blue \
(or whatever your undefined variable color is defined as.)\nBe aware that \
variables are shared across open notebooks!! This can cause problems if two \
notebooks are running a Manipulate environment with the same variables.\n"
}], "Subtitle",
 CellChangeTimes->{{3.8097166612642846`*^9, 3.8097166903692293`*^9}, {
  3.8097168660408964`*^9, 3.809717048336781*^9}, {3.809717274080127*^9, 
  3.809717412445922*^9}, {3.80971757871056*^9, 
  3.8097175861430845`*^9}},ExpressionUUID->"f7cef123-b18c-4f94-bc33-\
e8612bfaaa04"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"execute", " ", "this", " ", "cell"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"checkglobals", " ", "=", " ", "1"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", "\"\<Global variables include: \>\"", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Names", "[", "\"\<Global`*\>\"", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6957490403901415`*^9, 3.6957491837408323`*^9}, {
  3.6957492213082294`*^9, 3.6957492353652554`*^9}},
 CellLabel->
  "In[195]:=",ExpressionUUID->"5a5c19f7-8216-4b38-afd7-52b854aa3f7b"],

Cell[BoxData["\<\"Global variables include: \"\>"], "Print",
 CellChangeTimes->{3.8097174818748355`*^9},
 CellLabel->
  "During evaluation of \
In[195]:=",ExpressionUUID->"136bfa2e-bde6-4210-b421-944e46141a66"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"b\"\>", ",", "\<\"bb\"\>", ",", "\<\"ccc\"\>", 
   ",", "\<\"center\"\>", ",", "\<\"checkglobals\"\>", ",", "\<\"Cost\"\>", 
   ",", "\<\"f\"\>", ",", "\<\"ff\"\>", ",", "\<\"i\"\>", ",", "\<\"j\"\>", 
   ",", "\<\"localX\"\>", ",", "\<\"localX$\"\>", ",", "\<\"localY\"\>", 
   ",", "\<\"localY$\"\>", ",", "\<\"myCurve\"\>", 
   ",", "\<\"myDistanceTable\"\>", ",", "\<\"myNextNextAnswer\"\>", 
   ",", "\<\"myPoints\"\>", ",", "\<\"myPolygon\"\>", 
   ",", "\<\"myPolygons\"\>", ",", "\<\"numHolder\"\>", ",", "\<\"plot1\"\>", 
   ",", "\<\"plot2\"\>", ",", "\<\"points3D\"\>", ",", "\<\"polygon\"\>", 
   ",", "\<\"sss\"\>", ",", "\<\"t\"\>", ",", "\<\"testFunction3\"\>", 
   ",", "\<\"ThreeDList\"\>", ",", "\<\"ttt\"\>", ",", "\<\"x\"\>", 
   ",", "\<\"x0\"\>", ",", "\<\"x1\"\>", ",", "\<\"x1$\"\>", 
   ",", "\<\"x$\"\>", ",", "\<\"$16\"\>", ",", "\<\"$17\"\>", 
   ",", "\<\"$18\"\>", ",", "\<\"$19\"\>", ",", "\<\"$20\"\>", 
   ",", "\<\"$21\"\>", ",", "\<\"$22\"\>", ",", "\<\"$23\"\>", 
   ",", "\<\"$24\"\>", ",", "\<\"$25\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.8097174818788347`*^9},
 CellLabel->
  "Out[197]=",ExpressionUUID->"d1ad3ade-4e31-42a8-ab35-f21b948673f3"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Now", " ", "execute", " ", "this", " ", "cell"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "This", " ", "clears", " ", "the", " ", "variable", " ", "references", " ",
     "completely"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}], ";"}]}]], "Input",
 CellChangeTimes->{{3.7118204328262525`*^9, 3.7118204698017187`*^9}},
 CellLabel->
  "In[201]:=",ExpressionUUID->"76bc59c5-fda7-430f-8291-c72ac78bb93c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Variables", " ", "exist", " ", "but", " ", "no", " ", "value", " ", 
    "assigned"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
    "Print", "[", "\"\<Global variables after Clear include: \>\"", "]"}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"Names", "[", "\"\<Global`*\>\"", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7118204328262525`*^9, 3.7118204698017187`*^9}},
 CellLabel->
  "In[202]:=",ExpressionUUID->"8908a176-a6a6-48c0-a8ee-90d8aebf5c08"],

Cell[BoxData["\<\"Global variables after Clear include: \"\>"], "Print",
 CellChangeTimes->{{3.809717534266626*^9, 3.809717540267481*^9}},
 CellLabel->
  "During evaluation of \
In[202]:=",ExpressionUUID->"cfe8ca79-8140-4527-bdb9-db429fa4e013"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"b\"\>", ",", "\<\"bb\"\>", ",", "\<\"ccc\"\>", 
   ",", "\<\"center\"\>", ",", "\<\"checkglobals\"\>", ",", "\<\"Cost\"\>", 
   ",", "\<\"f\"\>", ",", "\<\"ff\"\>", ",", "\<\"i\"\>", ",", "\<\"j\"\>", 
   ",", "\<\"localX\"\>", ",", "\<\"localX$\"\>", ",", "\<\"localY\"\>", 
   ",", "\<\"localY$\"\>", ",", "\<\"myCurve\"\>", 
   ",", "\<\"myDistanceTable\"\>", ",", "\<\"myNextNextAnswer\"\>", 
   ",", "\<\"myPoints\"\>", ",", "\<\"myPolygon\"\>", 
   ",", "\<\"myPolygons\"\>", ",", "\<\"numHolder\"\>", ",", "\<\"plot1\"\>", 
   ",", "\<\"plot2\"\>", ",", "\<\"points3D\"\>", ",", "\<\"polygon\"\>", 
   ",", "\<\"sss\"\>", ",", "\<\"t\"\>", ",", "\<\"testFunction3\"\>", 
   ",", "\<\"ThreeDList\"\>", ",", "\<\"ttt\"\>", ",", "\<\"x\"\>", 
   ",", "\<\"x0\"\>", ",", "\<\"x1\"\>", ",", "\<\"x1$\"\>", 
   ",", "\<\"x$\"\>", ",", "\<\"$16\"\>", ",", "\<\"$17\"\>", 
   ",", "\<\"$18\"\>", ",", "\<\"$19\"\>", ",", "\<\"$20\"\>", 
   ",", "\<\"$21\"\>", ",", "\<\"$22\"\>", ",", "\<\"$23\"\>", 
   ",", "\<\"$24\"\>", ",", "\<\"$25\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.8097175342716246`*^9, 3.80971754027148*^9}},
 CellLabel->
  "Out[203]=",ExpressionUUID->"0ad0384e-7f35-47dc-b3d1-e3dfbdba2e81"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Now", " ", "execute", " ", "this", " ", "cell"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "This", " ", "removes", " ", "the", " ", "variable", " ", "references", 
    " ", "completely"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Remove", "[", "\"\<Global`*\>\"", "]"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"No", " ", "variables"}], "..."}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
    "Print", "[", "\"\<Global variables after Remove include: \>\"", "]"}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"Names", "[", "\"\<Global`*\>\"", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6957490403901415`*^9, 3.695749207014604*^9}, {
  3.6957492470380754`*^9, 3.695749255281891*^9}, {3.6957493031459775`*^9, 
  3.6957493035067782`*^9}},
 CellLabel->
  "In[204]:=",ExpressionUUID->"ef90d0a5-a308-4137-8843-354231790979"],

Cell[BoxData["\<\"Global variables after Remove include: \"\>"], "Print",
 CellChangeTimes->{3.8097175667909365`*^9},
 CellLabel->
  "During evaluation of \
In[204]:=",ExpressionUUID->"c764c75a-1b2d-40f1-a409-d2a45cbdf049"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.8097175668460255`*^9},
 CellLabel->
  "Out[206]=",ExpressionUUID->"2e539373-efc8-4ae8-9d91-866e0914569f"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1718, 1341},
WindowMargins->{{Automatic, 0}, {Automatic, 0}},
TaggingRules->{"TryRealOnly" -> False},
FrontEndVersion->"12.1 for Microsoft Windows (64-bit) (June 19, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"7624def7-ebfb-4411-be56-1f9e8a37b127"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 755, 15, 100, "Title",ExpressionUUID->"2ae509ba-0495-4e7d-94cc-0c6563b5d256"],
Cell[1338, 39, 408, 9, 113, "Subtitle",ExpressionUUID->"eaae54c0-3264-414d-ade0-caeae0c5f4d4"],
Cell[1749, 50, 1003, 19, 277, "Subtitle",ExpressionUUID->"9790c444-3b1d-43a0-8dca-23dbfbbd33ae"],
Cell[2755, 71, 671, 13, 213, "Subtitle",ExpressionUUID->"4ac7822a-2b8f-4682-9bc8-0497816ab03e"],
Cell[3429, 86, 779, 26, 88, "Input",ExpressionUUID->"89c786b2-1b43-4724-b14a-b32ac8cf5329"],
Cell[CellGroupData[{
Cell[4233, 116, 171, 3, 32, "Input",ExpressionUUID->"14145cfd-813c-4eaa-8807-a878d03da609"],
Cell[4407, 121, 344, 9, 27, "Print",ExpressionUUID->"d19ec91f-65e5-42a7-a90b-04612f1ba415"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4788, 135, 602, 11, 245, "Subtitle",ExpressionUUID->"1a07860a-e947-4558-a4b2-c20823924346"],
Cell[CellGroupData[{
Cell[5415, 150, 319, 7, 28, "Input",ExpressionUUID->"8aa8e929-4a3d-4a31-945c-9d9f658b1632"],
Cell[5737, 159, 20672, 358, 230, "Output",ExpressionUUID->"ecd92fb6-de8b-4201-b259-640939673860"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26446, 522, 397, 8, 28, "Input",ExpressionUUID->"18102628-a903-409b-9603-2dbe69dc5c28"],
Cell[26846, 532, 20609, 357, 64, "Output",ExpressionUUID->"b944d0d4-cad0-4cad-bef6-5038ba7746d8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47492, 894, 388, 8, 28, "Input",ExpressionUUID->"7827f635-5911-415c-8cd6-ced11b061f9f"],
Cell[47883, 904, 20630, 358, 449, "Output",ExpressionUUID->"c48bab09-38e9-472f-b82b-08a5ad056a3b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[68550, 1267, 387, 8, 28, "Input",ExpressionUUID->"1f2e33d0-4f45-44b4-9a54-54e9dbff0a30"],
Cell[68940, 1277, 20629, 358, 360, "Output",ExpressionUUID->"931c4b0e-bcd5-4a86-b485-d0e6e9c636c3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[89606, 1640, 463, 10, 28, "Input",ExpressionUUID->"14b1c108-bd10-45a3-8fc1-96e16fef2edb"],
Cell[90072, 1652, 20660, 359, 190, "Output",ExpressionUUID->"a836c794-91d6-4075-9295-700fe91b30d1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[110769, 2016, 415, 9, 28, "Input",ExpressionUUID->"c13eb55e-6e15-4923-95a3-a176bc37d7fe"],
Cell[111187, 2027, 20726, 360, 133, "Output",ExpressionUUID->"8b22194b-2d31-4e37-862d-c75ed4a5bc46"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[131962, 2393, 504, 9, 85, "Subtitle",ExpressionUUID->"a5c12f73-3a56-4940-8abf-c6a94da24a9b"],
Cell[132469, 2404, 154, 3, 28, "Input",ExpressionUUID->"68629c38-4d52-4e9d-a025-8cd2d11963b8"],
Cell[CellGroupData[{
Cell[132648, 2411, 354, 8, 28, "Input",ExpressionUUID->"b4feed8b-7da9-4564-84ef-a85f550a67d2"],
Cell[133005, 2421, 20764, 360, 230, "Output",ExpressionUUID->"3e652780-061a-4d44-92ea-9c6e7d52693c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[153806, 2786, 690, 18, 28, "Input",ExpressionUUID->"73b9bb24-fe81-481d-bf00-45ddb5ddad9c"],
Cell[154499, 2806, 58892, 1046, 232, "Output",ExpressionUUID->"121f1ea1-a309-43af-a60a-92ee4050b007"]
}, Open  ]],
Cell[CellGroupData[{
Cell[213428, 3857, 624, 16, 28, "Input",ExpressionUUID->"d7008861-b2bd-4088-a617-445eb9c68d47"],
Cell[214055, 3875, 58923, 1047, 232, "Output",ExpressionUUID->"14ec495f-bfa4-4f3f-a11f-5d36b3b30626"]
}, Open  ]],
Cell[CellGroupData[{
Cell[273015, 4927, 517, 12, 28, "Input",ExpressionUUID->"9b3c0470-9ed3-4ef0-9c12-5a4f0f8e819f"],
Cell[273535, 4941, 25376, 460, 193, "Output",ExpressionUUID->"1cc98b17-8e92-485a-8c08-791d87259aff"]
}, Open  ]],
Cell[CellGroupData[{
Cell[298948, 5406, 569, 13, 28, "Input",ExpressionUUID->"40faae4e-0478-4e78-b785-d41d115f45e5"],
Cell[299520, 5421, 29813, 537, 193, "Output",ExpressionUUID->"2226ec65-97fa-448c-a260-6879c839fb6c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[329370, 5963, 665, 16, 28, "Input",ExpressionUUID->"edfdba6d-09b9-44ca-acd7-5786af8b87fa"],
Cell[330038, 5981, 29860, 538, 193, "Output",ExpressionUUID->"5ec9693d-0995-4996-9efb-229f29f6b1ab"]
}, Open  ]],
Cell[CellGroupData[{
Cell[359935, 6524, 679, 17, 28, "Input",ExpressionUUID->"b3807065-e1f2-4de5-91ac-320da3ecb4d2"],
Cell[360617, 6543, 67325, 1220, 232, "Output",ExpressionUUID->"404a9183-2b41-4bbf-b8bc-15a14900136c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[427991, 7769, 297, 6, 53, "Subtitle",ExpressionUUID->"d8801bbb-90b6-4dd1-a9e8-e1bc699e97bd"],
Cell[428291, 7777, 1338, 22, 277, "Subtitle",ExpressionUUID->"a3d2bdf0-16b5-4804-9de4-4bc70e32d78e"],
Cell[CellGroupData[{
Cell[429654, 7803, 806, 20, 28, "Input",ExpressionUUID->"eb4c0ebb-4584-499e-b77a-fdf565b7eb64"],
Cell[430463, 7825, 1717, 34, 327, "Output",ExpressionUUID->"ffb62a07-9971-4b3f-9f0d-e56786c39285"]
}, Open  ]],
Cell[CellGroupData[{
Cell[432217, 7864, 596, 15, 28, "Input",ExpressionUUID->"0c258070-7451-48ed-a12d-214e43f6c681"],
Cell[432816, 7881, 1646, 33, 327, "Output",ExpressionUUID->"f1affb8b-bc50-4247-aed5-9f125d817d07"]
}, Open  ]],
Cell[CellGroupData[{
Cell[434499, 7919, 885, 22, 28, "Input",ExpressionUUID->"57876610-85e3-44b4-a893-f2f4ea4dcdf7"],
Cell[435387, 7943, 1777, 36, 327, "Output",ExpressionUUID->"437cb73f-4bd1-4b0b-8593-508e6e630ffe"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[437213, 7985, 516, 9, 85, "Subtitle",ExpressionUUID->"f0380076-e215-4000-98df-5f51f517ae8b"],
Cell[437732, 7996, 337, 7, 85, "Subtitle",ExpressionUUID->"ed0f72cf-3377-4ffd-8a4c-09e6408f2356"],
Cell[438072, 8005, 322, 7, 85, "Subtitle",ExpressionUUID->"e722aef4-5d95-4b58-ba4e-fc9a3fa41a32"],
Cell[CellGroupData[{
Cell[438419, 8016, 1529, 36, 181, "Input",ExpressionUUID->"187d3441-8af8-48a4-95ab-97b36b0decfa"],
Cell[439951, 8054, 199, 3, 32, "Output",ExpressionUUID->"6ccc7011-7ee1-45d4-b46b-6e5f678ca727"],
Cell[440153, 8059, 233, 4, 32, "Output",ExpressionUUID->"3e8e9ff4-4e43-414c-b423-33d82360dc09"],
Cell[440389, 8065, 410, 10, 22, "Print",ExpressionUUID->"2d8a9925-a812-428f-9383-c3b48ac89c5e"]
}, Open  ]],
Cell[440814, 8078, 154, 3, 28, "Input",ExpressionUUID->"014c4db6-27ee-4f21-9b80-9cc40ce1cc61"]
}, Open  ]],
Cell[CellGroupData[{
Cell[441005, 8086, 352, 7, 53, "Subtitle",ExpressionUUID->"920ed2ab-1111-41f2-93f7-97dad367888a"],
Cell[441360, 8095, 370, 8, 53, "Subtitle",ExpressionUUID->"fe427ce2-8a03-4e02-93ce-c32f5b20651b"],
Cell[441733, 8105, 414, 8, 85, "Subtitle",ExpressionUUID->"246a4760-e555-41bd-acbb-8b25913043e1"],
Cell[442150, 8115, 757, 13, 181, "Subtitle",ExpressionUUID->"aaff3c07-65c7-4ed4-a32b-871d7e471fa4"],
Cell[CellGroupData[{
Cell[442932, 8132, 907, 23, 28, "Input",ExpressionUUID->"b0323257-387f-48bc-a66c-851210d6d8a1"],
Cell[443842, 8157, 1728, 34, 453, "Output",ExpressionUUID->"64798b0b-ae48-4cc8-9c0c-48376f150788"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[445619, 8197, 917, 16, 149, "Subtitle",ExpressionUUID->"ae32e27e-120d-4314-a1f9-5e41dd3d7895"],
Cell[CellGroupData[{
Cell[446561, 8217, 1625, 41, 124, "Input",ExpressionUUID->"282b29e3-f878-46e3-b66e-c9c572ba7aa1"],
Cell[CellGroupData[{
Cell[448211, 8262, 437, 10, 22, "Print",ExpressionUUID->"096dff8a-cbe8-44d3-92b9-9aa008d3935b"],
Cell[448651, 8274, 513, 13, 22, "Print",ExpressionUUID->"39bc3e36-a97a-4086-8059-96eca8a827f9"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[449225, 8294, 268, 6, 53, "Subtitle",ExpressionUUID->"7e94606e-0d02-4204-a03e-4a3bb29145f6"],
Cell[CellGroupData[{
Cell[449518, 8304, 476, 11, 28, "Input",ExpressionUUID->"ecf25727-9c76-41e1-92fd-f70e2d0fb7c0"],
Cell[449997, 8317, 49204, 828, 235, "Output",ExpressionUUID->"285187fe-e4ea-4ddf-bd06-2a96d56750f7"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[499250, 9151, 710, 13, 149, "Subtitle",ExpressionUUID->"83b339ca-2619-40b4-85b2-d2109ec0fb09"],
Cell[CellGroupData[{
Cell[499985, 9168, 2482, 56, 238, "Input",ExpressionUUID->"3bd9d701-0757-4738-8da7-e38d81571aa9"],
Cell[CellGroupData[{
Cell[502492, 9228, 661, 12, 22, "Print",ExpressionUUID->"dd3869c8-8f00-4d48-b75b-9f87a610312a"],
Cell[503156, 9242, 810, 16, 22, "Print",ExpressionUUID->"20af6782-e2af-4753-befd-53d9f35273d9"],
Cell[503969, 9260, 771, 15, 22, "Print",ExpressionUUID->"f5619d9b-99ee-490c-96e0-cdfa55a63272"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[504801, 9282, 220, 6, 85, "Subtitle",ExpressionUUID->"d1a72b1f-daad-45d2-96ab-9d7c47075043"],
Cell[CellGroupData[{
Cell[505046, 9292, 2002, 50, 257, "Input",ExpressionUUID->"909d7e0c-9172-48fc-9011-d3899af39e0f"],
Cell[CellGroupData[{
Cell[507073, 9346, 494, 11, 22, "Print",ExpressionUUID->"22504081-c839-4f5d-963d-0c371f7474d8"],
Cell[507570, 9359, 482, 11, 22, "Print",ExpressionUUID->"19961858-fd02-4c32-9917-49e67992befd"],
Cell[508055, 9372, 308, 7, 22, "Print",ExpressionUUID->"e6fcf13a-c496-4b81-85b7-0fb3261b5dc7"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[508424, 9386, 204, 3, 53, "Subtitle",ExpressionUUID->"03b768a2-dd78-43e2-bb10-f88ccdf48efe"],
Cell[CellGroupData[{
Cell[508653, 9393, 1225, 29, 143, "Input",ExpressionUUID->"8b3fc9b3-02ec-47b4-9c6d-ad1f6b41b758"],
Cell[509881, 9424, 463, 11, 22, "Print",ExpressionUUID->"5bdb60a3-a5b5-43c2-83c0-118c892ba063"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[510393, 9441, 443, 10, 85, "Subtitle",ExpressionUUID->"8703d862-2c7a-4c8b-a5e4-672877b1da87"],
Cell[CellGroupData[{
Cell[510861, 9455, 1532, 36, 181, "Input",ExpressionUUID->"319f2b95-cc91-4650-b94c-0a45eb3cd545"],
Cell[CellGroupData[{
Cell[512418, 9495, 284, 6, 22, "Print",ExpressionUUID->"12940dbc-018f-4635-b0e1-449d191eacd8"],
Cell[512705, 9503, 255, 5, 22, "Print",ExpressionUUID->"ce1e8e35-1408-43aa-aca5-8bd730df2520"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[513021, 9515, 554, 9, 85, "Subtitle",ExpressionUUID->"a3573a80-d27d-45b6-97be-92b43319cc94"],
Cell[513578, 9526, 315, 8, 85, "Subtitle",ExpressionUUID->"f1c868e0-0835-47aa-9e80-eeba730dcf25"],
Cell[513896, 9536, 464, 12, 48, "Input",ExpressionUUID->"ca9a666d-035b-444f-8ed6-392758f41c15"],
Cell[CellGroupData[{
Cell[514385, 9552, 535, 14, 48, "Input",ExpressionUUID->"3035fdc1-e545-4dd6-a3bd-1a5aa93fea0b"],
Cell[514923, 9568, 1088, 32, 65, "Print",ExpressionUUID->"1ba2bb09-c780-4172-aca6-549ddafcec08"]
}, Open  ]],
Cell[CellGroupData[{
Cell[516048, 9605, 1613, 41, 143, "Input",ExpressionUUID->"7f21a60a-4a14-4907-96e7-aa7fac794b00"],
Cell[517664, 9648, 338, 7, 32, "Output",ExpressionUUID->"d91a04bd-e0a6-4353-ac40-e8b786d91013"],
Cell[518005, 9657, 326, 7, 32, "Output",ExpressionUUID->"ec073424-79b0-48cd-b208-092c85c646a5"],
Cell[518334, 9666, 278, 5, 32, "Output",ExpressionUUID->"4c4e208d-b812-42b3-bff1-9405718b7dfc"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[518661, 9677, 192, 3, 53, "Subtitle",ExpressionUUID->"4e4c48d8-e9ff-4221-adf8-c0cd107432b6"],
Cell[CellGroupData[{
Cell[518878, 9684, 263, 5, 28, "Input",ExpressionUUID->"fbf0b8d4-348a-4e52-acc8-70a86fcdcb29"],
Cell[519144, 9691, 712, 24, 80, "Print",ExpressionUUID->"87f7935e-1b55-497c-b31c-4931a268d4e1"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[519905, 9721, 183, 3, 53, "Subtitle",ExpressionUUID->"07161c86-c0eb-4d62-bde3-8f40278ec7bb"],
Cell[CellGroupData[{
Cell[520113, 9728, 1157, 26, 162, "Input",ExpressionUUID->"054c4f15-6d70-4fd5-9237-861d76103f1e"],
Cell[521273, 9756, 1396, 39, 243, "Output",ExpressionUUID->"e574ffbc-98ab-4faa-abc5-3e66f382d88d"],
Cell[522672, 9797, 2290, 52, 275, "Output",ExpressionUUID->"c7fe71d0-02cc-4669-8f3d-c978d9b705df"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[525011, 9855, 418, 10, 181, "Subtitle",ExpressionUUID->"c01426ad-b866-46fd-82b0-5787ad54045a"],
Cell[CellGroupData[{
Cell[525454, 9869, 1244, 31, 105, "Input",ExpressionUUID->"386aab8f-a40b-4aae-8734-9bf8ac0152bb"],
Cell[526701, 9902, 519, 11, 22, "Print",ExpressionUUID->"fd777c83-3c0b-43c5-b72a-f765036fa353"],
Cell[527223, 9915, 1520, 40, 243, "Output",ExpressionUUID->"280154e6-e329-478e-8708-5a246c555650"],
Cell[528746, 9957, 1492, 40, 243, "Output",ExpressionUUID->"cdbdabb2-65fa-4d7b-8a46-28d6f0fd6e02"],
Cell[530241, 9999, 1750, 44, 243, "Output",ExpressionUUID->"77c7d9d3-1792-4355-a436-4a847135f1b2"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[532040, 10049, 277, 7, 85, "Subtitle",ExpressionUUID->"6dd8a661-96a7-4b2c-b4f5-ea7ad412eb19"],
Cell[532320, 10058, 364, 8, 28, "Input",ExpressionUUID->"47682bba-ffa3-40f0-8350-dc77a438951b"],
Cell[CellGroupData[{
Cell[532709, 10070, 858, 22, 48, "Input",ExpressionUUID->"1bd3d476-31b9-4e4a-9a1e-36931c3d45ff"],
Cell[533570, 10094, 1774, 52, 80, "Print",ExpressionUUID->"56251b4a-36ca-4d9b-a48e-5b4e1e18b0ed"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[535393, 10152, 224, 5, 53, "Subtitle",ExpressionUUID->"defdc06e-6483-4937-a20f-49655e95ecec"],
Cell[CellGroupData[{
Cell[535642, 10161, 842, 23, 105, "Input",ExpressionUUID->"5604f0fd-85ce-4e44-992c-3f3c2c2cd3dd"],
Cell[CellGroupData[{
Cell[536509, 10188, 275, 7, 22, "Print",ExpressionUUID->"7efe80d3-9922-4f3e-a63b-ec056aa8377b"],
Cell[536787, 10197, 277, 7, 22, "Print",ExpressionUUID->"6b46d48f-bb37-4771-87c5-6e6998bf5a72"],
Cell[537067, 10206, 277, 7, 22, "Print",ExpressionUUID->"ac403213-b404-42cd-91a3-f947bf45331e"],
Cell[537347, 10215, 277, 7, 22, "Print",ExpressionUUID->"bb14954a-775f-4944-a062-01eddc373418"],
Cell[537627, 10224, 277, 7, 22, "Print",ExpressionUUID->"74a3e4c0-508e-4ba2-bc46-2b88d0ad8d12"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[537965, 10238, 296, 7, 53, "Subtitle",ExpressionUUID->"f65fd2d5-f433-4095-b238-d190d5ddfaee"],
Cell[CellGroupData[{
Cell[538286, 10249, 701, 21, 67, "Input",ExpressionUUID->"e0498d64-9a07-41a6-a72c-ac7db4357ea2"],
Cell[CellGroupData[{
Cell[539012, 10274, 199, 4, 22, "Print",ExpressionUUID->"8e9f1c82-722c-4ba0-9cae-09c6480056d8"],
Cell[539214, 10280, 201, 4, 22, "Print",ExpressionUUID->"b59797f5-1726-4018-a4ff-6a30d7121410"],
Cell[539418, 10286, 216, 5, 22, "Print",ExpressionUUID->"fabbc5f7-7553-4317-9b3d-9c79abc9ac77"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[539683, 10297, 765, 20, 48, "Input",ExpressionUUID->"68d14c08-5f14-4a79-9c1e-f3ef02e588ff"],
Cell[540451, 10319, 4927, 140, 140, "Print",ExpressionUUID->"3b0642b2-2dd3-431e-b925-f6c952846a2f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[545427, 10465, 386, 8, 53, "Subtitle",ExpressionUUID->"61b020be-1def-4480-826f-43fd1f27530b"],
Cell[545816, 10475, 303, 7, 28, "Input",ExpressionUUID->"b4781935-14df-4f7c-98c7-297dd97a56a2"],
Cell[CellGroupData[{
Cell[546144, 10486, 283, 7, 28, "Input",ExpressionUUID->"2f2c62f0-9ef1-456b-9e78-0a27cc1bbbdb"],
Cell[546430, 10495, 340, 10, 22, "Print",ExpressionUUID->"6ba830f0-f094-4012-a90b-2f510d0bf5fe"]
}, Open  ]],
Cell[CellGroupData[{
Cell[546807, 10510, 519, 14, 48, "Input",ExpressionUUID->"6c9d074d-d744-4ac0-a454-8706a3e97e4b"],
Cell[547329, 10526, 258, 6, 22, "Print",ExpressionUUID->"312b3f8a-db9f-4598-8b04-39d7eaec63f8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[547624, 10537, 525, 14, 48, "Input",ExpressionUUID->"f2568e36-3694-4c9f-8776-04b378b4c078"],
Cell[548152, 10553, 200, 4, 22, "Print",ExpressionUUID->"2b56dbb1-fd95-4e24-8710-e5aadda4958e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[548401, 10563, 298, 8, 85, "Subtitle",ExpressionUUID->"89231327-69c5-466d-b1b6-79d607572c3a"],
Cell[CellGroupData[{
Cell[548724, 10575, 1662, 47, 105, "Input",ExpressionUUID->"5d27ab9a-f9ec-46d1-bb00-fbb8885da48a"],
Cell[550389, 10624, 19556, 336, 377, "Output",ExpressionUUID->"c51c46e0-dcae-4d06-9610-1f8bd81baf19"],
Cell[569948, 10962, 19550, 336, 377, "Output",ExpressionUUID->"43562025-5122-40dd-ac32-07c5f3060d82"],
Cell[589501, 11300, 29141, 493, 327, "Output",ExpressionUUID->"15258e61-0e59-4ab4-8e28-6f2b0af5ae53"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[618691, 11799, 414, 9, 117, "Subtitle",ExpressionUUID->"cb0e90c8-40da-44be-9eed-28a81cffa58c"],
Cell[CellGroupData[{
Cell[619130, 11812, 807, 20, 124, "Input",ExpressionUUID->"dc45718c-e2e3-4685-a33c-a7d06e417895"],
Cell[CellGroupData[{
Cell[619962, 11836, 395, 9, 22, "Print",ExpressionUUID->"8e2701c7-25fd-418e-970f-0314c2ffe1c9"],
Cell[620360, 11847, 395, 9, 22, "Print",ExpressionUUID->"945b1051-7367-4a9a-9af6-a91c5a1df0df"],
Cell[620758, 11858, 395, 9, 22, "Print",ExpressionUUID->"edd68bc6-1240-494d-993d-5e6d5ab630ff"],
Cell[621156, 11869, 395, 9, 22, "Print",ExpressionUUID->"1c187e15-01e0-4913-8d2d-1b50c4616479"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[621600, 11884, 2296, 62, 238, "Input",ExpressionUUID->"32911530-8aa3-40fe-85f8-c68be74c0372"],
Cell[623899, 11948, 1037, 28, 65, "Print",ExpressionUUID->"ec808561-cd6d-4945-896e-3c0f0de67300"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[624985, 11982, 566, 11, 149, "Subtitle",ExpressionUUID->"5145cabb-2af6-4556-9933-e5be95475351"],
Cell[CellGroupData[{
Cell[625576, 11997, 924, 22, 105, "Input",ExpressionUUID->"a45d3fc6-c13f-4e00-a79e-fba628958d83"],
Cell[626503, 12021, 359, 7, 204, "Output",ExpressionUUID->"8e032674-fcbe-4d3a-b624-fec22f7342ae"],
Cell[626865, 12030, 283, 5, 204, "Output",ExpressionUUID->"4ef30300-0dcb-4515-8bce-4a6a8bdbc6ac"],
Cell[627151, 12037, 309, 6, 204, "Output",ExpressionUUID->"b71ead34-5ce7-4d81-b0ee-523df1ed66e2"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[627509, 12049, 1327, 21, 277, "Subtitle",ExpressionUUID->"f7cef123-b18c-4f94-bc33-e8612bfaaa04"],
Cell[CellGroupData[{
Cell[628861, 12074, 633, 16, 86, "Input",ExpressionUUID->"5a5c19f7-8216-4b38-afd7-52b854aa3f7b"],
Cell[629497, 12092, 210, 4, 22, "Print",ExpressionUUID->"136bfa2e-bde6-4210-b421-944e46141a66"],
Cell[629710, 12098, 1233, 20, 52, "Output",ExpressionUUID->"d1ad3ade-4e31-42a8-ab35-f21b948673f3"]
}, Open  ]],
Cell[630958, 12121, 543, 13, 67, "Input",ExpressionUUID->"76bc59c5-fda7-430f-8291-c72ac78bb93c"],
Cell[CellGroupData[{
Cell[631526, 12138, 551, 14, 67, "Input",ExpressionUUID->"8908a176-a6a6-48c0-a8ee-90d8aebf5c08"],
Cell[632080, 12154, 244, 4, 22, "Print",ExpressionUUID->"cfe8ca79-8140-4527-bdb9-db429fa4e013"],
Cell[632327, 12160, 1256, 20, 52, "Output",ExpressionUUID->"0ad0384e-7f35-47dc-b3d1-e3dfbdba2e81"]
}, Open  ]],
Cell[CellGroupData[{
Cell[633620, 12185, 1013, 25, 143, "Input",ExpressionUUID->"ef90d0a5-a308-4137-8843-354231790979"],
Cell[634636, 12212, 223, 4, 22, "Print",ExpressionUUID->"c764c75a-1b2d-40f1-a409-d2a45cbdf049"],
Cell[634862, 12218, 172, 4, 32, "Output",ExpressionUUID->"2e539373-efc8-4ae8-9d91-866e0914569f"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

